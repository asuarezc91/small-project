/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{clone as s}from"../core/lang.js";import{isNone as t,unwrapOr as o,unwrap as r}from"../core/maybe.js";import a from"../core/Logger.js";import{ensureType as i,ensureString as l,ensureNumber as n}from"../core/accessorSupport/ensureType.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import{cast as c}from"../core/accessorSupport/decorators/cast.js";import{JSONMap as p}from"../core/jsonMap.js";import{enumeration as m}from"../core/accessorSupport/decorators/enumeration.js";import{reader as d}from"../core/accessorSupport/decorators/reader.js";import{subclass as f}from"../core/accessorSupport/decorators/subclass.js";import{writer as h}from"../core/accessorSupport/decorators/writer.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{all as y}from"../core/promiseUtils.js";import{loadArcade as g}from"../support/arcadeOnDemand.js";import{collectArcadeFieldNames as b,collectField as k}from"../layers/support/fieldUtils.js";import{e as I}from"../chunks/symbols.js";import B from"./support/LegendOptions.js";import v from"./Renderer.js";import{VisualVariablesMixin as x}from"./mixins/VisualVariablesMixin.js";import S from"./support/ClassBreakInfo.js";import{rendererBackgroundFillSymbolProperty as F,rendererSymbolProperty as j}from"./support/commonProperties.js";var V;const z=a.getLogger("esri.renderers.ClassBreaksRenderer"),w=new p({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"}),E=i(S);let T=V=class extends(x(v)){constructor(e){super(e),this.backgroundFillSymbol=null,this.classBreakInfos=null,this.defaultLabel=null,this.defaultSymbol=null,this.field=null,this.isMaxInclusive=!0,this.legendOptions=null,this.normalizationField=null,this.normalizationTotal=null,this.type="class-breaks",this.valueExpression=null,this.valueExpressionTitle=null,this._set("classBreakInfos",[])}get _cache(){return{compiledFunc:null}}readClassBreakInfos(e,s,t){if(!Array.isArray(e))return;let o=s.minValue;return e.map((e=>{const s=new S;return s.read(e,t),null==s.minValue&&(s.minValue=o),null==s.maxValue&&(s.maxValue=s.minValue),o=s.maxValue,s}))}writeClassBreakInfos(e,s,t,o){const r=e.map((e=>e.write({},o)));this._areClassBreaksConsecutive()&&r.forEach((e=>delete e.classMinValue)),s[t]=r}castField(e){return null==e?e:"function"==typeof e?(z.error(".field: field must be a string value"),null):l(e)}get minValue(){return this.classBreakInfos&&this.classBreakInfos[0]&&this.classBreakInfos[0].minValue||0}get normalizationType(){let e=this._get("normalizationType");const s=!!this.normalizationField,t=null!=this.normalizationTotal;return s||t?(e=(s?"field":t&&"percent-of-total")||null,s&&t&&z.warn("warning: both normalizationField and normalizationTotal are set!")):"field"!==e&&"percent-of-total"!==e||(e=null),e}set normalizationType(e){this._set("normalizationType",e)}addClassBreakInfo(e,t,o){let r=null;r="number"==typeof e?new S({minValue:e,maxValue:t,symbol:I(o)}):E(s(e)),this.classBreakInfos.push(r),1===this.classBreakInfos.length&&this.notifyChange("minValue")}removeClassBreakInfo(e,s){const t=this.classBreakInfos.length;for(let o=0;o<t;o++){const t=[this.classBreakInfos[o].minValue,this.classBreakInfos[o].maxValue];if(t[0]===e&&t[1]===s){this.classBreakInfos.splice(o,1);break}}}getBreakIndex(e,s){return this.valueExpression&&(t(s)||t(s.arcade))&&z.warn(""),this.valueExpression?this._getBreakIndexForExpression(e,s):this._getBreakIndexForField(e)}async getClassBreakInfo(e,s){let o=s;this.valueExpression&&(t(s)||t(s.arcade))&&(o={...o,arcade:await g()});const r=this.getBreakIndex(e,o);return-1!==r?this.classBreakInfos[r]:null}getSymbol(e,s){if(this.valueExpression&&(t(s)||t(s.arcade)))return void z.error("#getSymbol()","Please use getSymbolAsync if valueExpression is used");const o=this.getBreakIndex(e,s);return o>-1?this.classBreakInfos[o].symbol:this.defaultSymbol}async getSymbolAsync(e,s){let o=s;this.valueExpression&&(t(s)||t(s.arcade))&&(o={...o,arcade:await g()});const r=this.getBreakIndex(e,o);return r>-1?this.classBreakInfos[r].symbol:this.defaultSymbol}getSymbols(){const e=[];return this.classBreakInfos.forEach((s=>{s.symbol&&e.push(s.symbol)})),this.defaultSymbol&&e.push(this.defaultSymbol),e}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce(((e,s)=>e+s.getAttributeHash()),"")}getMeshHash(){const e=JSON.stringify(this.backgroundFillSymbol),s=JSON.stringify(this.defaultSymbol),t=`${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;return`${e}.${s}.${this.classBreakInfos.reduce(((e,s)=>e+s.getMeshHash()),"")}.${t}.${this.field}.${this.valueExpression}`}get arcadeRequired(){return this.arcadeRequiredForVisualVariables||!!this.valueExpression}clone(){return new V({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol&&this.backgroundFillSymbol.clone(),defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol&&this.defaultSymbol.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:s(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:s(this.visualVariables),legendOptions:s(this.legendOptions),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}async collectRequiredFields(e,s){const t=[this.collectVVRequiredFields(e,s),this.collectSymbolFields(e,s)];await y(t)}async collectSymbolFields(e,s){const t=[...this.getSymbols().map((t=>t.collectRequiredFields(e,s))),b(e,s,this.valueExpression)];k(e,s,this.field),k(e,s,this.normalizationField),await y(t)}_getBreakIndexForExpression(e,s){const{viewingMode:t,scale:a,spatialReference:i,arcade:l}=o(s,{});let n=this._cache.compiledFunc;const u=r(l).arcadeUtils;if(!n){const e=u.createSyntaxTree(this.valueExpression);n=u.createFunction(e),this._cache.compiledFunc=n}const c=u.executeFunction(n,u.createExecContext(e,u.getViewInfo({viewingMode:t,scale:a,spatialReference:i})));return this._getBreakIndexfromInfos(c)}_getBreakIndexForField(e){const s=this.field,t=e.attributes,o=this.normalizationType;let r=parseFloat(t[s]);if(o){const e=this.normalizationTotal,s=parseFloat(t[this.normalizationField]);if("log"===o)r=Math.log(r)*Math.LOG10E;else if("percent-of-total"!==o||isNaN(e)){if("field"===o&&!isNaN(s)){if(isNaN(r)||isNaN(s))return-1;r/=s}}else r=r/e*100}return this._getBreakIndexfromInfos(r)}_getBreakIndexfromInfos(e){const s=this.isMaxInclusive;if(null!=e&&"number"==typeof e&&!isNaN(e))for(let t=0;t<this.classBreakInfos.length;t++){const o=[this.classBreakInfos[t].minValue,this.classBreakInfos[t].maxValue];if(o[0]<=e&&(s?e<=o[1]:e<o[1]))return t}return-1}_areClassBreaksConsecutive(){const e=this.classBreakInfos,s=e.length;for(let t=1;t<s;t++)if(e[t-1].maxValue!==e[t].minValue)return!1;return!0}};e([u({readOnly:!0,dependsOn:["valueExpression"]})],T.prototype,"_cache",null),e([u(F)],T.prototype,"backgroundFillSymbol",void 0),e([u({type:[S]})],T.prototype,"classBreakInfos",void 0),e([d("classBreakInfos")],T.prototype,"readClassBreakInfos",null),e([h("classBreakInfos")],T.prototype,"writeClassBreakInfos",null),e([u({type:String,json:{write:!0}})],T.prototype,"defaultLabel",void 0),e([u(j)],T.prototype,"defaultSymbol",void 0),e([u({type:String,json:{write:!0}})],T.prototype,"field",void 0),e([c("field")],T.prototype,"castField",null),e([u({type:Boolean})],T.prototype,"isMaxInclusive",void 0),e([u({type:B,json:{write:!0}})],T.prototype,"legendOptions",void 0),e([u({type:Number,readOnly:!0,value:null,dependsOn:["classBreakInfos"],json:{read:!1,write:{overridePolicy(){return 0!==this.classBreakInfos.length&&this._areClassBreaksConsecutive()?{enabled:!0}:{enabled:!1}}}}})],T.prototype,"minValue",null),e([u({type:String,json:{write:!0}})],T.prototype,"normalizationField",void 0),e([u({type:Number,cast:e=>n(e),json:{write:!0}})],T.prototype,"normalizationTotal",void 0),e([u({type:w.apiValues,value:null,dependsOn:["normalizationField","normalizationTotal"],json:{type:w.jsonValues,read:w.read,write:w.write}})],T.prototype,"normalizationType",null),e([m({classBreaks:"class-breaks"})],T.prototype,"type",void 0),e([u({type:String,json:{write:!0}})],T.prototype,"valueExpression",void 0),e([u({type:String,json:{write:!0}})],T.prototype,"valueExpressionTitle",void 0),T=V=e([f("esri.renderers.ClassBreaksRenderer")],T);var C=T;export default C;
