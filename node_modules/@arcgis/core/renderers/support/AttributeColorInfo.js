/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import"../../core/has.js";import o from"../../core/Logger.js";import{ensureString as e}from"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{cast as s}from"../../core/accessorSupport/decorators/cast.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as l}from"../../core/JSONSupport.js";import p from"../../Color.js";var n;const u=o.getLogger("esri.renderers.support.AttributeColorInfo");let c=n=class extends l{constructor(r){super(r),this.color=null,this.field=null,this.label=null,this.valueExpression=null,this.valueExpressionTitle=null}castField(r){return null==r?r:"function"==typeof r?(u.error(".field: field must be a string value"),null):e(r)}getAttributeHash(){return`${this.field}-${this.valueExpression}`}clone(){return new n({color:this.color&&this.color.clone(),field:this.field,label:this.label,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle})}};r([t({type:p,json:{type:[Number],write:!0}})],c.prototype,"color",void 0),r([t({type:String,json:{write:!0}})],c.prototype,"field",void 0),r([s("field")],c.prototype,"castField",null),r([t({type:String,json:{write:!0}})],c.prototype,"label",void 0),r([t({type:String,json:{write:!0}})],c.prototype,"valueExpression",void 0),r([t({type:String,json:{write:!0}})],c.prototype,"valueExpressionTitle",void 0),c=n=r([i("esri.renderers.support.AttributeColorInfo")],c);var a=c;export default a;
