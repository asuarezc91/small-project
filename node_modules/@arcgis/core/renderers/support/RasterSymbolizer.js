/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{unwrap as t,isSome as r}from"../../core/maybe.js";import s from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as i}from"../../core/JSONSupport.js";import{toHSV as n}from"../../core/colorUtils.js";import{convertColorRampToColormap as l}from"./colorRampUtils.js";import u from"../../layers/support/RasterInfo.js";import{extractBands as c,stretch as p,colorize as h,remapColor as m,createStretchLUT as f,lookupPixels as d,createColormapLUT as b,estimateStatisticsHistograms as g}from"../../layers/support/rasterFunctions/pixelUtils.js";import{hillshade as S,tintHillshade as x,calculateHillshadeParams as y}from"../../layers/support/rasterFunctions/surfaceUtils.js";const k=s.getLogger("esri.renderers.support.RasterSymbolizer");const C={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};let O=class extends i{constructor(e){super(e)}bind(){const{rendererJSON:e}=this;if(!e)return!1;let t;switch(this.lookup={rendererJSON:{}},e.type){case"uniqueValue":t=this._updateUVRenderer(e);break;case"rasterColormap":t=this._updateColormapRenderer(e);break;case"rasterStretch":t=this._updateStretchRenderer(e);break;case"classBreaks":t=this._updateClassBreaksRenderer(e);break;case"rasterShadedRelief":t=this._updateShadedReliefRenderer(e)}return t}symbolize(e){let t=e&&e.pixelBlock;if(!this.isValidPixelBlock(t))return t;if(e.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=c(t,[0,1,2])),this.rendererJSON.type){case"uniqueValue":case"rasterColormap":r=this._symbolize_colormap(t);break;case"classBreaks":r=this._symbolize_classBreaks(t);break;case"rasterStretch":r=this._symbolize_stretch(t,e.bandIds);break;case"rasterShadedRelief":{const{extent:s}=e,o=s.spatialReference.isGeographic,a={x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height};r=this._symbolize_shadedRelief(t,{isGCS:o,resolution:a});break}}return r}catch(e){return k.error("symbolize",e.message),t}}simpleStretch(e,t){if(!this.isValidPixelBlock(e))return e;try{return e.pixels.length>3&&(e=c(e,[0,1,2])),p(e,t)}catch(t){return k.error("symbolize",t.message),e}}generateWebGLParameters(e){if(["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)>-1){const{indexedColormap:e,offset:t}=this.lookup.colormapLut;return{colormap:e,colormapOffset:t,type:"lut"}}const{pixelBlock:t,isGCS:r,resolution:s,bandIds:o}=e,{rendererJSON:a}=this;return"rasterStretch"===a.type?this.generateStretchWebGLParams(t,a,o):"rasterShadedRelief"===a.type?this.generateShadedReliefWebGLParams(a,r,s):null}_isLUTChanged(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const t=this.rendererJSON.colorRamp;if(e)return JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp);const r={...this.rendererJSON},s={...this.lookup.rendererJSON};return r.colorRamp=null,s.colorRamp=null,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}_symbolize_colormap(e){if(this._isLUTChanged()){if(!this.bind())return e}return h(e,this.lookup.colormapLut)}_symbolize_classBreaks(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1;let s;if(this._isLUTChanged()){if(!this.bind())return e}return s=r?h(e,this.lookup.colormapLut):m(e,this.lookup.remapLut),s}_symbolize_stretch(e,t){const{pixelType:r,bandCount:s}=this.rasterInfo,o=this.rendererJSON,a=["u8","u16","s8","s16"].indexOf(r)>-1;let i,n;const{gamma:l,useGamma:u}=o;if(a){var c;if(o.dra){const s=this.getStretchCutoff(o,e,t);i=f({pixelType:r,...s,gamma:u?l:null})}else if(this._isLUTChanged()){if(!this.bind())return e;i=this.lookup?this.lookup.stretchLut:null}else i=this.lookup?this.lookup.stretchLut:null;if(!i)return e;s>1&&(null==t?void 0:t.length)===e.pixels.length&&(null==(c=i)?void 0:c.lut.length)===s&&(i={lut:t.map((e=>i.lut[e])),offset:i.offset}),n=d(e,i)}else{const r=this.getStretchCutoff(o,e,t);n=p(e,{...r,gamma:u?l:null})}if(o.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind())return e}n=h(n,this.lookup.colormapLut)}return n}_symbolize_shadedRelief(e,r){var s,o;const a=this.rendererJSON,i={...a,...r},n=S(e,i);if(!a.colorRamp)return n;let l;if(this._isLUTChanged(!0)){if(!this.bind())return n;l=this.lookup?this.lookup.hsvMap:null}else l=this.lookup?this.lookup.hsvMap:null;if(!l)return n;const u=null!=(s=null==(o=t(this.rasterInfo.statistics))?void 0:o[0])?s:{min:0,max:8e3};return x(n,e,l,u),n}_updateUVRenderer(e){const{bandCount:t,attributeTable:s,statistics:o,pixelType:a}=this.rasterInfo,i=e.field1;if(!i)return!1;const n=["u8","s8"].indexOf(a)>-1&&o&&null!=o[0].min&&null!=o[0].max;if(!(function(e,t){const{attributeTable:s,bandCount:o}=e;if(!r(s)||o>1)return!1;if(t&&null==s.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1;return!0}(this.rasterInfo,i)||1===t&&n))return!1;const l=[];if(s){const t=s.fields.filter((e=>"value"===e.name.toLowerCase()))[0];if(!t)return!1;s.features.forEach((r=>{var s;const o=e.uniqueValueInfos.filter((e=>String(e.value)===String(r.attributes[i])))[0],a=null==o||null==(s=o.symbol)?void 0:s.color;a&&l.push([r.attributes[t.name]].concat(a))}))}else{if("value"!==i.toLowerCase())return!1;e.uniqueValueInfos.forEach((e=>{var t;const r=null==e||null==(t=e.symbol)?void 0:t.color;r&&l.push([parseInt(""+e.value,10)].concat(r))}))}if(0===l.length)return!1;const u=b({colormap:l});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0}_updateColormapRenderer(e){if(!function(e){const{bandCount:t,colormap:s}=e;return r(s)&&s.length&&1===t}(this.rasterInfo))return!1;const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return!1;const s=b({colormap:t});return this.lookup={rendererJSON:e,colormapLut:s},this.canRenderInWebGL=!0,!0}_updateShadedReliefRenderer(e){if("elevation"!==this.rasterInfo.dataType)return!1;if(e.colorRamp){const t=l(e.colorRamp,256,!0),r=b({colormap:t}),s=[],o=r.indexedColormap;for(let e=0;e<o.length;e+=4){const t=n({r:o[e],g:o[e+1],b:o[e+2]});s.push([t.h/60,t.s/100,255*t.v/100])}this.lookup={rendererJSON:e,colormapLut:r,hsvMap:s}}else this.lookup=null;return this.canRenderInWebGL=!0,!0}_updateClassBreaksRenderer(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1,s=e.classBreakInfos;if(null==s||!s.length)return!1;const o=s.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),a=o[o.length-1];let i=e.minValue;if(!r){const t=[];for(let e=0;e<o.length;e++){var n;t.push({value:null!=(n=o[e].classMinValue)?n:i,mappedColor:o[e].symbol.color}),i=o[e].classMaxValue}return t.push({value:a.classMaxValue,mappedColor:a.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,!0}const l=[];i=e.minValue;for(let e=0;e<o.length;e++){const t=o[e];for(let e=i;e<t.classMaxValue;e++)l.push([e].concat(t.symbol.color));i=t.classMaxValue}l.push([a.classMaxValue].concat(a.symbol.color));const u=b({colormap:l,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0}_updateStretchRenderer(e){if(!("none"===e.stretchType||e.statistics||this.rasterInfo.statistics||e.dra))return!1;const t=e.histograms||this.rasterInfo.histograms;if(!e.dra&&"percentClip"===e.stretchType&&!t)return!1;const{gamma:r,useGamma:s,colorRamp:o}=e,a=this.rasterInfo.pixelType;if(!e.dra&&["u8","u16","s8","s16"].indexOf(a)>-1){const t=this.getStretchCutoff(e),o=f({pixelType:a,...t,gamma:s?r:null});this.lookup={rendererJSON:e,stretchLut:o}}if(o){const t=l(o,256,!0);this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=b({colormap:t}),this.lookup.rendererJSON=e}return this.canRenderInWebGL=!0,!0}getStretchCutoff(e,r,s){let o,a;const i=e.stretchType;var n;if(e.dra)if("minMax"===i&&r.statistics)o=r.statistics.map((e=>[e.minValue,e.maxValue,0,0]));else{const e=g(r);o=e.statistics,a=e.histograms}else o=(null==(n=e.statistics)?void 0:n.length)>0?e.statistics:t(this.rasterInfo.statistics),a=e.histograms||t(this.rasterInfo.histograms);const l=o||a?(o||a).length:this.rasterInfo.bandCount,u=[],c=[];let p,h,m,f,d,b,S,x,y;switch(o&&!Array.isArray(o[0])&&(o=o.map((e=>[e.min,e.max,e.avg,e.stddev]))),i){case"none":{const e=C[this.rasterInfo.pixelType]||C.f32;for(x=0;x<l;x++)u[x]=e[0],c[x]=e[1]}break;case"minMax":for(x=0;x<l;x++)u[x]=o[x][0],c[x]=o[x][1];break;case"standardDeviation":for(x=0;x<l;x++)u[x]=o[x][2]-e.numberOfStandardDeviations*o[x][3],c[x]=o[x][2]+e.numberOfStandardDeviations*o[x][3],u[x]<o[x][0]&&(u[x]=o[x][0]),c[x]>o[x][1]&&(c[x]=o[x][1]);break;case"percentClip":for(x=0;x<a.length;x++){for(p=a[x],d=new Uint32Array(p.size),f=p.counts,m=0,h=(p.max-p.min)/p.size,S=-.5===p.min&&1===h?.5:0,y=0;y<p.size;y++)m+=f[y],d[y]=m;for(b=e.minPercent*m/100,y=0;y<p.size;y++)if(d[y]>b){u[x]=p.min+h*(y+S);break}for(b=(1-e.maxPercent/100)*m,y=p.size-2;y>=0;y--)if(d[y]<b){c[x]=p.min+h*(y+2-S);break}}break;default:for(x=0;x<l;x++)u[x]=o[x][0],c[x]=o[x][1]}const k={minCutOff:u,maxCutOff:c,outMax:e.max||255,outMin:e.min||0};return this.getSelectedBandCutoffs(k,s)}getSelectedBandCutoffs(e,t){if(null==t||0===t.length)return e;const r=Math.max.apply(null,t),{minCutOff:s,maxCutOff:o,outMin:a,outMax:i}=e;return s.length===t.length||s.length<=r?e:{minCutOff:t.map((e=>s[e])),maxCutOff:t.map((e=>o[e])),outMin:a,outMax:i}}generateStretchWebGLParams(e,t,r){let s=null,o=null;const a=this.lookup&&this.lookup.colormapLut;t.colorRamp&&a&&(s=a.indexedColormap,o=a.offset);const{gamma:i}=t,n=!!(t.useGamma&&i&&i.some((e=>1!==e))),{minCutOff:l,maxCutOff:u,outMin:c,outMax:p}=this.getStretchCutoff(t,e,r);e&&e.pixels&&2===e.pixels.length&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]);const h=Math.min(3,r&&r.length||e&&e.getPlaneCount()||this.rasterInfo.bandCount),m=new Float32Array(h),f=s||n?1:255;let d;for(d=0;d<h;d++)m[d]=(p-c)/(u[d]-l[d])/f;const b=new Float32Array(h);if(n)for(d=0;d<h;d++)i[d]>1?i[d]>2?b[d]=6.5+Math.pow(i[d]-2,2.5):b[d]=6.5+100*Math.pow(2-i[d],4):b[d]=1;return{bandCount:h,outMin:c/f,outMax:p/f,minCutOff:l,maxCutOff:u,factor:m,useGamma:n,gamma:n?i:[1,1,1],gammaCorrection:n?b:[1,1,1],colormap:s,colormapOffset:o,type:"stretch"}}generateShadedReliefWebGLParams(e,r,s){var o,a,i;let n=null,l=null;const u=this.lookup&&this.lookup.colormapLut;e.colorRamp&&u&&(n=u.indexedColormap,l=u.offset);const c={...e,isGCS:r,resolution:s},p=y(c),h=null==(o=t(this.rasterInfo.statistics))?void 0:o[0];return{...p,minValue:null!=(a=h.min)?a:0,maxValue:null!=(i=h.max)?i:8e3,hillshadeType:"traditional"===e.hillshadeType?0:1,type:"hillshade",colormap:n,colormapOffset:l}}isValidPixelBlock(e){return!!(e&&e.pixels&&e.pixels.length>0&&0!==e.validPixelCount)}};e([o({json:{write:!0}})],O.prototype,"rendererJSON",void 0),e([o({type:u,json:{write:!0}})],O.prototype,"rasterInfo",void 0),e([o({json:{write:!0}})],O.prototype,"lookup",void 0),e([o({})],O.prototype,"canRenderInWebGL",void 0),O=e([a("esri.renderers.support.RasterSymbolizer")],O);var R=O;export default R;
