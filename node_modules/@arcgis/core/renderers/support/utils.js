/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../core/Logger.js";import{unique as n}from"../../core/arrayUtils.js";import{convertDateFormatToIntlOptions as l,formatDate as t}from"../../intl/date.js";import a from"../visualVariables/support/ColorStop.js";import{format as i,round as o}from"./numberUtils.js";const r=e.getLogger("esri.renderers.support.utils"),s="<",u=">",d="%",m="â€“",f={millisecond:0,second:1,minute:2,hour:3,day:4,month:5,year:6},p={millisecond:"long-month-day-year-long-time",second:"long-month-day-year-long-time",minute:"long-month-day-year-short-time",hour:"long-month-day-year-short-time",day:"long-month-day-year",month:"long-month-day-year",year:"year"},c=l("short-date");function h(e,n,l){let t="";return 0===n?t=s+" ":n===l&&(t=u+" "),t+e}function y(e){const{values:n,colors:l,labelIndexes:o,isDate:r,dateFormatOptions:s}=e;return n.map(((e,u)=>{let d=null;if(!o||o.indexOf(u)>-1){let l;l=r?t(e,s):i(e),l&&(d=h(l,u,n.length-1))}return new a({value:e,color:l[u],label:d})}))}function g(e){const{stops:n,changes:l,isDate:a,dateFormatOptions:r}=e,s=n.map((e=>e.value)),u=[];for(const e of l)u.push(e.index),s[e.index]=e.value;const d=o(s,{indexes:u});n.forEach(((e,l)=>{if(e.value=s[l],null!=e.label){let o,s=null;o=a?t(d[l],r):i(d[l]),o&&(s=h(o,l,n.length-1)),e.label=s}}))}function x(e){let n=e.minValue,l=e.maxValue;const t=e.isFirstBreak?"":u+" ",a="percent-of-total"===e.normalizationType?d:"";return n=null==n?"":i(n),l=null==l?"":i(l),t+n+a+" "+m+" "+l+a}function V(e){const n=e.classBreakInfos,l=e.normalizationType;let t=[];if(n&&n.length)if("standard-deviation"!==e.classificationMethod)if(e.round){t.push(n[0].minValue);for(const e of n)t.push(e.maxValue);t=o(t),n.forEach(((e,n)=>{e.label=x({minValue:0===n?t[0]:t[n],maxValue:t[n+1],isFirstBreak:0===n,normalizationType:l})}))}else n.forEach(((e,n)=>{e.label=x({minValue:e.minValue,maxValue:e.maxValue,isFirstBreak:0===n,normalizationType:l})}));else r.warn("setLabelsForClassBreaks","cannot set labels for class breaks generated using 'standard-deviation' method.")}function b(e){if("standard-deviation"===e.classificationMethod)return void r.warn("updateClassBreak","cannot update labels for class breaks generated using 'standard-deviation' method.");const n=e.classBreaks,l=e.change,t=l.index,a=l.value,i=n.length;let o=-1,s=-1;0===t?o=t:t===i?s=t-1:(s=t-1,o=t);const u=e.normalizationType;let d=null;o>-1&&o<i&&(d=n[o],d.minValue=a,d.label=x({minValue:d.minValue,maxValue:d.maxValue,isFirstBreak:0===o,normalizationType:u})),s>-1&&s<i&&(d=n[s],d.maxValue=a,d.label=x({minValue:d.minValue,maxValue:d.maxValue,isFirstBreak:0===s,normalizationType:u}))}function v(e){const n=e.map((e=>new Date(e))),l=n.length;let t=1/0,a=null;for(let e=0;e<l-1;e++){const i=n[e];let o=1/0,r=null;for(let t=e+1;t<l;t++){const e=n[t],l=(i.getFullYear()!==e.getFullYear()?"year":i.getMonth()!==e.getMonth()&&"month")||i.getDate()!==e.getDate()&&"day"||i.getHours()!==e.getHours()&&"hour"||i.getMinutes()!==e.getMinutes()&&"minute"||i.getSeconds()!==e.getSeconds()&&"second"||"millisecond",a=f[l];a<o&&(o=a,r=l)}o<t&&(t=o,a=r)}return a}function F(e){const{value:n,domain:a,fieldInfo:o,dateFormatInterval:r}=e;let s=String(n);const u=a&&"codedValues"in a&&a.codedValues?a.getName(n):null;return u?s=u:"number"==typeof n&&(s=o&&"date"===o.type?t(n,r&&l(p[r])):i(n)),s}function z(e,n){return"normalizationField"in e&&e.normalizationField?(l=e.field,t=e.normalizationField,{type:"normalized-field",field:l,normalizationField:t}):"field"in e&&e.field?k(e.field):"valueExpression"in e&&e.valueExpression?(a=e.valueExpression,i=e.valueExpressionTitle,{type:"expression",expression:a,title:i,returnType:n}):null;var l,t,a,i}function k(e){return{type:"field",field:e}}function B(e,l){const t=[];if("class-breaks"===e.type||"heatmap"===e.type)t.push(z(e,"number"));else if("unique-value"===e.type){const n=e.authoringInfo;if(n&&"relationship"===n.type){if(n.field1&&n.field2){const e=n.field1.field,l=n.field2.field,a=n.field1.normalizationField,i=n.field2.normalizationField;t.push(z({field:e,normalizationField:a})),t.push(z({field:l,normalizationField:i}))}}else{const n=e.uniqueValueInfos[0];let l=null;if(n&&n.value){const n=typeof e.uniqueValueInfos[0].value;"string"!==n&&"number"!==n||(l=n)}t.push(z(e,l)),[e.field2,e.field3].forEach((e=>e&&t.push(k(e))))}}else"dot-density"===e.type&&e.attributes.forEach((e=>t.push(z(e,"number"))));const a=l?l(e):"visualVariables"in e?e.visualVariables:null;return a&&a.forEach((e=>t.push(z(e,"number")))),n(t.filter(Boolean),((e,n)=>"field"===e.type&&"field"===n.type?e.field===n.field:"normalized-field"===e.type&&"normalized-field"===n.type?e.field===n.field&&e.normalizationField===n.normalizationField:"expression"===e.type&&"expression"===n.type&&e.expression===n.expression))}export{v as calculateDateFormatInterval,x as createClassBreakLabel,y as createColorStops,F as createUniqueValueLabel,z as getAttribute,B as getAttributes,V as setLabelsForClassBreaks,c as timelineDateFormatOptions,b as updateClassBreak,g as updateColorStops};
