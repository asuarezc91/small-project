/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import r from"../../core/Logger.js";import{ensureString as o}from"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{cast as s}from"../../core/accessorSupport/decorators/cast.js";import{JSONMap as i}from"../../core/jsonMap.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as l}from"../../core/JSONSupport.js";import n from"./support/VisualVariableLegendOptions.js";const a=r.getLogger("esri.renderers.visualVariables.VisualVariable"),u=new i({colorInfo:"color",transparencyInfo:"opacity",rotationInfo:"rotation",sizeInfo:"size"});let c=class extends l{constructor(e){super(e),this.index=null,this.type=null,this.field=null,this.valueExpression=null,this.valueExpressionTitle=null,this.legendOptions=null}castField(e){return null==e?e:"function"==typeof e?(a.error(".field: field must be a string value"),null):o(e)}get arcadeRequired(){return!!this.valueExpression}clone(){}getAttributeHash(){return`${this.type}-${this.field}-${this.valueExpression}`}};e([t()],c.prototype,"index",void 0),e([t({type:u.apiValues,readOnly:!0,json:{read:u.read,write:u.write}})],c.prototype,"type",void 0),e([t({type:String,json:{write:!0}})],c.prototype,"field",void 0),e([s("field")],c.prototype,"castField",null),e([t({type:String,json:{write:!0}})],c.prototype,"valueExpression",void 0),e([t({type:String,json:{write:!0}})],c.prototype,"valueExpressionTitle",void 0),e([t({readOnly:!0,dependsOn:["valueExpression"]})],c.prototype,"arcadeRequired",null),e([t({type:n,json:{write:!0}})],c.prototype,"legendOptions",void 0),c=e([p("esri.renderers.visualVariables.VisualVariable")],c);var d=c;export default d;
