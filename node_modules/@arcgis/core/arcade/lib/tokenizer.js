/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{ErrorHandler as e}from"./error-handler.js";import{Scanner as t}from"./scanner.js";import{TokenName as s}from"./token.js";class n{constructor(){this.values=[],this.curly=this.paren=-1}beforeFunctionExpression(e){return["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","**","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="].indexOf(e)>=0}isRegexStart(){const e=this.values[this.values.length-1];let t=null!==e;switch(e){case"this":case"]":t=!1;break;case")":{const e=this.values[this.paren-1];t="if"===e||"while"===e||"for"===e||"with"===e;break}case"}":if(t=!0,"function"===this.values[this.curly-3]){const e=this.values[this.curly-4];t=!!e&&!this.beforeFunctionExpression(e)}else if("function"===this.values[this.curly-4]){const e=this.values[this.curly-5];t=!e||!this.beforeFunctionExpression(e)}}return t}push(e){7===e.type||4===e.type?("{"===e.value?this.curly=this.values.length:"("===e.value&&(this.paren=this.values.length),this.values.push(e.value)):this.values.push(null)}}class r{constructor(s,r){this.errorHandler=new e,this.errorHandler.tolerant=!!r&&("boolean"==typeof r.tolerant&&r.tolerant),this.scanner=new t(s,this.errorHandler),this.scanner.trackComment=!!r&&("boolean"==typeof r.comment&&r.comment),this.trackRange=!!r&&("boolean"==typeof r.range&&r.range),this.trackLoc=!!r&&("boolean"==typeof r.loc&&r.loc),this.buffer=[],this.reader=new n}errors(){return this.errorHandler.errors}getNextToken(){if(0===this.buffer.length){const e=this.scanner.scanComments();if(this.scanner.trackComment)for(let t=0;t<e.length;++t){const s=e[t],n=this.scanner.source.slice(s.slice[0],s.slice[1]),r={type:s.multiLine?"BlockComment":"LineComment",value:n};this.trackRange&&(r.range=s.range),this.trackLoc&&(r.loc=s.loc),this.buffer.push(r)}if(!this.scanner.eof()){let e;this.trackLoc&&(e={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}});let t;if("/"===this.scanner.source[this.scanner.index]&&this.reader.isRegexStart()){const e=this.scanner.saveState();try{t=this.scanner.scanRegExp()}catch(s){this.scanner.restoreState(e),t=this.scanner.lex()}}else t=this.scanner.lex();this.reader.push(t);const n={type:s[t.type],value:this.scanner.source.slice(t.start,t.end)};if(this.trackRange&&(n.range=[t.start,t.end]),this.trackLoc&&(e.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},n.loc=e),9===t.type){const e=t.pattern,s=t.flags;n.regex={pattern:e,flags:s}}this.buffer.push(n)}}return this.buffer.shift()}}export{r as Tokenizer};
