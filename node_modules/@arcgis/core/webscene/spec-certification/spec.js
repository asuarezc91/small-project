/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{resolve as t,reject as r}from"../../core/promiseUtils.js";import{json as n}from"../../portal/schemas/webScene.js";import{ScanContext as s,sorted as i}from"./utils.js";function a(e){return"array"===e.type?`${a(e.items)}[]`:e.type}async function o(e,t,r,n,s){s.schemaStack.push(e);const i=function(e,t){if(t.properties){if("layerType"in t.properties)return t.properties.layerType.enum[0];if("type"in t.properties)return t.properties.type.enum[0]}switch(e){case"multipoint_geometry_schema.json":return"multipoint";case"point_geometry_schema.json":return"point";case"polyline_geometry_schema.json":return"polyline";case"polygon_geometry_schema.json":return"polygon";case"extent_schema.json":return"extent"}}(e,r);if(n=n?n.replace("<?TYPE?>",i?`<${i}>`:""):null,function(e){return"array"===e.type||!("properties"in e)}(r)){const i=s.currentClass?null:{type:e,name:e,id:`${e}--${t}`,typeValue:t,properties:[]};return i&&s.push(null,i),await w(r,n,s),s.schemaStack.pop(),i}const a=function(e,t,r){return r.hasFilteredProperties?`${e}--${t}--${r.filteredPropertiesArray.join("/")}`:`${e}--${t}`}(e,t,s),o="drawingInfo_schema.json"!==e&&"layer_schema.json"!==e&&s.seen.get(a);if(o&&n)return s.addProperty({name:n,type:o}),s.schemaStack.pop(),o;const c={type:e,name:e,id:a,typeValue:t,properties:[]};return n&&s.addProperty({name:n,type:c}),s.push(n,c),await w(r,"",s),s.schemaStack.pop(),s.pop()}async function c(e,t,r){const n=await r.requestSchema(e.$ref),s=function(e){if("layerDefinition"===e.title)return null;const t=e.properties&&e.properties.type;if(!t||!t.enum)return null;return t.enum}(n.schema);if(s){for(const e of s){const s={...n.schema};s.properties={...s.properties,type:{type:"string",enum:[e]}};const i=-1===t.indexOf("<?TYPE?>")?`${t}<?TYPE?>`:t;await o(n.schemaId,e,s,i,r)}return}const i="layer_schema.json"===n.schemaId&&r.schemaStack.length?r.schemaStack[r.schemaStack.length-1].replace(/_schema\.json/,""):null;await o(n.schemaId,i,n.schema,t,r)}function l(e){return e.currentClass&&"drawingInfo_schema.json"===e.currentClass.name}const p=/raster.*Renderer|vectorFieldRenderer/,f=/(uniqueValueRenderer|classBreaksRenderer|raster.*Renderer|vectorFieldRenderer)/,u=/(rasterUniqueValueRenderer|rasterClassBreaksRenderer)/;function h(e,t,r){if(l(r)){const n=function(e,t){if(!l(e))return!1;const r=e.stack.map((e=>e.klass.type)).join("/");return/.*pointCloudLayer_schema\.json\/layerDefinition_schema\.json\/drawingInfo_schema\.json$/.test(r)&&"renderer"===t}(r,t),s=function(e,t){if(!l(e))return!1;const r=e.stack.map((e=>e.klass.type)).join("/");return/.*(imageServiceLayer|tiledImageServiceLayer)_schema\.json\/layerDefinition_schema\.json\/drawingInfo_schema\.json$/.test(r)&&"renderer"===t}(r,t);return e.filter((e=>{if(/uniqueValueFromStyleRenderer_schema\.json$/.test(e.$ref))return!1;if(s)return f.test(e.$ref)&&!u.test(e.$ref);if(p.test(e.$ref))return!1;const t=/pointCloud.*Renderer/.test(e.$ref);return n===t}))}if(function(e){switch(e.schemaStack[e.schemaStack.length-1]){case"operationalLayers_schema.json":case"elevationLayers_schema.json":case"baseMapLayer_schema.json":return!0}return!1}(r)){const t=["kmlLayer","rasterDataElevationLayer","rasterDataLayer"];return e.filter((e=>!t.some((t=>e.$ref.replace(/.*\//,"")===`${t}_schema.json`))))}return e}function m(e,t="",r=new Set){for(const n of e)if("properties"in n)for(const e in n.properties){const s=n.properties[e],i=t?`${t}.${e}`:e,a=Object.keys(s);if(0===a.length||1===a.length&&"$ref"===a[0])r.add(i);else{if(1!==a.length||"allOf"!==a[0])throw new Error(`unexpected allOf filter construct: ${JSON.stringify(s)}`);r.add(i),m(s.allOf,i,r)}}return r}async function y(e,t,r){let n=null;for(const t of e.allOf)if("$ref"in t){if(n)throw new Error("Cannot process more than 1 ref in an allOf construct");n=t}else if(!("properties"in t))throw new Error("allOf construct only allows simple top-level property filters");const s=m(e.allOf);await r.addFilter(s,(()=>c(n,t,r)))}async function d(e,t,r){const n=function(e){const t={count:e.length,refsCount:0,typesCount:0,distinctTypes:[],type:null},r=new Set;for(const n in e){const s=e[n];s.$ref?t.refsCount++:s.type&&(t.typesCount++,r.add(a(s)))}return r.forEach((e=>t.distinctTypes.push(e))),t.distinctTypes.sort(),t.refsCount===t.count?t.type="refs":2===t.count&&t.refsCount>0&&1===t.distinctTypes.length&&"null"===t.distinctTypes[0]?t.type="refsAndNull":t.typesCount===t.count?(t.type="types",t.distinctTypes=t.distinctTypes):t.type="mix",t}(e.oneOf);if("refs"!==n.type&&"refsAndNull"!==n.type)if("types"!==n.type)for(const n in e.oneOf){const s=`.oneOf[${n}]`;await w(e.oneOf[n],`${t}${s}`,r)}else r.addProperty({name:t,type:i(n.distinctTypes).join("|")});else{const n=h(e.oneOf,t,r);for(const e of n)if("null"===e.type);else{const s=`${t||""}`+(1!==n.length?"<?TYPE?>":"");await w(e,s,r)}}}async function w(e,t,r){return"array"===e.type?async function(e,t,r){await w(e.items,`${t}[]`,r)}(e,t,r):"properties"in e?async function(e,t,r){for(const n in e.properties)if(("webscene_schema.json"!==r.currentClass.name||"tables"!==n&&"mapRangeInfo"!==n&&"widgets"!==n)&&("baseMap_schema.json"!==r.currentClass.name||"elevationLayers"!==n)){if(l(r)){const e=r.stack.map((e=>e.klass.type)).join("/");if(/imageServiceLayer|tiledImageServiceLayer/.test(e)&&"transparency"===n)continue}await r.withFilter(n,(async()=>{const s=t?`${t}.${n}`:n;await w(e.properties[n],s,r)}))}}(e,t,r):"allOf"in e?y(e,t,r):"oneOf"in e?d(e,t,r):"$ref"in e?async function(e,t,r){await c(e,t,r)}(e,t,r):async function(e,t,r){let n="unknown";e.type&&(n=Array.isArray(e.type)?i(e.type).join("|"):e.type.replace(/ /g,"").split(",").join("|"));const s={name:t,type:n,default:e.default};e.enum&&(s.enum=i(e.enum).map((e=>"string"==typeof e?`"${e}"`:`${e}`)).join("|")),r.addProperty(s)}(e,t,r)}function j(e){return 0===e.indexOf("#/definitions/")?e.slice("#/definitions/".length):e}async function $(e,t){const r=await g.create(e,t);return o(`${e||"webscene"}_schema.json`,null,r.schemaRoot,null,r)}class g extends s{constructor(e,t,r){super(),this.definitions=e,this.schemaRoot=t,this.requestSchema=r,this.filteredProperties=null,this.schemaStack=[],this.requestSchema.bind(this)}get hasFilteredProperties(){return this.filteredProperties&&this.filteredProperties.size>0}get filteredPropertiesArray(){const e=[];return this.filteredProperties.forEach((t=>e.push(t))),e}async withFilter(e,t){if(!this.hasFilteredProperties)return t();if(!this.filteredProperties.has(e))return;const r=this.filteredProperties;this.filteredProperties=null;const n=e=>{this.filteredProperties||(this.filteredProperties=new Set),this.filteredProperties.add(e)};r.forEach((t=>{const r=t.split(".",2);r.length>1&&r[0]===e&&n(r[1])})),await t(),this.filteredProperties=r}async addFilter(e,t){const r=this.filteredProperties;this.filteredProperties=null;const n=e=>{this.filteredProperties||(this.filteredProperties=new Set),this.filteredProperties.add(e)};r&&r.forEach(n),e&&e.forEach(n);const s=await t();return this.filteredProperties=r,s}static async create(e,t){return t&&t.useRemoteSchema?g.createRemote(e,t.baseUrl):g.createLocal(e)}static createLocal(e){const t=e&&"webscene"!==e?n.definitions[`${e}_schema.json`]:n;return new g(n.definitions,t,g.getLocalSchemaRequest())}static async createRemote(e,t){const r=await g.getRemoteSchemaRequest(t),n=new g({},null,r),s=(await n.requestSchema(`${e||"webscene"}_schema.json`)).schema;return new g(n.definitions,s,r)}static getLocalSchemaRequest(){return function(n){const s=j(n),i=this.definitions[s];return i?t({schemaId:s,schema:i}):r(new e("spec-certification:spec-invalid-local-schema","Schema reference is not a local reference"))}}static async getRemoteSchemaRequest(t){if(!t)return r(new e("spec-certification:spec-missing-base-url","The base url of the remote schema directory must be specified when using a remote schema"));const n=g.getLocalSchemaRequest(),s=(await import("../../request.js")).default;return function(e){return n.call(this,e).catch((()=>s(`${t}/${e}`,{responseType:"json"}).then((t=>(this.definitions[j(e)]=t.data,{schemaId:e,schema:t.data})))))}}}const S=Object.keys(n.definitions).map((e=>e.replace(/_schema\.json$/,"")));export{$ as scan,S as schemaDefinitions};
