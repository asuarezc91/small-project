/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{clone as e}from"../../core/lang.js";import{isSome as a}from"../../core/maybe.js";import n from"../../core/Error.js";import{all as i}from"../../core/promiseUtils.js";import{fetchMessageBundle as l}from"../../intl/messages.js";import r from"../../renderers/support/AuthoringInfoClassBreakInfo.js";import s from"../../renderers/support/AuthoringInfoFieldInfo.js";import o from"../../renderers/support/AuthoringInfo.js";import{applyColorToSymbol as t}from"../../symbols/support/utils.js";import{createLayerAdapter as d,getLayerTypeLabels as m}from"../support/adapters/support/layerUtils.js";import{createColors as u,getClassBreaks as f,verifyBasicFieldValidity as p,getBasemapInfo as c}from"./support/utils.js";import{createRenderer as h}from"./type.js";import{g as y,f as b,c as w,a as v}from"../../chunks/relationship.js";const g=["equal-interval","natural-breaks","quantile"],I=["HH","HL","LH","LL"],M={2:[["HL","HH"],["LL","LH"]],3:[["HL","HM","HH"],["ML","MM","MH"],["LL","LM","LH"]],4:[["HL","HM1","HM2","HH"],["M2L","M2M1","M2M2","M2H"],["M1L","M1M1","M1M2","M1H"],["LL","LM1","LM2","LH"]]},z={2:["L","H"],3:["L","M","H"],4:["L","M1","M2","H"]},F=e=>({minValue:e.minValue,maxValue:e.maxValue});function T(a,n){const i=e(M[a]);return b(i,n)}function V(e,a,n,i){const{field:l,normalizationField:r}=e,{field:s,normalizationField:o}=a,t=n.map((e=>[e.minValue,e.maxValue])),d=i.map((e=>[e.minValue,e.maxValue])),m=t.length,u=z[m];return`\n  var field1 = $feature['${l}'];\n  var field2 = $feature['${s}'];\n  var hasNormField1 = ${r?"true":"false"};\n  var hasNormField2 = ${o?"true":"false"};\n  var normField1 = ${r?`$feature['${r}']`:"null"};\n  var normField2 = ${o?`$feature['${o}']`:"null"};\n\n  if (\n    IsEmpty(field1) ||\n    IsEmpty(field2) ||\n    (hasNormField1 && (IsEmpty(normField1) || normField1 == 0)) ||\n    (hasNormField2 && (IsEmpty(normField2) || normField2 == 0))\n  ) {\n    return null;\n  }\n\n  var value1 = IIf(hasNormField1, (field1 / normField1), field1);\n  var value2 = IIf(hasNormField2, (field2 / normField2), field2);\n\n  var breaks1 = ${JSON.stringify(t)};\n  var breaks2 = ${JSON.stringify(d)};\n  var classCodes = ${JSON.stringify(u)};\n\n  function getClassCode(value, breaks) {\n    var code = null;\n\n    for (var i in breaks) {\n      var info = breaks[i];\n      if (value >= info[0] && value <= info[1]) {\n        code = classCodes[i];\n        break;\n      }\n    }\n\n    return code;\n  }\n\n  var code1 = getClassCode(value1, breaks1);\n  var code2 = getClassCode(value2, breaks2);\n\n  var classValue = IIf(IsEmpty(code1) || IsEmpty(code2), null, code1 + code2);\n  return classValue;\n  `}async function H(e,i,r){const s=await l("esri/smartMapping/t9n/smartMapping"),{basemap:t,classificationMethod:d,field1:m,field2:u,focus:f,numClasses:p,signal:b}=e,g=e.layer,I=i.classBreakInfos,M=r.classBreakInfos;if(p!==I.length||I.length!==M.length)throw new n("relationship-renderer:error","incompatible class breaks");const z=function(e,a){return T(e,a).map((e=>({value:e,count:0})))}(p,f),H=V(e.field1,e.field2,I,M),L=(await async function(e){let n=e.relationshipScheme,i=null,l=null;const r=await c(e.basemap,e.view);if(i=a(r.basemapId)?r.basemapId:null,l=a(r.basemapTheme)?r.basemapTheme:null,n)return{scheme:w(n),basemapId:i,basemapTheme:l};const s=v({basemap:i,basemapTheme:l,geometryType:e.geometryType,theme:e.theme,worldScale:e.worldScale,view:e.view});return s&&(n=s.primaryScheme,i=s.basemapId,l=s.basemapTheme),{scheme:n,basemapId:i,basemapTheme:l}}({basemap:t,geometryType:g.geometryType,theme:"default",relationshipScheme:e.relationshipScheme,worldScale:e.symbolType.indexOf("3d-volumetric")>-1,view:e.view})).scheme,k=await h({layer:g,basemap:t,valueExpression:H,valueExpressionTitle:s.relationship.legendTitle,numTypes:-1,sortEnabled:!1,defaultSymbolEnabled:e.defaultSymbolEnabled,typeScheme:{colors:y(L,p,f),...L},statistics:{uniqueValueInfos:z},legendOptions:e.legendOptions,outlineOptimizationEnabled:e.outlineOptimizationEnabled,sizeOptimizationEnabled:e.sizeOptimizationEnabled,symbolType:e.symbolType,colorMixMode:e.colorMixMode,edgesType:e.edgesType,view:e.view,signal:b}),x=k.renderer,C=x.uniqueValueInfos,E=s.relationship;for(const e of C)e.label=E[e.value];const O=new o({type:"relationship",classificationMethod:d,numClasses:p,focus:f,field1:{field:m.field,normalizationField:m.normalizationField,label:m.label,classBreakInfos:I.map(F)},field2:{field:u.field,normalizationField:u.normalizationField,label:u.label,classBreakInfos:M.map(F)}});return x.authoringInfo=O,{renderer:x,classBreaks:{field1:i,field2:r},uniqueValueInfos:k.uniqueValueInfos,relationshipScheme:L,basemapId:k.basemapId,basemapTheme:k.basemapTheme}}async function L(e){const a=await async function(e){if(!(e&&e.renderer&&e.numClasses))throw new n("update-relationship-renderer:missing-parameters","'renderer' and 'numClasses' parameters are required");const{field1:a,field2:i,renderer:l,numClasses:r,colors:s}=e,o=Math.pow(r,2);if((a||i)&&!(a&&i&&a.field&&i.field))throw new n("update-relationship-renderer:missing-parameters","'field1' and 'field2' parameters are required");if(a&&!a.classBreakInfos||i&&!i.classBreakInfos)throw new n("update-relationship-renderer:missing-parameters","'field1.classBreakInfos' and 'field2.classBreakInfos' are required");if(!l.authoringInfo)throw new n("update-relationship-renderer:missing-parameters","'renderer.authoringInfo' is required");if(l.uniqueValueInfos.length!==o)throw new n("update-relationship-renderer:invalid-parameters",`Renderer must have ${o} unique value infos to support ${r} classes`);if(s&&s.length!==o)throw new n("update-relationship-renderer:invalid-parameters",`The scheme must have ${o} colors`);return e}(e),{field1:i,field2:l,renderer:o,numClasses:d,focus:m,colors:f}=a,p=o.clone();if(p.valueExpression=V(i,l,i.classBreakInfos,l.classBreakInfos),function(e,a,n){const i=T(a,n);e.sort(((e,a)=>{const n=i.indexOf(e.value),l=i.indexOf(a.value);let r=0;return n<l?r=-1:n>l&&(r=1),r}))}(p.uniqueValueInfos,d,m),f){const e=u(f,f.length);p.uniqueValueInfos.forEach(((a,n)=>t(a.symbol,e[n])))}return function(e,a){const{authoringInfo:n}=e;n.numClasses=a.numClasses,n.focus=a.focus||null,n.focus||delete n.focus;const{field1:i,field2:l}=a;n.field1=new s({field:i.field,normalizationField:i.normalizationField,label:i.label,classBreakInfos:i.classBreakInfos.map((e=>new r(F(e))))}),n.field2=new s({field:l.field,normalizationField:l.normalizationField,label:l.label,classBreakInfos:l.classBreakInfos.map((e=>new r(F(e))))}),e.authoringInfo=n}(p,a),p}async function k(e){const l=await async function(e){if(!(e&&e.layer&&e.view&&e.field1&&e.field2))throw new n("relationship-renderer:missing-parameters","'layer', 'view', 'field1' and 'field2' parameters are required");const i={...e};if(i.symbolType=i.symbolType||"2d",i.defaultSymbolEnabled=null==i.defaultSymbolEnabled||i.defaultSymbolEnabled,i.classificationMethod=i.classificationMethod||"quantile",i.numClasses=i.numClasses||3,i.focus=i.focus||null,-1===g.indexOf(i.classificationMethod))throw new n("relationship-renderer:invalid-parameters",`classification method ${i.classificationMethod} is not supported`);if(i.numClasses<2||i.numClasses>4)throw new n("relationship-renderer:invalid-parameters","'numClasses' must be 2, 3 or 4");if(e.focus&&-1===I.indexOf(e.focus))throw new n("relationship-renderer:invalid-parameters","'focus' must be 'HH', 'HL', 'LH', 'LL' or null");const l=[0,2,1,3],r=d(i.layer,l);if(i.layer=r,!r)throw new n("relationship-renderer:invalid-parameters","'layer' must be one of these types: "+m(l).join(", "));const s=a(i.signal)?{signal:i.signal}:null;await r.load(s);const o=r.geometryType,t=i.symbolType.indexOf("3d")>-1;if(i.outlineOptimizationEnabled="polygon"===o&&i.outlineOptimizationEnabled,i.sizeOptimizationEnabled=("point"===o||"multipoint"===o||"polyline"===o)&&i.sizeOptimizationEnabled,"mesh"===o)i.symbolType="3d-volumetric",i.colorMixMode=i.colorMixMode||"replace",i.edgesType=i.edgesType||"none";else{if("3d-volumetric-uniform"===i.symbolType&&"point"!==o)throw new n("relationship-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(t&&"polygon"===o)throw new n("relationship-renderer:not-supported","3d symbols are not supported for polygon layers");if(i.symbolType.indexOf("3d-volumetric")>-1&&(!i.view||"3d"!==i.view.type))throw new n("relationship-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const{field1:u,field2:f}=i,c=[u.field,f.field];u.normalizationField&&c.push(u.normalizationField),f.normalizationField&&c.push(f.normalizationField);const h=p(r,c,"relationship-renderer:invalid-parameters");if(h)throw h;return i}(e),{layer:r,classificationMethod:s,field1:o,field2:t,numClasses:u,view:c,signal:h}=l,y={layer:r,classificationMethod:s,field:o.field,normalizationField:o.normalizationField,normalizationType:o.normalizationField?"field":null,minValue:o.minValue,maxValue:o.maxValue,analyzeData:!(null!=o.minValue&&null!=o.maxValue),numClasses:u,view:c,signal:h},b={layer:r,classificationMethod:s,field:t.field,normalizationField:t.normalizationField,normalizationType:t.normalizationField?"field":null,minValue:t.minValue,maxValue:t.maxValue,analyzeData:!(null!=t.minValue&&null!=t.maxValue),numClasses:u,view:c,signal:h},[w,v]=await i([f(y),f(b)]);if(!w||!v)throw new n("relationship-renderer:error","error when calculating class breaks");return H(l,w.result,v.result)}export{k as createRenderer,L as updateRenderer};
