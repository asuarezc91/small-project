/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../core/maybe.js";import o from"../../core/Error.js";import{all as i,reject as r}from"../../core/promiseUtils.js";import{substitute as a}from"../../intl/substitute.js";import{fetchMessageBundle as l}from"../../intl/messages.js";import"../../renderers/PointCloudRenderer.js";import"../../renderers/PointCloudClassBreaksRenderer.js";import n from"../../renderers/PointCloudRGBRenderer.js";import s from"../../renderers/PointCloudStretchRenderer.js";import"../../renderers/PointCloudUniqueValueRenderer.js";import t from"../../renderers/support/AuthoringInfoVisualVariable.js";import m from"../../renderers/support/AuthoringInfo.js";import"../../renderers/Renderer.js";import d from"../../renderers/visualVariables/ColorVariable.js";import u from"../../renderers/ClassBreaksRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import{getFieldsList as p,getNormalizationType as c}from"../support/utils.js";import{createColorStops as y,setLabelsForClassBreaks as f}from"../../renderers/support/utils.js";import{createLayerAdapter as b,getLayerTypeLabels as h}from"../support/adapters/support/layerUtils.js";import{getAgeExpressions as v,verifyDates as w,supportedAgeUnits as g}from"../statistics/support/ageUtils.js";import T from"../heuristics/ageUnit.js";import x from"../heuristics/outline.js";import E from"../heuristics/sizeRange.js";import{getSummaryStatistics as V,getClassBreaks as z,getPointSizeAlgorithm as S,formatDate as M,updateAgeRendererAuthoringInfoVV as I,createError as j,verifyBasicFieldValidity as O,isValidPointSize as q,createColors as C,getDefaultDataRange as k,createDefaultStopValues as U,createStopValues as F,getDataRange as R,createDataValues as B,createSymbol as D,getSymbolSizeFromScheme as P,getSymbolOutlineFromScheme as A,getBasemapInfo as L}from"./support/utils.js";import{c as G,g as W,a as $}from"../../chunks/color.js";const H=Math.pow(2,53)-1;function _(e){const o={...e},i=o.symbolType.indexOf("3d-volumetric")>-1;delete o.symbolType,delete o.defaultSymbolEnabled,delete o.colorMixMode,delete o.edgesType;const r=o;return r.worldScale=i,r}async function J(o,i){let r=o.colorScheme,a=null,l=null;const n=await L(o.basemap,o.view);if(a=e(n.basemapId)?n.basemapId:null,l=e(n.basemapTheme)?n.basemapTheme:null,r)return{scheme:G(r),basemapId:a,basemapTheme:l};const s=i||o.theme||"high-to-low",t=W({theme:s,basemap:a,basemapTheme:l,geometryType:o.geometryType,worldScale:o.worldScale,view:o.view});if(t)if(a=t.basemapId,l=t.basemapTheme,o.schemeId){const e=s+"/"+a+"/"+o.schemeId;r=$({id:e,geometryType:o.geometryType})}else r=t.primaryScheme;return{scheme:r,basemapId:a,basemapTheme:l}}async function K(e,o,i,r,a,n){const s=await l("esri/smartMapping/t9n/smartMapping"),t=n.layer,m=n.field,d=t.geometryType,p=n.defaultSymbolEnabled,c=G(e.colorScheme),y=o&&o.opacity,f=[e.visualVariable.clone()];o&&o.visualVariables&&o.visualVariables.length&&f.push(...o.visualVariables.map((e=>e.clone()))),i&&i.minSize&&f.push(i.minSize);return{renderer:new u({classBreakInfos:[{minValue:-H,maxValue:H,symbol:D(d,{type:n.symbolType,color:c.noDataColor,size:P(c,d),outline:A(c,d,y),meshInfo:{colorMixMode:n.colorMixMode,edgesType:n.edgesType}})}],defaultLabel:p?s.other:null,defaultSymbol:p?D(d,{type:n.symbolType,color:c.noDataColor,size:P(c,d),outline:A(c,d,y),meshInfo:{colorMixMode:n.colorMixMode,edgesType:n.edgesType}}):null,field:m,normalizationType:r,normalizationField:a,valueExpression:n.valueExpression,valueExpressionTitle:n.valueExpressionTitle,visualVariables:f,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariable:e.visualVariable.clone(),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,colorScheme:G(e.colorScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}async function N(a){const l=await async function(i){if(!(i&&i.layer&&(i.field||i.valueExpression||i.sqlExpression)))throw new o("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(i.valueExpression&&!i.sqlExpression&&!i.view)throw new o("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const a={...i};if("90-10"===a.theme)throw new o("color-visual-variable:not-supported","Only 'high-to-low', 'above-and-below', 'centered-on', 'extremes', 'above', 'below' themes are supported.");const l=[0,2,1,3],n=b(a.layer,l);if(a.layer=n,!n)throw new o("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+h(l).join(", "));const s=e(a.signal)?{signal:a.signal}:null;if(await n.load(s),"mesh"!==n.geometryType&&a.worldScale&&(!a.view||"3d"!==a.view.type))return r(j("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"));const t=await p({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression}),m=O(n,t,"color-visual-variable:invalid-parameters");if(m)throw m;return a}(a),{view:n,field:s,valueExpression:u,minValue:c,maxValue:y,layer:f,normalizationField:v,signal:w,statistics:g}=l,T=v?"field":void 0,[x,E]=await i([g||V({layer:f,field:s,valueExpression:u,sqlExpression:l.sqlExpression,sqlWhere:l.sqlWhere,normalizationType:T,normalizationField:v,minValue:c,maxValue:y,view:n,signal:w}),"90-10"===l.theme?z({layer:f,field:s,normalizationField:v,valueExpression:u,classificationMethod:"quantile",minValue:c,maxValue:y,view:n,numClasses:10,signal:w}):null]);return async function(e,o,i){const r=e.layer,{field:a,theme:l}=e,n=a&&"function"!=typeof a?r.getField(a):null,s=n&&"date"===n.type,u=await J({basemap:e.basemap,theme:e.theme,geometryType:r.geometryType,colorScheme:e.colorScheme,worldScale:e.worldScale,view:e.view}),p=u.scheme;if(!p)throw j("color-visual-variable:insufficient-info","Unable to find color scheme");const c=C(p.colors,5);if(c.length<5)throw j("color-visual-variable:insufficient-info","Color scheme does not have enough colors");const y=p.id.indexOf("seq-")>-1,f=R(o,i,l,s,"90-10"!==l),b=B(f,o,l,y),h=C(c,5),v=new d({field:a,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationField:e.normalizationField,stops:b.map(((e,o)=>({value:e,color:h[o]}))),legendOptions:e.legendOptions}),w=new t({type:"color",minSliderValue:null!=e.minValue?e.minValue:o.min,maxSliderValue:null!=e.maxValue?e.maxValue:o.max,theme:p.theme}),g=new m({visualVariables:[w]});return{basemapId:u.basemapId,basemapTheme:u.basemapTheme,visualVariable:v,statistics:o,defaultValuesUsed:f.defaultValuesUsed,colorScheme:G(p),authoringInfo:g}}(l,x,null==E?void 0:E.result)}async function Q(e,i){const r=await l("esri/smartMapping/t9n/smartMapping"),a=e.layer,n=e.defaultSymbolEnabled,s=a.geometryType,t=await J({basemap:e.basemap,geometryType:s,colorScheme:e.colorScheme,worldScale:e.symbolType.indexOf("3d-volumetric")>-1,view:e.view}),d=t.scheme,{result:p,outlineResult:c}=i,y=p.classBreakInfos,b=e.classificationMethod,h="standard-deviation"===b,v=e.normalizationType;if(!d)throw new o("color-class-breaks-renderer:insufficient-info","Unable to find color scheme");const w=function(e,o){const i=e.colorsForClassBreaks;let r;if(i&&i.length>0&&(i.some((e=>(e.numClasses===o&&(r=e.colors),!!r))),!r)){const e=i[i.length-1],a=o-e.numClasses;if(a>0){const o=e.colors[e.numClasses-1];r=e.colors.splice(0);for(let e=1;e<=a;e++)r.push(o)}}return r&&(r=C(r,r.length)),r}(d,y.length);if(!w||w.length!==y.length)throw new o("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors");const g=c&&c.opacity,T=new u({classBreakInfos:y.map(((o,i)=>({minValue:o.minValue,maxValue:o.maxValue,symbol:D(s,{type:e.symbolType,color:w[i],size:P(d,s),outline:A(d,s,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}),label:o.label}))),defaultLabel:n?r.other:null,defaultSymbol:n?D(s,{type:e.symbolType,color:d.noDataColor,size:P(d,s),outline:A(d,s,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:v,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===v?p.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new m({type:"class-breaks-color",classificationMethod:b,standardDeviationInterval:e.standardDeviationInterval})});return h||f({classBreakInfos:T.classBreakInfos,classificationMethod:b,normalizationType:v,round:!0}),c&&c.visualVariables&&c.visualVariables.length&&(T.visualVariables=c.visualVariables.map((e=>e.clone()))),{renderer:T,colorScheme:G(d),classBreaksResult:p,defaultValuesUsed:i.defaultValuesUsed,basemapId:t.basemapId,basemapTheme:t.basemapTheme}}async function X(r){const a=await async function(i){if(!(i&&i.layer&&(i.field||i.valueExpression||i.sqlExpression)))throw new o("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(i.valueExpression&&!i.sqlExpression&&!i.view)throw new o("color-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");const r={...i};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled;const a=[0,2,1,3],l=b(r.layer,a);if(r.layer=l,!l)throw new o("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+h(a).join(", "));const n=e(r.signal)?{signal:r.signal}:null;await l.load(n);const s=l.geometryType;if(r.outlineOptimizationEnabled="polygon"===s&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===s||"multipoint"===s||"polyline"===s)&&r.sizeOptimizationEnabled,"mesh"===s)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==s)throw new o("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.indexOf("3d-volumetric")>-1&&(!r.view||"3d"!==r.view.type))throw new o("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const t=await p({field:r.field,normalizationField:r.normalizationField,valueExpression:r.valueExpression}),m=O(l,t,"color-continuous-renderer:invalid-parameters");if(m)throw m;return r}(r),{layer:l,view:n,signal:s}=a,[t,m,d]=await i([N(_(a)),a.outlineOptimizationEnabled?x({layer:l,view:n,signal:s}):null,a.sizeOptimizationEnabled?E({layer:l,view:n,signal:s}):null]),u=a.normalizationField;return K(t,m,d,u?"field":void 0,u,a)}async function Y(i){const r=await async function(i){if(!i||!i.layer||!i.field&&!i.valueExpression)throw new o("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(i.valueExpression&&!i.view)throw new o("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");const r={...i};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled,r.classificationMethod=r.classificationMethod||"equal-interval",r.normalizationType=c(r);const a=[0,2,1,3],l=b(r.layer,a);if(r.layer=l,!l)throw new o("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+h(a).join(", "));if(!(null!=r.minValue&&null!=r.maxValue||null==r.minValue&&null==r.maxValue))throw new o("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const n=e(r.signal)?{signal:r.signal}:null;await l.load(n);const s=l.geometryType;if(r.outlineOptimizationEnabled="polygon"===s&&r.outlineOptimizationEnabled,"mesh"===s)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==s)throw new o("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.indexOf("3d-volumetric")>-1&&(!r.view||"3d"!==r.view.type))throw new o("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const t=await p({field:r.field,normalizationField:r.normalizationField}),m=O(l,t,"color-class-breaks-renderer:invalid-parameters");if(m)throw m;return r}(i);return Q(r,await z(function(e){const o={...e};delete o.basemap,delete o.colorScheme,delete o.legendOptions,delete o.symbolType,delete o.defaultSymbolEnabled,delete o.colorMixMode,delete o.edgesType;const i=o;return i.analyzeData=!(null!=o.minValue&&null!=o.maxValue),i}(r),r.outlineOptimizationEnabled))}function Z(o){return function(o){if(!o||!o.layer)return r(j("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));const i={...o},a=[4],l=b(i.layer,a);if(i.layer=l,i.density=i.density||25,i.size=i.size||"100%",!q(i.size))return r(j("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!l)return r(j("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+h(a).join(", ")));const n=e(i.signal)?{signal:i.signal}:null;return l.load(n).then((()=>i))}(o).then((e=>({renderer:new n({field:"RGB",pointsPerInch:e.density,pointSizeAlgorithm:S(e.size)})})))}async function ee(o){const i=await function(o){if(!(o&&o.layer&&o.field))return r(j("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));const i=o.field.toLowerCase();if("intensity"!==i&&"elevation"!==i)return r(j("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));const a={...o},l=[4],n=b(a.layer,l);if(a.layer=n,a.density=a.density||25,a.size=a.size||"100%",!q(a.size))return r(j("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!n)return r(j("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+h(l).join(", ")));const s=e(a.signal)?{signal:a.signal}:null;return n.load(s).then((()=>a))}(o),a=i.statistics?i.statistics:await V({layer:i.layer,field:i.field,signal:i.signal}),l=await async function(e,o){const i=o.layer,r=await J({basemap:o.basemap,colorScheme:o.colorScheme,geometryType:i.geometryType,schemeId:"elevation"===o.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),a=r.scheme;if(!a)throw j("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme");const l=C(a.colors,5);if(l.length<5)throw j("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors");const n=k(e,!1,!0),s=n?U(n[0],n[1],5):F(e);return{stops:y({values:s,isDate:!1,dateFormatOptions:null,colors:l,labelIndexes:[0,2,4]}),basemapId:r.basemapId,basemapTheme:r.basemapTheme,statistics:e,defaultValuesUsed:!!n,colorScheme:G(a)}}(a,i);return{renderer:new s({field:i.field,pointsPerInch:i.density,pointSizeAlgorithm:S(i.size),stops:l.stops}),basemapId:l.basemapId,basemapTheme:l.basemapTheme,statistics:l.statistics,defaultValuesUsed:l.defaultValuesUsed,colorScheme:l.colorScheme}}async function oe(r){const n=await l("esri/smartMapping/t9n/smartMapping"),s=await async function(i){if(!(i&&i.layer&&i.view&&i.startTime&&i.endTime))throw new o("color-age-renderer:missing-parameters","'layer', 'view', startTime', 'endTime' parameters are required");const r={...i};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled;const a=[0,2,1,3],l=b(r.layer,a);if(r.layer=l,!l)throw new o("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+h(a).join(", "));const n=e(r.signal)?{signal:r.signal}:null;await l.load(n);const s=l.geometryType;if(r.outlineOptimizationEnabled="polygon"===s&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===s||"multipoint"===s||"polyline"===s)&&r.sizeOptimizationEnabled,"mesh"===s)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else if("3d-volumetric-uniform"===r.symbolType&&"point"!==s)throw new o("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.indexOf("3d-volumetric")>-1&&(!r.view||"3d"!==r.view.type))throw new o("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");const t=w(l,r.startTime,r.endTime,"color-age-renderer:invalid-parameters");if(t)throw t;if(r.unit&&-1===g.indexOf(r.unit))throw new o("color-age-renderer:invalid-unit",`Supported units are: ${g.join(", ")}`);return r}(r),{defaultSymbolEnabled:t,view:m,startTime:d,endTime:u,symbolType:p,colorMixMode:c,edgesType:y,minValue:f,maxValue:V,signal:z}=s,S=s.layer,[j,O,q]=await i([s.unit?{unit:s.unit,statistics:null}:T({view:m,layer:S,startTime:d,endTime:u,minValue:f,maxValue:V,signal:z}),s.outlineOptimizationEnabled?x({layer:S,view:m,signal:z}):null,s.sizeOptimizationEnabled?E({layer:S,view:m,signal:z}):null]),{unit:C,statistics:k}=j,U=v({layer:S,startTime:d,endTime:u,unit:C}).valueExpression,F=a(n[`ageInfo_${C}`],{unit:C,startTime:M(d,C,S),endTime:M(u,C,S)}),R=await N(_({layer:S,basemap:s.basemap,valueExpression:U,symbolType:p,statistics:k,legendOptions:{title:F},colorScheme:s.colorScheme,theme:s.theme,view:m,minValue:s.minValue,maxValue:s.maxValue,signal:z})),B={layer:S,valueExpression:U,defaultSymbolEnabled:t,symbolType:p,colorMixMode:c,edgesType:y},D=await K(R,O,q,null,null,B);return D.renderer.authoringInfo.visualVariables.forEach((e=>I(e,d,u,C))),{...D,unit:C}}export{oe as createAgeRenderer,Y as createClassBreaksRenderer,X as createContinuousRenderer,ee as createPCContinuousRenderer,Z as createPCTrueColorRenderer,N as createVisualVariable};
