/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../core/maybe.js";import r from"../../core/Error.js";import{all as i}from"../../core/promiseUtils.js";import"../../renderers/Renderer.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import o from"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import{c as a,g as s}from"../../chunks/location.js";import{createLayerAdapter as n,getLayerTypeLabels as t}from"../support/adapters/support/layerUtils.js";import l from"../heuristics/outline.js";import m from"../heuristics/sizeRange.js";import{createSymbol as p,getSymbolSizeFromScheme as d,getSymbolOutlineFromScheme as c,getBasemapInfo as u}from"./support/utils.js";async function y(y){const b=await async function(i){if(!i||!i.layer)throw new r("location-renderer:missing-parameters","'layer' parameter is required");const o={...i};o.symbolType=o.symbolType||"2d";const a=[0,2,1,3],s=n(o.layer,a);if(o.layer=s,!s)throw new r("location-renderer:invalid-parameters","'layer' must be one of these types: "+t(a).join(", "));const l=e(o.signal)?{signal:o.signal}:null;await s.load(l);const m=s.geometryType;if(o.outlineOptimizationEnabled="polygon"===m&&o.outlineOptimizationEnabled,o.sizeOptimizationEnabled=("point"===m||"multipoint"===m||"polyline"===m)&&o.sizeOptimizationEnabled,"mesh"===m)o.symbolType="3d-volumetric",o.colorMixMode=o.colorMixMode||"replace",o.edgesType=o.edgesType||"none";else{if("3d-volumetric-uniform"===o.symbolType&&"point"!==m)throw new r("location-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(o.symbolType.indexOf("3d-volumetric")>-1&&(!o.view||"3d"!==o.view.type))throw new r("location-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}return o}(y),f=b.layer.geometryType,h=await async function(r,i){let o=r.locationScheme,n=null,t=null;const l=await u(r.basemap,r.view);if(n=e(l.basemapId)?l.basemapId:null,t=e(l.basemapTheme)?l.basemapTheme:null,o)return{scheme:a(o),basemapId:n,basemapTheme:t};const m=s({basemap:n,basemapTheme:t,geometryType:i,worldScale:r.symbolType.indexOf("3d-volumetric")>-1,view:r.view});return m&&(o=m.primaryScheme,n=m.basemapId,t=m.basemapTheme),{scheme:o,basemapId:n,basemapTheme:t}}(b,f),w=h.scheme;if(!w)throw new r("location-renderer:insufficient-info","Unable to find location scheme");const{view:v,layer:T,signal:g}=b,[j,z]=await i([b.outlineOptimizationEnabled?l({view:v,layer:T,signal:g}):null,b.sizeOptimizationEnabled?m({view:v,layer:T,signal:g}):null]),S=j&&j.opacity,V=new o({symbol:p(f,{type:b.symbolType,color:w.color,size:d(w,f),outline:c(w,f,S),meshInfo:{colorMixMode:b.colorMixMode,edgesType:b.edgesType}})});return j&&j.visualVariables&&j.visualVariables.length&&(V.visualVariables=j.visualVariables.map((e=>e.clone()))),z&&z.minSize&&(V.visualVariables?V.visualVariables.push(z.minSize):V.visualVariables=[z.minSize]),{renderer:V,locationScheme:a(w),basemapId:h.basemapId,basemapTheme:h.basemapTheme}}export{y as createRenderer};
