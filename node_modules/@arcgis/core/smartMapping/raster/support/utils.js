/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../core/Error.js";import{getSupportedRendererTypes as r,createDefaultRenderer as a}from"../../../renderers/support/rasterRendererHelper.js";import t from"./adapters/ImageryLayerAdapter.js";import n from"./adapters/ImageryTileLayerAdapter.js";const s={imagery:{adapter:t,label:"ImageryLayer"},"imagery-tile":{adapter:n,label:"ImageryTileLayer"},wcs:{adapter:n,label:"WCSLayer"}},l=Object.keys(s).map((e=>s[e].label));function o(e){var r;if("raster-layer-adapter"===e.type)return e;const a=null==(r=s[e.type])?void 0:r.adapter;return null==a?null:new a({layer:e})}async function i(e){p(e);const t=o(e.layer),n=await t.generateRasterInfo(e);return{supportedTypes:r(n),defaultRenderer:a(n)}}async function p(r){const{layer:a}=r;if(!a)throw new e("raster-renderer-creator:missing-parameters","'layer' parameter is required");const t=o(a);if(null==t)throw new e("raster-renderer-creator:invalid-parameters","'layer' must be one of these types: "+l.join(", "));return await t.load(),await t.updateRasterInfo({renderingRule:r.renderingRule,signal:r.signal}),{...r,layer:t}}export{o as createRasterLayerAdapter,i as getSupportedRendererInfo,p as processRasterRendererParameters};
