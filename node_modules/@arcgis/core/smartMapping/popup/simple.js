/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{all as r}from"../../core/promiseUtils.js";import n from"../../PopupTemplate.js";import{fetchMessageBundle as s}from"../../intl/messages.js";import{getPrimaryVisualVariables as t,getContentFromFieldInfos as i,hasNormalizedField as o,getFieldAndExpressionInfos as p}from"./support/utils.js";async function a(r){const{layer:n,renderer:s}=r;await n.load();const t=s||n.renderer;if("simple"!==t.type)throw new e("simple-popup:invalid-parameters","renderer.type must be 'simple'");return{layer:n,renderer:t}}async function l(e,r,s="divide"){const{fieldInfos:t,expressionInfos:o}=await p({renderer:e,layer:r,normFieldExpressionTemplate:s});return new n({content:await i(r,{fieldInfos:t,expressionInfos:o}),expressionInfos:o,fieldInfos:t})}async function m(e){const[{renderer:n,layer:i},p]=await r([a(e),s("esri/smartMapping/t9n/smartMapping")]),m=[];if(!t(n).length)return null;const f={name:"simple",title:p.simple,value:await l(n,i)};return o(n)&&m.push({name:"simple-percent",title:p.simpleNormFieldAsPercent,value:await l(n,i,"percentage")}),{primaryTemplate:f,secondaryTemplates:m}}export{m as getTemplates};
