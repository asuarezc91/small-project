/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../core/maybe.js";import t from"../../core/Error.js";import i from"../../renderers/visualVariables/SizeVariable.js";import{getScaleForResolution as r}from"../../geometry/support/scaleUtils.js";import{createLayerAdapter as a,getLayerTypeLabels as s}from"../support/adapters/support/layerUtils.js";import o from"../statistics/spatialStatistics.js";const n=[{size:10,width:0},{size:20,width:.5},{size:80,width:1},{size:250,width:2}];async function l(l){const{layerAdapter:p,...u}=await async function(i){const{view:r}=i;if(!(i&&r&&i.layer))throw new t("outline:missing-parameters","'view' and 'layer' parameters are required");const o=[0,2,3,1],{layer:n,...l}=i,p=a(n,o),u={layerAdapter:p,...l};if(!p)throw new t("outline:invalid-parameters","'layer' must be one of these types: "+s(o).join(", "));await r.when();const m=e(u.signal)?{signal:u.signal}:null;if(await p.load(m),"polygon"!==p.geometryType)throw new t("outline:not-supported",`outline is not supported for geometryType: ${p.geometryType}`);return u}(l),m=await p.getSampleFeatures({sampleSize:-1,returnGeometry:!0,...u}),y=await o({features:m,geometryType:p.geometryType});if(!("avgSize"in y)||!y.avgSize)throw new t("outline:insufficient-info","average polygon size is invalid");return function(e,t){const a=e.avgSize,s=r(1,t.spatialReference),o=n.map((e=>({size:e.width,value:Math.round(a/e.size*s)})));return o.sort(((e,t)=>e.value-t.value)),{visualVariables:[new i({target:"outline",valueExpression:"$view.scale",stops:o})],opacity:.25}}(y,u.view)}export default l;
