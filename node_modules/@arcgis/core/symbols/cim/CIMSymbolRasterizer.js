/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{numericHash as e}from"../../core/string.js";import{throwIfAborted as t,all as r}from"../../core/promiseUtils.js";import{getJsonType as a,isPolygon as i,isPolyline as s}from"../../geometry/support/jsonUtils.js";import{pt2px as o}from"../../core/screenUtils.js";import n from"../support/Symbol3DAnchorPosition2D.js";import c from"../../request.js";import{createLabelOverrideFunction as l,evaluateValueOrFunction as m,colorToArray as h}from"./utils.js";import{scaleCIMMarker as f}from"../support/cimSymbolUtils.js";import{analyzeCIMSymbol as g,analyzeCIMResource as y}from"./cimAnalyzer.js";import u from"./Rasterizer.js";import{TextRasterizer as p}from"./TextRasterizer.js";var d;!function(e){e.Legend="legend",e.Preview="preview"}(d||(d={}));const M=(e,t,r)=>{if(e&&e.targetSize){let a;if(r){const t=Math.max(r.frame.xmax-r.frame.xmin,r.frame.ymax-r.frame.ymin);a=e.targetSize/o(t)}else a=e.targetSize/t.referenceSize;return a}return e&&e.scaleFactor?e.scaleFactor:1},C={fill:{legend:{frame:{xmax:15,xmin:0,ymax:15,ymin:0},geometry:{rings:[[[0,15],[15,7.5],[15,0],[0,0],[0,15]]]},canvasPaths:{rings:[[[0,15],[0,0],[15,7.5],[15,15],[0,15]]]}},preview:{frame:{xmax:100,xmin:0,ymax:100,ymin:0},geometry:{rings:[[[0,100],[100,100],[100,0],[0,0],[0,100]]]},canvasPaths:{rings:[[[0,100],[0,0],[100,0],[100,100],[0,100]]]}}},stroke:{legend:{frame:{xmax:24,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[12,0],[24,0]]]},canvasPaths:{paths:[[[0,2],[12,2],[24,2]]]}},preview:{frame:{xmax:100,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[50,0],[100,0]]]},canvasPaths:{paths:[[[0,2],[50,2],[100,2]]]}}}};class I{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._rasterizer=new u,this._textRasterizer=new p,this._pictureMarkerCache=new Map}async rasterizeCIMSymbolAsync(e,t,r,i,s,o,n,c){i=i||(t?null!=t.centroid?"esriGeometryPolygon":a(t.geometry):null)||function(e){if(!(e&&e.data&&e.data.symbol))return null;switch(e.data.symbol.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}(e);const l=await this.analyzeCIMSymbol(e,t?function(e){const t=e?Object.keys(e):[];return t.map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}(t.attributes):null,r,i,c);return this.rasterizeCIMSymbol(l,t,i,s,o,n)}async analyzeCIMSymbol(e,a,i,s,o){const n=[],c=a?{geometryType:s,spatialReference:this._spatialReference,fields:a}:null;let m;await g(e.data,c,n,this._avoidSDF),t(o);for(const e of n)"CIMPictureMarker"!==e.cim.type&&"CIMPictureFill"!==e.cim.type&&"CIMPictureStroke"!==e.cim.type||(m||(m=[]),m.push(this.fetchPictureMarkerResource(e,o))),i&&"text"===e.type&&"string"==typeof e.text&&e.text.indexOf("[")>-1&&(e.text=l(i,e.text,e.cim.textCase));return m&&await r(m),n}async fetchPictureMarkerResource(e,t){const r=e.materialHash;if(!this._pictureMarkerCache.get(r)){const a=(await c(e.cim.url,{responseType:"image",signal:t&&t.signal})).data;this._pictureMarkerCache.set(r,a)}}rasterizeCIMSymbol(e,t,r,a,i,s){const o=[];for(const n of e){a&&"function"==typeof a.scaleFactor&&(a.scaleFactor=a.scaleFactor(t,i,s));const e=this._getRasterizedResource(n,t,r,a,i,s);if(!e)continue;let c=0,l=e.anchorX||0,h=e.anchorY||0,f=!1,g=0,y=0;if("esriGeometryPoint"===r){const e=M(a,n,null);if(g=m(n.offsetX,t,i,s)*e||0,y=m(n.offsetY,t,i,s)*e||0,"marker"===n.type)c=m(n.rotation,t,i,s)||0,f=!!n.rotateClockwise&&n.rotateClockwise;else if("text"===n.type){if(c=m(n.angle,t,i,s)||0,void 0!==n.horizontalAlignment)switch(n.horizontalAlignment){case"left":l=-.5;break;case"right":l=.5;break;default:l=0}if(void 0!==n.verticalAlignment)switch(n.verticalAlignment){case"top":h=.5;break;case"bottom":h=-.5;break;case"baseline":h=-.25;break;default:h=0}}}null!=e&&o.push({angle:c,rotateClockWise:f,anchorX:l,anchorY:h,offsetX:g,offsetY:y,rasterizedResource:e})}return this.getSymbolImage(o)}getSymbolImage(e){const t=document.createElement("canvas"),r=t.getContext("2d");let a=0,i=0,s=0,c=0;const l=[];for(let t=0;t<e.length;t++){const n=e[t],m=n.rasterizedResource;if(!m)continue;const h=m.size,f=n.offsetX,g=n.offsetY,y=n.anchorX,u=n.anchorY,p=n.rotateClockWise||!1;let d=n.angle,M=o(f)-h[0]*(.5+y),C=o(g)-h[1]*(.5+u),I=M+h[0],z=C+h[1];if(d){p&&(d=-d);const e=Math.sin(d*Math.PI/180),t=Math.cos(d*Math.PI/180),r=M*t-C*e,a=M*e+C*t,i=M*t-z*e,s=M*e+z*t,o=I*t-z*e,n=I*e+z*t,c=I*t-C*e,l=I*e+C*t;M=Math.min(r,i,o,c),C=Math.min(a,s,n,l),I=Math.max(r,i,o,c),z=Math.max(a,s,n,l)}a=M<a?M:a,i=C<i?C:i,s=I>s?I:s,c=z>c?z:c;const x=r.createImageData(m.size[0],m.size[1]);x.data.set(new Uint8ClampedArray(m.image.buffer));const P={offsetX:f,offsetY:g,rotateClockwise:p,angle:d,rasterizedImage:x,anchorX:y,anchorY:u};l.push(P)}t.width=s-a,t.height=c-i;const m=-a,h=c;for(let e=0;e<l.length;e++){const t=l[e],a=this._imageDataToCanvas(t.rasterizedImage),i=t.rasterizedImage.width,s=t.rasterizedImage.height,n=m-i*(.5+t.anchorX),c=h-s*(.5-t.anchorY);if(t.angle){const e=(360-t.angle)*Math.PI/180;r.save(),r.translate(o(t.offsetX),-o(t.offsetY)),r.translate(m,h),r.rotate(e),r.translate(-m,-h),r.drawImage(a,n,c),r.restore()}else r.drawImage(a,n+o(t.offsetX),c-o(t.offsetY))}const f=new n({x:m/t.width-.5,y:h/t.height-.5});return{imageData:0!==t.width&&0!==t.height?r.getImageData(0,0,t.width,t.height):r.createImageData(1,1),anchorPosition:f}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,r=t.getContext("2d");return t.width=e.width,t.height=e.height,r.putImageData(e,0,0),t}_imageTo32Array(e,t,r){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const a=this._imageDataCanvas,i=a.getContext("2d");return a.width=t,a.height=r,i.drawImage(e,0,0,t,r),new Uint32Array(i.getImageData(0,0,t,r).data.buffer)}_getRasterizedResource(t,r,a,i,s,o){let n,c,l,h;if("esriGeometryPolyline"===a||"esriGeometryPolygon"===a){const h=i&&i.style?i.style:d.Legend,f="esriGeometryPolyline"===a?C.stroke[h]:C.fill[h];if("line"===t.type){if("CIMSolidStroke"!==t.cim.type){if("CIMPictureStroke"===t.cim.type){const e=m(t.width,r,s,o);let a,i,n;return({image:a,width:i,height:n}=this._getPictureResource(t,e)),this._rasterizePictureResource(t,a,i,n,f,e)}return null}({analyzedCIM:n,hash:l}=z(t,r,s,o)),c=this._embedCIMLayerInVectorMarker(n,f)}else if("marker"===t.type){if("CIMPictureMarker"===t.cim.type)return null;if("CIMVectorMarker"!==t.cim.type)return null;t.cim.offsetX=m(t.offsetX,r,s,o),t.cim.offsetY=m(t.offsetY,r,s,o),t.cim.rotation=m(t.rotation,r,s,o),t.cim.markerPlacement=t.markerPlacement,({analyzedCIM:n}=z(t,r,s,o)),l=e(JSON.stringify(n)).toString(),c=this._embedCIMLayerInVectorMarker(n,f)}else{if("text"===t.type)return null;if("fill"===t.type){if("CIMHatchFill"===t.cim.type||"CIMVectorMarker"===t.cim.type||"CIMPictureMarker"===t.cim.type||"CIMPictureFill"===t.cim.type){const e=t.cim.size||t.cim.height;let a,i,c;if("CIMPictureMarker"===t.cim.type||"CIMPictureFill"===t.cim.type)({image:a,width:i,height:c}=this._getPictureResource(t,e));else{({analyzedCIM:n,hash:l}=z(t,r,s,o));const e=this._rasterizer.rasterizeJSONResource(n,1,this._avoidSDF);a=e.image,i=e.size[0],c=e.size[1]}return this._rasterizePictureResource(t,a,i,c,f,null)}if("CIMSolidFill"!==t.cim.type)return null;({analyzedCIM:n,hash:l}=z(t,r,s,o)),c=this._embedCIMLayerInVectorMarker(n,f)}}}else{if("text"===t.type)return h=this._rasterizeTextResource(t,r,i,s,o),h;({analyzedCIM:n,hash:l}=z(t,r,s,o));const e=M(i,t,null);if("CIMPictureMarker"===t.cim.type){const a=m(t.size,r,s,o)*e,{image:i,width:n,height:c}=this._getPictureResource(t,a);return h={image:i,size:[n,c],sdf:!1,simplePattern:!1,anchorX:t.anchorPoint?t.anchorPoint.x:0,anchorY:t.anchorPoint?t.anchorPoint.y:0},h}f(n,e,{preserveOutlineWidth:!1}),c=n}l+=a,i&&(l+=JSON.stringify(i));const g=this._resourceCache;return g.has(l)?g.get(l):(h=this._rasterizer.rasterizeJSONResource(c,window.devicePixelRatio||1,this._avoidSDF),g.set(l,h),h)}_rasterizeTextResource(e,t,r,a,i){const s=M(r,e,null),o=m(e.text,t,a,i);if(!o||0===o.length)return null;const n=m(e.fontName,t,a,i),c=m(e.style,t,a,i),l=m(e.weight,t,a,i),f=m(e.decoration,t,a,i),g=m(e.size,t,a,i)*s,y=m(e.horizontalAlignment,t,a,i),u=m(e.verticalAlignment,t,a,i),p=h(m(e.color,t,a,i)),d=h(m(e.outlineColor,t,a,i)),C={color:p,size:g,horizontalAlignment:y,verticalAlignment:u,font:{family:n,style:c,weight:l,decoration:f},halo:{size:m(e.outlineSize,t,a,i)||0,color:d,style:c},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(o,C)}_rasterizePictureResource(e,t,r,a,n,c){const l=document.createElement("canvas"),m=l.getContext("2d");l.height=o(Math.max(Math.abs(n.frame.ymax-n.frame.ymin),c)),l.width=o(Math.abs(n.frame.xmax-n.frame.xmin));const h=m.createImageData(r,a);h.data.set(new Uint8ClampedArray(t.buffer));const f=this._imageDataToCanvas(h),g=m.createPattern(f,"repeat"),y=Math.cos((-e.cim.rotation||0)*Math.PI/180),u=Math.sin((-e.cim.rotation||0)*Math.PI/180);g.setTransform({m11:y,m12:u,m21:-u,m22:y,m41:o(e.cim.offsetX)||0,m42:o(e.cim.offsetY)||0});const p=n.canvasPaths;let d,M,C;i(p)?(d=p.rings,m.fillStyle=g,M=m.fill,C=["evenodd"]):s(p)&&(d=p.paths,m.strokeStyle=g,m.lineWidth=c,M=m.stroke,d[0][0][1]=l.height/2,d[0][1][1]=l.height/2),m.beginPath();for(const e of d){const t=e?e.length:0;if(t>1){let r=e[0];m.moveTo(o(r[0]),o(r[1]));for(let a=1;a<t;++a)r=e[a],m.lineTo(o(r[0]),o(r[1]));m.closePath()}}M.apply(m,C);const I=m.getImageData(0,0,l.width,l.height),z=new Uint8Array(I.data);return{size:[l.width,l.height],image:new Uint32Array(z.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}_getPictureResource(e,t){const r=this._pictureMarkerCache.get(e.materialHash);if(!r)return null;const a=r.height/r.width,i=t?a>1?o(t):o(t)/a:r.width,s=t?a>1?o(t)*a:o(t):r.height;return{image:this._imageTo32Array(r,i,s),width:i,height:s}}_embedCIMLayerInVectorMarker(e,t){const r=i(t.geometry)?"CIMPolygonSymbol":"CIMLineSymbol";return{type:"CIMVectorMarker",frame:t.frame,markerGraphics:[{type:"CIMMarkerGraphic",geometry:t.geometry,symbol:{type:r,symbolLayers:[e]}}]}}}function z(e,t,r,a){let i,s;if("function"==typeof e.materialHash){i=(0,e.materialHash)(t,r,a),s=y(e.cim,e.materialOverrides)}else i=e.materialHash,s=e.cim;return{analyzedCIM:s,hash:i}}export{I as CIMSymbolRasterizer,d as GeometryStyle};
