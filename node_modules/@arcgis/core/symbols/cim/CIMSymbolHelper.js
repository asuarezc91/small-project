/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../core/Logger.js";import{nextPowerOfTwo as t}from"../../core/mathUtils.js";import r from"../../Color.js";import{Placement as o}from"./CIMPlacements.js";import{EnvDrawHelper as a,Transformation as s,CanvasDrawHelper as i}from"./CIMSymbolDrawHelper.js";import{packFloatRGBA as c}from"./packingUtils.js";const n=Math.PI,l=n/2,m=e.getLogger("esri.symbols.cim.CIMSymbolHelper");function f(e,t){switch(t.type){case"CIMSymbolReference":{const r={type:"point",x:0,y:0};e.drawSymbol(t.symbol,r);break}case"CIMPointSymbol":{const r={type:"point",x:0,y:0};e.drawSymbol(t,r);break}case"CIMTextSymbol":break;case"CIMVectorMarker":{const r=new o;e.drawMarker(t,r);break}}return e.envelope()}class y{static getEnvelope(e){const t=new a;if(Array.isArray(e)){let r;for(const o of e)r?r.union(f(t,o)):r=f(t,o);return r}return f(t,e)}static getTextureAnchor(e){const t=this.getEnvelope(e);if(!t||t.width<=0||t.height<=0)return[0,0,0];const r=96/72,o=(t.x+.5*t.width)*r,a=-(t.y+.5*t.height)*r,s=t.width*r+2,i=t.height*r+2;return[o/s,a/i,i]}static rasterize(e,t,r,a=!0){const c=r||this.getEnvelope(t);if(!c||c.width<=0||c.height<=0)return[null,0,0,0,0];const n=96/72,l=(c.x+.5*c.width)*n,m=(c.y+.5*c.height)*n;e.width=c.width*n,e.height=c.height*n,r||(e.width+=2,e.height+=2);const f=e.getContext("2d"),y=s.createScale(n,-n);y.translate(.5*e.width-l,.5*e.height+m);const h=new i(f,y);switch(t.type){case"CIMPointSymbol":{const e={type:"point",x:0,y:0};h.drawSymbol(t,e);break}case"CIMVectorMarker":{const e=new o;h.drawMarker(t,e);break}}const S=f.getImageData(0,0,e.width,e.height),p=new Uint8Array(S.data);if(a){let e;for(let t=0;t<p.length;t+=4)e=p[t+3]/255,p[t]=p[t]*e,p[t+1]=p[t+1]*e,p[t+2]=p[t+2]*e}return[p,e.width,e.height,-l/e.width,-m/e.height]}static fromSimpleMarker(e){const t=50;let r,o;const a=e.style;if("circle"===a||"esriSMSCircle"===a){const e=.25;let a=Math.acos(1-e/t),s=Math.ceil(n/a/4);0===s&&(s=1),a=l/s,s*=4;const i=[];i.push([t,0]);for(let e=1;e<s;e++)i.push([t*Math.cos(e*a),-50*Math.sin(e*a)]);i.push([t,0]),r={rings:[i]},o={xmin:-50,ymin:-50,xmax:t,ymax:t}}else if("cross"===a||"esriSMSCross"===a){const e=0;r={rings:[[[e,t],[e,e],[t,e],[t,-e],[e,-e],[e,-50],[-e,-50],[-e,-e],[-50,-e],[-50,e],[-e,e],[-e,t],[e,t]]]},o={xmin:-50,ymin:-50,xmax:t,ymax:t}}else if("diamond"===a||"esriSMSDiamond"===a)r={rings:[[[-50,0],[0,t],[t,0],[0,-50],[-50,0]]]},o={xmin:-50,ymin:-50,xmax:t,ymax:t};else if("square"===a||"esriSMSSquare"===a)r={rings:[[[-50,-50],[-50,t],[t,t],[t,-50],[-50,-50]]]},o={xmin:-50,ymin:-50,xmax:t,ymax:t};else if("x"===a||"esriSMSX"===a){const e=0;r={rings:[[[0,e],[t-e,t],[t,t-e],[e,0],[t,e-t],[t-e,-50],[0,-e],[e-t,-50],[-50,e-t],[-e,0],[-50,t-e],[e-t,t],[0,e]]]},o={xmin:-50,ymin:-50,xmax:t,ymax:t}}else if("triangle"===a||"esriSMSTriangle"===a){const e=100*.5773502691896257,t=-e,a=2/3*100,s=a-100;r={rings:[[[t,s],[0,a],[e,s],[t,s]]]},o={xmin:t,ymin:s,xmax:e,ymax:a}}else"arrow"!==a&&"esriSMSArrow"!==a||(r={rings:[[[-50,50],[50,0],[-50,-50],[-33,-20],[-33,20],[-50,50]]]},o={xmin:-50,ymin:-50,xmax:t,ymax:t});let s;if(r&&o){const t=[{type:"CIMSolidFill",enable:!0,color:e.color}];e.outline&&t.push({type:"CIMSolidStroke",enable:!0,width:e.outline.width,color:e.outline.color});const a={type:"CIMPolygonSymbol",symbolLayers:t};s={type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,rotation:e.angle,size:e.size,offsetX:e.xoffset,offsetY:e.yoffset,frame:o,markerGraphics:[{type:"CIMMarkerGraphic",geometry:r,symbol:a}]}]}}return s}static fromCIMHatchFill(e){const t=void 0!==e.separation?e.separation:4,r=t/2;let o=this._getLineSymbolPeriod(e.lineSymbol)||4;for(;o<4;)o*=2;const a=o/2;return{type:"CIMVectorMarker",frame:{xmin:-a,xmax:a,ymin:-r,ymax:r},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{paths:[[[-a,0],[a,0]]]},symbol:e.lineSymbol}],size:t}}static _getLineSymbolPeriod(e){if(e){const t=this._getEffectsRepeat(e.effects);if(t)return t;if(e.symbolLayers)for(const t of e.symbolLayers){const e=this._getEffectsRepeat(t.effects);if(e)return e;if(t){const e=this._getPlacementRepeat(t.markerPlacement);if(e)return e}}}return 0}static _getEffectsRepeat(e){if(e)for(const t of e)if(t)switch(t.type){case"CIMGeometricEffectDashes":{const e=t.dashTemplate;if(e&&e.length){let t=0;for(const r of e)t+=r;return 1&e.length&&(t*=2),t}break}case"CIMGeometricEffectWave":return t.period;default:m.error(`unsupported geometric effect type ${t.type}`)}return 0}static _getPlacementRepeat(e){if(e)switch(e.type){case"CIMMarkerPlacementAlongLineSameSize":case"CIMMarkerPlacementAlongLineRandomSize":case"CIMMarkerPlacementAlongLineVariableSize":{const t=e.placementTemplate;if(t&&t.length){let e=0;for(const r of t)e+=r;return 1&t.length&&(e*=2),e}break}}return 0}static fromCIMInsidePolygon(e){const t=e.markerPlacement,r=t.stepX/2,o=t.stepY/2,a={xmin:-r,xmax:r,ymin:-o,ymax:o},s={type:e.type,...e};s.markerPlacement=null,s.anchorPoint=null;return{type:"CIMVectorMarker",frame:a,markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:{type:"CIMPointSymbol",symbolLayers:[s]}}],size:t.stepY}}static getFillColor(e){if(!e)return null;switch(e.type){case"CIMPolygonSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=y.getFillColor(t);if(null!=e)return e}break;case"CIMTextSymbol":return y.getFillColor(e.symbol);case"CIMSolidFill":return e.color}}static getStrokeColor(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=y.getStrokeColor(t);if(void 0!==e)return e}break;case"CIMTextSymbol":return y.getStrokeColor(e.symbol);case"CIMSolidStroke":return e.color}}static getStrokeWidth(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=y.getStrokeWidth(t);if(void 0!==e)return e}break;case"CIMTextSymbol":return y.getStrokeWidth(e.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return e.width}}static getSize(e){if(e)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{let t=0;if(e.symbolLayers)for(const r of e.symbolLayers){const e=y.getSize(r);e>t&&(t=e)}return t}case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":return e.width;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":return e.size}}static getMarkerScaleRatio(e){if(e)switch(e.type){case"CIMVectorMarker":if(!1!==e.scaleSymbolsProportionally&&e.frame){const t=e.frame.ymax-e.frame.ymin;return e.size/t}}return 1}}class h{static rasterizeSimpleFill(e,r,o){"solid"!==r&&"none"!==r&&"esriSFSSolid"!==r&&"esriSFSNull"!==r||console.error("Unexpected: style does not require rasterization");const a=t(Math.ceil(o)),s=this._isHorizontalOrVertical(r)?8*a:16*a,i=2*a;e.width=s,e.height=s;const c=e.getContext("2d");c.strokeStyle="#FFFFFF",c.lineWidth=a,c.beginPath(),"vertical"!==r&&"cross"!==r&&"esriSFSCross"!==r&&"esriSFSVertical"!==r||(c.moveTo(s/2,-i),c.lineTo(s/2,s+i)),"horizontal"!==r&&"cross"!==r&&"esriSFSCross"!==r&&"esriSFSHorizontal"!==r||(c.moveTo(-i,s/2),c.lineTo(s+i,s/2)),"forward-diagonal"!==r&&"diagonal-cross"!==r&&"esriSFSDiagonalCross"!==r&&"esriSFSForwardDiagonal"!==r||(c.moveTo(-i,-i),c.lineTo(s+i,s+i),c.moveTo(s-i,-i),c.lineTo(s+i,i),c.moveTo(-i,s-i),c.lineTo(i,s+i)),"backward-diagonal"!==r&&"diagonal-cross"!==r&&"esriSFSBackwardDiagonal"!==r&&"esriSFSDiagonalCross"!==r||(c.moveTo(s+i,-i),c.lineTo(-i,s+i),c.moveTo(i,-i),c.lineTo(-i,i),c.moveTo(s+i,s-i),c.lineTo(s-i,s+i)),c.stroke();const n=c.getImageData(0,0,e.width,e.height),l=new Uint8Array(n.data);let m;for(let e=0;e<l.length;e+=4)m=l[e+3]/255,l[e]=l[e]*m,l[e+1]=l[e+1]*m,l[e+2]=l[e+2]*m;return[l,e.width,e.height]}static rasterizeSimpleLine(e,t){let r;switch(t){case"butt":r="Butt";break;case"square":r="Square";break;default:r="Round"}const o="Butt"===r;let a;switch(e){case"dash":case"esriSLSDash":a=o?[4,3]:[3,4];break;case"dash-dot":case"esriSLSDashDot":a=o?[4,3,1,3]:[3,4,0,4];break;case"dot":case"esriSLSDot":a=o?[1,3]:[0,4];break;case"long-dash":case"esriSLSLongDash":a=o?[8,3]:[7,4];break;case"long-dash-dot":case"esriSLSLongDashDot":a=o?[8,3,1,3]:[7,4,0,4];break;case"long-dash-dot-dot":case"esriSLSDashDotDot":a=o?[8,3,1,3,1,3]:[7,4,0,4,0,4];break;case"short-dash":case"esriSLSShortDash":a=o?[4,1]:[3,2];break;case"short-dash-dot":case"esriSLSShortDashDot":a=o?[4,1,1,1]:[3,2,0,2];break;case"short-dash-dot-dot":case"esriSLSShortDashDotDot":a=o?[4,1,1,1,1,1]:[3,2,0,2,0,2];break;case"short-dot":case"esriSLSShortDot":a=o?[1,1]:[0,2];break;case"solid":case"esriSLSSolid":case"none":m.error("Unexpected: style does not require rasterization"),a=[0,0];break;default:m.error(`Tried to rasterize SLS, but found an unexpected style: ${e}!`),a=[0,0]}return this.rasterizeDash(a,r)}static rasterizeDash(e,t){const r="Butt"===t,o="Square"===t,a=!r&&!o,s=15;let i=0;for(const t of e)i+=t;const n=i*s,l=31*n,m=new Float32Array(l),f=a?225:s;for(let e=0;e<l;++e)m[e]=f;const y=7.5;let h=0,S=0,p=!0;for(const t of e){h=S,S+=t*s;let e=h;for(;e<S;){let t=0;for(;t<31;){const s=t*n+e,i=a?(t-15)*(t-15):Math.abs(t-15);m[s]=p?r?Math.max(Math.max(h+y-e,i),Math.max(e-S+y,i)):i:a?Math.min((e-h)*(e-h)+i,(e-S)*(e-S)+i):o?Math.min(Math.max(e-h,i),Math.max(S-e,i)):Math.min(Math.max(e-h+y,i),Math.max(S+y-e,i)),t++}e++}p=!p}const d=m.length,M=new Uint8Array(4*d);for(let e=0;e<d;++e){const t=(a?Math.sqrt(m[e]):m[e])/s;c(t,M,4*e)}return[M,n,31]}static _isHorizontalOrVertical(e){return"vertical"===e||"horizontal"===e||"cross"===e||"esriSFSCross"===e||"esriSFSVertical"===e||"esriSFSHorizontal"===e}}class S{static findApplicableOverrides(e,t,r){if(t){if(e.primitiveName){let o=!1;for(const t of r)if(t.primitiveName===e.primitiveName){o=!0;break}if(!o)for(const o of t)o.primitiveName===e.primitiveName&&r.push(o)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const o of e.effects)S.findApplicableOverrides(o,t,r);if(e.symbolLayers)for(const o of e.symbolLayers)S.findApplicableOverrides(o,t,r);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":if(e.effects)for(const o of e.effects)S.findApplicableOverrides(o,t,r);if(e.markerPlacement&&S.findApplicableOverrides(e.markerPlacement,t,r),"CIMVectorMarker"===e.type){if(e.markerGraphics)for(const o of e.markerGraphics)S.findApplicableOverrides(o,t,r),S.findApplicableOverrides(o.symbol,t,r)}else"CIMCharacterMarker"===e.type?S.findApplicableOverrides(e.symbol,t,r):"CIMHatchFill"===e.type&&S.findApplicableOverrides(e.lineSymbol,t,r)}}}static applyOverrides(e,t,r,o){if(!t)return;if(e.primitiveName)for(const s of t)if(s.primitiveName===e.primitiveName){const t=(a=s.propertyName)?a.charAt(0).toLowerCase()+a.substr(1):a;if(o&&o.push({cim:e,nocapPropertyName:t,value:e[t]}),s.expression&&(s.value=S.toValue(s.propertyName,s.expression)),r){let t=!1;for(const o of r)o.primitiveName===e.primitiveName&&(t=!0);t||r.push(s)}e[t]=s.value}var a;switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const a of e.effects)S.applyOverrides(a,t,r,o);if(e.symbolLayers)for(const a of e.symbolLayers)S.applyOverrides(a,t,r,o);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(e.effects)for(const a of e.effects)S.applyOverrides(a,t,r,o);if("CIMVectorMarker"===e.type&&e.markerGraphics)for(const a of e.markerGraphics)S.applyOverrides(a,t,r,o),S.applyOverrides(a.symbol,t,r,o)}}static restoreOverrides(e){for(const t of e)t.cim[t.nocapPropertyName]=t.value}static buildOverrideKey(e){let t="";for(const r of e)void 0!==r.value&&(t+=`${r.primitiveName}${r.propertyName}${JSON.stringify(r.value)}`);return t}static toValue(e,t){if("DashTemplate"===e)return t.split(" ").map((e=>Number(e)));if("Color"===e){const e=new r(t).toRgba();return e[3]*=255,e}return t}}export{y as CIMSymbolHelper,S as OverrideHelper,h as SymbolHelper};
