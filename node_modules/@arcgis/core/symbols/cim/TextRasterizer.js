/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../core/screenUtils.js";class e{constructor(){}rasterizeText(t,e){this._textRasterizationCanvas||(this._textRasterizationCanvas=document.createElement("canvas"));const i=this._textRasterizationCanvas,s=i.getContext("2d");this.setFontProperties(s,e),this.parameters=e,this.textLines=t.split(/\r?\n/),this.lineHeight=this.computeLineHeight();const r=this.computeTextWidth(s,e),o=this.lineHeight*this.textLines.length;var n;i.width=r,i.height=o,this.renderedLineHeight=Math.round(this.lineHeight*e.pixelRatio),this.renderedHaloSize=e.halo.size*e.pixelRatio,this.renderedWidth=r*e.pixelRatio,this.renderedHeight=o*e.pixelRatio,this.fillStyle=`rgba(${(n=e.color).slice(0,3).toString()},${n[3]})`,this.haloStyle=function(t){return`rgb(${t.slice(0,3).toString()})`}(e.halo.color);const a=this.renderedLineHeight,h=this.renderedHaloSize;this.setFontProperties(s,e);const l=function(t,e){return"center"===t?.5*e:"right"===t?e:0}(s.textAlign,this.renderedWidth)+h,d=h;let c=0,g=0;h>0&&this.renderHalo(s,l,d,c,g,e),g+=d,c+=l;for(const t of this.textLines)s.globalCompositeOperation="destination-out",s.fillStyle="rgb(0, 0, 0)",s.fillText(t,c,g),s.globalCompositeOperation="source-over",s.fillStyle=this.fillStyle,s.fillText(t,c,g),g+=a;const f=s.getImageData(0,0,this.renderedWidth,this.renderedHeight),p=new Uint8Array(f.data);if(e.premultiplyColors){let t;for(let e=0;e<p.length;e+=4)t=p[e+3]/255,p[e]=p[e]*t,p[e+1]=p[e+1]*t,p[e+2]=p[e+2]*t}return{size:[this.renderedWidth,this.renderedHeight],image:new Uint32Array(p.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}renderHalo(t,e,i,s,r,o){const n=this.renderedWidth,a=this.renderedHeight;this._haloRasterizationCanvas||(this._haloRasterizationCanvas=document.createElement("canvas")),this._haloRasterizationCanvas.width=n,this._haloRasterizationCanvas.height=a;const h=this._haloRasterizationCanvas,l=h.getContext("2d");l.clearRect(0,0,n,a),this.setFontProperties(l,o),l.fillStyle=this.haloStyle,l.strokeStyle=this.haloStyle;const d=this.renderedHaloSize<3;l.lineJoin=d?"miter":"round",d?this.renderHaloEmulated(l,e,i):this.renderHaloNative(l,e,i),t.globalAlpha=this.parameters.halo.color[3],t.drawImage(h,0,0,n,a,s,r,n,a),t.globalAlpha=1}renderHaloEmulated(t,e,s){const r=this.renderedLineHeight,o=this.renderedHaloSize;for(const n of this.textLines){for(const[r,a]of i)t.fillText(n,e+o*r,s+o*a);s+=r}}renderHaloNative(t,e,i){const s=this.renderedLineHeight,r=this.renderedHaloSize;for(const o of this.textLines){const n=2*r,a=5,h=.1;for(let s=0;s<a;s++){const r=1-(a-1)*h+s*h;t.lineWidth=r*n,t.strokeText(o,e,i)}i+=s}}setFontProperties(e,i){const s=i.font,r=`${s.style} ${s.weight} ${t(i.size*i.pixelRatio)}px ${s.family}, sans-serif`;let o;switch(e.font=r,e.textBaseline="top",i.horizontalAlignment){case"left":o="left";break;case"right":o="right";break;case"center":o="center";break;default:o="left"}e.textAlign=o}computeTextWidth(t,e){let i=0;for(const e of this.textLines)i=Math.max(i,t.measureText(e).width);const s=e.font;return("italic"===s.style||"oblique"===s.style||"string"==typeof s.weight&&("bold"===s.weight||"bolder"===s.weight)||"number"==typeof s.weight&&s.weight>600)&&(i+=.3*t.measureText("A").width),i+=2*this.parameters.halo.size,Math.round(i)}computeLineHeight(){const t=1.275*this.parameters.size;return Math.round(t+2*this.parameters.halo.size)}}const i=[];{const t=16;for(let e=0;e<360;e+=360/t)i.push([Math.cos(Math.PI*e/180),Math.sin(Math.PI*e/180)])}export default e;export{e as TextRasterizer};
