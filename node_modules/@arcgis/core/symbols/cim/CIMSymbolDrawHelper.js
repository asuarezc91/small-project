/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../../core/Logger.js";import{getBoundsXY as s}from"../../geometry/support/boundsUtils.js";import{isPolygon as e,isPolyline as r}from"../../geometry/support/jsonUtils.js";import{create as i}from"../../geometry/support/aaBoundingRect.js";import{Placement as o}from"./CIMPlacements.js";import{SimpleGeometryCursor as a}from"./CIMEffects.js";import{getEffectOperator as n,getPlacementOperator as h}from"./CIMOperators.js";import l from"./Rect.js";const c=Math.PI/180,f=t.getLogger("esri.symbols.cim.CIMSymbolDrawHelper");class m{constructor(t){this._t=t}static createIdentity(){return new m([1,0,0,0,1,0])}clone(){const t=this._t;return new m(t.slice())}transform(t){const s=this._t;return[s[0]*t[0]+s[1]*t[1]+s[2],s[3]*t[0]+s[4]*t[1]+s[5]]}static createScale(t,s){return new m([t,0,0,0,s,0])}scale(t,s){const e=this._t;return e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=s,e[4]*=s,e[5]*=s,this}scaleRatio(){return Math.sqrt(this._t[0]*this._t[0]+this._t[1]*this._t[1])}static createTranslate(t,s){return new m([0,0,t,0,0,s])}translate(t,s){const e=this._t;return e[2]+=t,e[5]+=s,this}static createRotate(t){const s=Math.cos(t),e=Math.sin(t);return new m([s,-e,0,e,s,0])}rotate(t){return this.multiply(m.createRotate(t))}multiply(t){const s=this._t,e=t._t,r=s[0]*e[0]+s[3]*e[1],i=s[1]*e[0]+s[4]*e[1],o=s[2]*e[0]+s[5]*e[1]+e[2],a=s[0]*e[3]+s[3]*e[4],n=s[1]*e[3]+s[4]*e[4],h=s[2]*e[3]+s[5]*e[4]+e[5];return s[0]=r,s[1]=i,s[2]=o,s[3]=a,s[4]=n,s[5]=h,this}}class u{constructor(t){this._transfos=[],this._sizeTransfos=[],this._transfos.push(t||m.createIdentity()),this._sizeTransfos.push(t?t.scaleRatio():1)}transformPt(t){return this._transfos[this._transfos.length-1].transform(t)}transformSize(t){return t*this._sizeTransfos[this._sizeTransfos.length-1]}back(){return this._transfos[this._transfos.length-1]}push(t,s){const e=s?t.scaleRatio():1;t.multiply(this.back()),this._transfos.push(t),this._sizeTransfos.push(this._sizeTransfos[this._sizeTransfos.length-1]*e)}pop(){this._transfos.splice(-1,1),this._sizeTransfos.splice(-1,1)}drawSymbol(t,s){if(t)switch(t.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":this.drawMultiLayerSymbol(t,s)}}drawMultiLayerSymbol(t,s){if(!t)return;const e=t.symbolLayers;if(!e)return;const r=t.effects;if(r){const t=this.executeEffects(r,s);if(t){let s=t.next();for(;s;)this.drawSymbolLayers(e,s),s=t.next()}}else this.drawSymbolLayers(e,s)}executeEffects(t,s){let e=new a(s);for(const s of t){const t=n(s);t&&(e=t.execute(e,s,1))}return e}drawSymbolLayers(t,s){let e=t.length;for(;e--;){const r=t[e];if(!r||!1===r.enable)continue;const i=r.effects;if(i){const t=this.executeEffects(i,s);if(t){let s=t.next();for(;s;)this.drawSymbolLayer(r,s),s=t.next()}}else this.drawSymbolLayer(r,s)}}drawSymbolLayer(t,s){switch(t.type){case"CIMSolidFill":this.drawSolidFill(s,t.color);break;case"CIMHatchFill":this.drawHatchFill(t,s);break;case"CIMSolidStroke":this.drawSolidStroke(s,t.color,t.width,t.capStyle,t.joinStyle,t.miterLimit);break;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":this.drawMarkerLayer(t,s)}}drawHatchFill(t,s){const e=this._buildHatchPolyline(t,s,1);e&&(this.pushClipPath(s),this.drawMultiLayerSymbol(t.lineSymbol,e),this.popClipPath())}drawMarkerLayer(t,s){const e=t.markerPlacement;if(e){const r=h(e);if(r){const i="CIMMarkerPlacementInsidePolygon"===e.type;i&&this.pushClipPath(s);const o=1,a=r.execute(s,e,o);if(a){let s=a.next();for(;s;)this.drawMarker(t,s),s=a.next()}i&&this.popClipPath()}}else{const e=new o;e.tx=s.x,e.ty=s.y,this.drawMarker(t,e)}}drawMarker(t,s){switch(t.type){case"CIMCharacterMarker":case"CIMPictureMarker":this.drawPictureMarker(t,s);break;case"CIMVectorMarker":this.drawVectorMarker(t,s)}}drawPictureMarker(t,s){}drawVectorMarker(t,s){if(!t)return;const e=t.markerGraphics;if(!e)return;const r=t.size,i=t.frame,o=i?i.ymax-i.ymin:0,a=r&&o?r/o:1,n=m.createIdentity();i&&n.translate(.5*-(i.xmax+i.xmin),.5*-(i.ymax+i.ymin));const h=t.anchorPoint;if(h){let s=h.x,e=h.y;"Absolute"!==t.anchorPointUnits&&i&&(s*=i.xmax-i.xmin,e*=i.ymax-i.ymin),n.translate(-s,-e)}1!==a&&n.scale(a,a),t.rotation&&n.rotate(t.rotation*c),n.translate(t.offsetX||0,t.offsetY||0),n.translate(s.tx,s.ty),this.push(n,t.scaleSymbolsProportionally);for(const t of e)t&&t.symbol&&t.geometry||f.error("Invalid marker graphic",t),this.drawSymbol(t.symbol,t.geometry);this.pop()}_buildHatchPolyline(t,e,r){let o=(void 0!==t.separation?t.separation:4)*r,a=void 0!==t.rotation?t.rotation:0;if(0===o)return null;o<0&&(o=-o);let n=0;const h=.5*o;for(;n>h;)n-=o;for(;n<-h;)n+=o;const l=i();s(l,e),l[0]-=h,l[1]-=h,l[2]+=h,l[3]+=h;const f=[[l[0],l[1]],[l[0],l[3]],[l[2],l[3]],[l[2],l[1]]];for(;a>180;)a-=180;for(;a<0;)a+=180;const m=Math.cos(a*c),u=Math.sin(a*c),p=-o*u,_=o*m;let y,d,x,M;n=(void 0!==t.offsetX?t.offsetX*r:0)*u-(void 0!==t.offsetY?t.offsetY*r:0)*m,y=x=Number.MAX_VALUE,d=M=-Number.MAX_VALUE;for(const t of f){const s=t[0],e=t[1],r=m*s+u*e,i=-u*s+m*e;y=Math.min(y,r),x=Math.min(x,i),d=Math.max(d,r),M=Math.max(M,i)}x=Math.floor(x/o)*o;let b=m*y-u*x-p*n/o,w=u*y+m*x-_*n/o,P=m*d-u*x-p*n/o,S=u*d+m*x-_*n/o;const C=1+Math.round((M-x)/o),k=[];for(let t=0;t<C;t++)b+=p,w+=_,P+=p,S+=_,k.push([[b,w],[P,S]]);return{paths:k}}}class p extends u{constructor(){super(),this.reset()}reset(){this._xmin=this._ymin=1/0,this._xmax=this._ymax=-1/0,this._clipCount=0}envelope(){return new l(this._xmin,this._ymin,this._xmax-this._xmin,this._ymax-this._ymin)}drawSolidFill(t){!t||this._clipCount>0||(e(t)?this._processPath(t.rings,0):r(t)&&this._processPath(t.paths,0))}drawSolidStroke(t,s,i){if(!t||this._clipCount>0)return;const o=.5*this.transformSize(i);e(t)?this._processPath(t.rings,o):r(t)&&this._processPath(t.paths,o)}pushClipPath(t){this.drawSolidFill(t),++this._clipCount}popClipPath(){--this._clipCount}_processPath(t,s){if(t)for(const e of t){const t=e?e.length:0;if(t>1){this._merge(this.transformPt(e[0]),s);for(let r=1;r<t;++r)this._merge(this.transformPt(e[r]),s)}}}_merge(t,s){t[0]-s<this._xmin&&(this._xmin=t[0]-s),t[0]+s>this._xmax&&(this._xmax=t[0]+s),t[1]-s<this._ymin&&(this._ymin=t[1]-s),t[1]+s>this._ymax&&(this._ymax=t[1]+s)}}class _ extends u{constructor(t,s){super(s),this._ctx=t}drawSolidFill(t,s){if(!t)return;if(e(t))this._buildPath(t.rings,!0);else{if(!r(t))return;this._buildPath(t.paths,!0)}const i=this._ctx;i.fillStyle="string"==typeof s?s:"rgba("+Math.round(s[0])+","+Math.round(s[1])+","+Math.round(s[2])+","+s[3]/255+")",i.fill("evenodd")}drawSolidStroke(t,s,i,o,a,n){if(!t||!s||0===i)return;if(e(t))this._buildPath(t.rings,!0);else{if(!r(t))return;this._buildPath(t.paths,!1)}const h=this._ctx;h.strokeStyle="string"==typeof s?s:"rgba("+Math.round(s[0])+","+Math.round(s[1])+","+Math.round(s[2])+","+s[3]/255+")",h.lineWidth=this.transformSize(i)+.5,this._setCapStyle(o),this._setJoinStyle(a),h.miterLimit=n,h.stroke()}pushClipPath(t){this._ctx.save(),e(t)?this._buildPath(t.rings,!0):r(t)&&this._buildPath(t.paths,!0),this._ctx.clip("evenodd")}popClipPath(){this._ctx.restore()}_buildPath(t,s){const e=this._ctx;if(e.beginPath(),t)for(const r of t){const t=r?r.length:0;if(t>1){let i=this.transformPt(r[0]);e.moveTo(i[0],i[1]);for(let s=1;s<t;++s)i=this.transformPt(r[s]),e.lineTo(i[0],i[1]);s&&e.closePath()}}}_setCapStyle(t){switch(t){case"Butt":this._ctx.lineCap="butt";break;case"Round":this._ctx.lineCap="round";break;case"Square":this._ctx.lineCap="square"}}_setJoinStyle(t){switch(t){case"Bevel":this._ctx.lineJoin="bevel";break;case"Round":this._ctx.lineJoin="round";break;case"Miter":this._ctx.lineJoin="miter"}}}export{u as CIMSymbolDrawHelper,c as C_DEG_TO_RAD,_ as CanvasDrawHelper,p as EnvDrawHelper,m as Transformation};
