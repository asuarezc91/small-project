/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{px2pt as t}from"../../core/screenUtils.js";import{getCIMSymbolSize as e,scaleCIMSymbolTo as a}from"./cimSymbolUtils.js";import{CIMSymbolRasterizer as l}from"../cim/CIMSymbolRasterizer.js";const i=new l(null,!0);async function o(l,o={}){const{size:n,maxSize:s,feature:c,fieldMap:m,geometryType:r,style:y,node:d,opacity:h}=o,u=e(l),p=Math.min(null!=n?n:u,null!=s?s:t(120));p!==u&&(l=l.clone(),a(l,p,{preserveOutlineWidth:!0}));let g=3;l&&l.data&&l.data.symbol&&"CIMPointSymbol"!==l.data.symbol.type&&(g=1);const f=await i.rasterizeCIMSymbolAsync(l,c,m,r,{scaleFactor:g,style:y}),M=document.createElement("canvas");M.width=f.imageData.width,M.height=f.imageData.height;M.getContext("2d").putImageData(f.imageData,0,0);let b=M.width/g,w=M.height/g;if(null!=n&&(null==(null==o?void 0:o.scale)||(null==o?void 0:o.scale))){const t=b/w;b=t<=1?Math.ceil(p*t):p,w=t<=1?p:Math.ceil(p/t)}const C=new Image(b,w);return C.src=M.toDataURL(),null!=h&&(C.style.opacity=`${h}`),d&&d.appendChild(C),C}export{o as previewCIMSymbol};
