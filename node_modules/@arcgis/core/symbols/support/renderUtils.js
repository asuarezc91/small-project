/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../../core/has.js";import e from"../../core/Error.js";import{reject as i}from"../../core/promiseUtils.js";import{id as r}from"../../kernel.js";import n from"../../request.js";import{toHSV as o,toRGB as a}from"../../core/colorUtils.js";import"../../libs/maquette/projection.js";import{createProjector as c}from"../../libs/maquette/projector.js";import{renderSVG as s}from"./svgUtils.js";const h=c();function l(t,e,i){const r=Math.ceil(e[0]),n=Math.ceil(e[1]);if(!t.some((t=>!!t.length)))return null;const o=i&&i.node||document.createElement("div");return null!=i.opacity&&(o.style.opacity=i.opacity.toString()),h.append(o,s.bind(null,t,r,n,i)),o}function m(t,e,i,r,n){switch(n){case"multiply":t[e+0]*=i[0],t[e+1]*=i[1],t[e+2]*=i[2],t[e+3]*=i[3];break;default:{const n=o({r:t[e+0],g:t[e+1],b:t[e+2]});n.h=r.h,n.s=r.s,n.v=n.v/100*r.v;const c=a(n);t[e+0]=c.r,t[e+1]=c.g,t[e+2]=c.b,t[e+3]*=i[3];break}}}function g(a,c,s,h,l){return function(t,r,o){return t?n(t,{responseType:"image"}).then((t=>{const e=t.data,i=e.width,n=e.height,a=i/n;let c=r;if(o){const t=Math.max(i,n);c=Math.min(c,t)}return{image:e,width:a<=1?Math.ceil(c*a):c,height:a<=1?c:Math.ceil(c/a)}})):i(new e("renderUtils: imageDataSize","href not provided."))}(a,c,l).then((e=>{const i=e.width?e.width:c,n=e.height?e.height:c;if(e.image&&function(t,e){return!(!t||"ignore"===e||"multiply"===e&&255===t.r&&255===t.g&&255===t.b&&1===t.a)}(s,h)){let r=e.image.width,c=e.image.height;(t("edge")||t("ie"))&&/\.svg$/i.test(a)&&(r-=1,c-=1);const l=function(t,e){t=Math.ceil(t),e=Math.ceil(e);const i=document.createElement("canvas");i.width=t,i.height=e,i.style.width=t+"px",i.style.height=e+"px";const r=i.getContext("2d");return r.clearRect(0,0,t,e),r}(i,n);l.drawImage(e.image,0,0,r,c,0,0,i,n);const g=l.getImageData(0,0,i,n),u=[s.r/255,s.g/255,s.b/255,s.a],d=o(s);for(let t=0;t<g.data.length;t+=4)m(g.data,t,u,d,h);l.putImageData(g,0,0),a=l.canvas.toDataURL("image/png")}else{const t=r&&r.findCredential(a);if(t&&t.token){const e=-1===a.indexOf("?")?"?":"&";a=`${a}${e}token=${t.token}`}}return{url:a,width:i,height:n}})).catch((function(){return{url:a,width:c,height:c}}))}export{l as renderSymbol,g as tintImageWithColor};
