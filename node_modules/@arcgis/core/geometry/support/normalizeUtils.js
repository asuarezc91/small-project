/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../config.js";import{isNone as t,isSome as n}from"../../core/maybe.js";import s from"../../core/Logger.js";import o from"../../core/Error.js";import{resolve as r}from"../../core/promiseUtils.js";import{getInfo as i}from"./spatialReferenceUtils.js";import f from"../SpatialReference.js";import{geographicToWebMercator as l,webMercatorToGeographic as c}from"./webMercatorUtils.js";import p from"../Polygon.js";import a from"../Polyline.js";import{cut as u}from"../../tasks/geometry/cut.js";import{simplify as h}from"../../tasks/geometry/simplify.js";const m=s.getLogger("esri.geometry.support.normalizeUtils"),g={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new a({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:f.WebMercator}),minus180Line:new a({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:f.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new a({paths:[[[180,-180],[180,180]]],spatialReference:f.WGS84}),minus180Line:new a({paths:[[[-180,-180],[-180,180]]],spatialReference:f.WGS84})}};function x(e){return"polygon"===e.type}function y(e){return"polyline"===e[0].type}function w(e){return x(e)?e.rings:e.paths}function R(e,t){return Math.ceil((e-t)/(2*t))}function d(e,t){const n=w(e);for(const e of n)for(const n of e)n[0]+=t;return e}function j(e){const t=[];let n=0,s=0;for(let o=0;o<e.length;o++){const r=e[o];let i=null;for(let e=0;e<r.length;e++)i=r[e],t.push(i),0===e?(n=i[0],s=n):(n=Math.min(n,i[0]),s=Math.max(s,i[0]));i&&t.push([(n+s)/2,0])}return t}function M(e,t){if(!(e instanceof a||e instanceof p)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw m.error(e),new o(e)}const n=w(e),s=[];for(const e of n){const n=[];s.push(n),n.push([e[0][0],e[0][1]]);for(let s=0;s<e.length-1;s++){const o=e[s][0],r=e[s][1],i=e[s+1][0],f=e[s+1][1],l=Math.sqrt((i-o)*(i-o)+(f-r)*(f-r)),c=(f-r)/l,p=(i-o)/l,a=l/t;if(a>1){for(let e=1;e<=a-1;e++){const s=e*t,i=p*s+o,f=c*s+r;n.push([i,f])}const e=(l+Math.floor(a-1)*t)/2,s=p*e+o,i=c*e+r;n.push([s,i])}n.push([i,f])}}return x(e)?new p({rings:s,spatialReference:e.spatialReference}):new a({paths:s,spatialReference:e.spatialReference})}function L(e,t,n){if(t){const t=M(e,1e6);e=c(t,!0)}return n&&(e=d(e,n)),e}function b(e,t,n){if(Array.isArray(e)){const s=e[0];if(s>t){const n=R(s,t);e[0]=s+n*(-2*t)}else if(s<n){const t=R(s,n);e[0]=s+t*(-2*n)}}else{const s=e.x;if(s>t){const n=R(s,t);e=e.clone().offset(n*(-2*t),0)}else if(s<n){const t=R(s,n);e=e.clone().offset(t*(-2*n),0)}}return e}async function P(s,o,f){if(!Array.isArray(s))return P([s],o);const c=o?o.url:e.geometryServiceUrl;let m,x,j,M,X,U,W,k,A=0;const S=[],v=[];for(const e of s)if(t(e))v.push(e);else if(m||(m=e.spatialReference,x=i(m),j=m.isWebMercator,U=j?102100:4326,M=g[U].maxX,X=g[U].minX,W=g[U].plus180Line,k=g[U].minus180Line),x)if("mesh"===e.type)v.push(e);else if("point"===e.type)v.push(b(e.clone(),M,X));else if("multipoint"===e.type){const t=e.clone();t.points=t.points.map((e=>b(e,M,X))),v.push(t)}else if("extent"===e.type){const t=e.clone()._normalize(!1,!1,x);v.push(t.rings?new p(t):t)}else if(e.extent){const t=e.extent,n=R(t.xmin,X)*(2*M);let s=0===n?e.clone():d(e.clone(),n);t.offset(n,0),t.intersects(W)&&t.xmax!==M?(A=t.xmax>A?t.xmax:A,s=L(s,j),S.push(s),v.push("cut")):t.intersects(k)&&t.xmin!==X?(A=t.xmax*(2*M)>A?t.xmax*(2*M):A,s=L(s,j,360),S.push(s),v.push("cut")):v.push(s)}else v.push(e.clone());else v.push(e);let z=R(A,M),G=-90;const I=z,q=new a;for(;z>0;){const e=360*z-180;q.addPath([[e,G],[e,-1*G]]),G*=-1,z--}if(S.length>0&&I>0){const e=function(e,t){let n=-1;for(let s=0;s<t.cutIndexes.length;s++){const o=t.cutIndexes[s],r=t.geometries[s],i=w(r);for(let e=0;e<i.length;e++){const t=i[e];t.some((n=>{if(n[0]<180)return!0;{let n=0;for(let e=0;e<t.length;e++){const s=t[e][0];n=s>n?s:n}n=Number(n.toFixed(9));const s=-360*R(n,180);for(let n=0;n<t.length;n++){const t=r.getPoint(e,n);r.setPoint(e,n,t.clone().offset(s,0))}return!0}}))}if(o===n){if("polygon"===e[0].type)for(const t of w(r))e[o]=e[o].addRing(t);else if(y(e))for(const t of w(r))e[o]=e[o].addPath(t)}else n=o,e[o]=r}return e}(S,await u(c,S,q,f)),t=[],o=[];for(let r=0;r<v.length;r++){const i=v[r];if("cut"!==i)o.push(i);else{const i=e.shift(),f=s[r];n(f)&&"polygon"===f.type&&f.rings&&f.rings.length>1&&i.rings.length>=f.rings.length?(t.push(i),o.push("simplify")):o.push(j?l(i):i)}}if(!t.length)return o;const r=await h(c,t,f),i=[];for(let e=0;e<o.length;e++){const t=o[e];"simplify"!==t?i.push(t):i.push(j?l(r.shift()):r.shift())}return i}const D=[];for(let e=0;e<v.length;e++){const t=v[e];if("cut"!==t)D.push(t);else{const e=S.shift();D.push(!0===j?l(e):e)}}return r(D)}function X(e){if(!e)return null;const t=e.extent;if(!t)return null;const n=e.spatialReference&&i(e.spatialReference);if(!n)return t;const[s,o]=n.valid,r=2*o,{width:f}=t;let l,{xmin:c,xmax:p}=t;if([c,p]=[p,c],"extent"===e.type||0===f||f<=o||f>r||c<s||p>o)return t;switch(e.type){case"polygon":if(!(e.rings.length>1))return t;l=j(e.rings);break;case"polyline":if(!(e.paths.length>1))return t;l=j(e.paths);break;case"multipoint":l=e.points}const a=t.clone();for(let e=0;e<l.length;e++){let t=l[e][0];t<0?(t+=o,p=Math.max(t,p)):(t-=o,c=Math.min(t,c))}return a.xmin=c,a.xmax=p,a.width<f?(a.xmin-=o,a.xmax-=o,a):t}function U(e,t){const n=i(t);if(n){const[t,s]=n.valid,o=s-t;if(e<t)for(;e<t;)e+=o;if(e>s)for(;e>s;)e-=o}return e}export{X as getDenormalizedExtent,P as normalizeCentralMeridian,U as normalizeMapX,M as straightLineDensify};
