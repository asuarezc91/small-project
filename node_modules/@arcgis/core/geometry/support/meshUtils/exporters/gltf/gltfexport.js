/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{resolve as e,create as o}from"../../../../../core/promiseUtils.js";import{Asset as t}from"./asset.js";import{Scene as n}from"./scene.js";import{Node as i}from"./node.js";import{exportGLB as r,MODEL_NAME_GLB as s}from"./index.js";class d{constructor(e,o){this.file={type:"model/gltf-binary",data:e},this.origin=o}buffer(){return e(this.file)}download(e){return o((()=>{const o=new Blob([this.file.data],{type:this.file.type});let t=e;t||(t="model.glb");if("glb"!==t.split(".").pop()&&(t+=".glb"),window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(o,t);else{const e=document.createElement("a"),n=URL.createObjectURL(o);e.href=n,e.download=t,document.body.appendChild(e),e.click(),setTimeout((function(){document.body.removeChild(e),window.URL.revokeObjectURL(n)}),0)}}))}}function l(e,o){const l=new t,m=new n;l.addScene(m);const a=new i;return m.addNode(a),a.mesh=e,r(l,o).then((e=>new d(e[s],e.origin)))}export{l as toBinaryGLTF};
