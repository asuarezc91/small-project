/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{eachAlways as e}from"../../../../../core/promiseUtils.js";import t from"../../../../Point.js";export{Asset}from"./asset.js";import{ImageOutputType as r,BufferOutputType as o}from"./types.js";export{AlphaMode,BufferOutputType,ColorMode,ComponentType,DataType,FilterMode,ImageOutputType,MeshMode}from"./types.js";import{GLB as n}from"./glb.js";import{isArrayBufferPNG as s,encodeBase64DataUri as i}from"./imageutils.js";import{GLTF as p}from"./gltf.js";export{Scene}from"./scene.js";export{Node}from"./node.js";const a="model.gltf",f="model.glb";function u(a,f,u){const m=new p(a,f=f||{},u);let l=m.params;l?l.origin||(l.origin=new t({x:-1,y:-1,z:-1})):l={origin:new t({x:-1,y:-1,z:-1})};const c=l.origin,g=m.gltf,y=g.extras.promises;let d=1,j=1,x=null;return e(y).then((()=>{const e={origin:c};delete g.extras;const t="number"==typeof f.jsonSpacing?f.jsonSpacing:4,p=JSON.stringify(g,((t,n)=>{if("extras"!==t){if(n instanceof ArrayBuffer){if(s(n))switch(f.imageOutputType){case r.DataURI:case r.GLB:break;case r.External:default:{const t=`img${j}.png`;return j++,e[t]=n,t}}switch(f.bufferOutputType){case o.DataURI:return i(n);case o.GLB:if(x)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(x=n);case o.External:default:{const t=`data${d}.bin`;return d++,e[t]=n,t}}}return n}}),t);return f.bufferOutputType===o.GLB||f.imageOutputType===r.GLB?e["model.glb"]=new n(p,x).buffer:e["model.gltf"]=p,e}))}function m(e,t){return u(e,{bufferOutputType:o.GLB,imageOutputType:r.GLB,jsonSpacing:0},t)}export{f as MODEL_NAME_GLB,a as MODEL_NAME_GLTF,m as exportGLB,u as exportGLTF};
