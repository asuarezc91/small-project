/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../core/maybe.js";import{c as t}from"../../../chunks/vec3f64.js";import{open as r}from"../../../core/workers/workers.js";import{ElevationSamplerBase as o}from"../../../layers/support/ElevationSampler.js";import{i as n}from"../../../chunks/triangle.js";import{ray as s}from"../../../views/3d/support/geometryUtils.js";import{ElevationSamplerWorker as i}from"./ElevationSamplerWorker.js";async function a(t,o){const n=await function(){if(++c,function(){p&&(clearTimeout(p),p=0)}(),u)return u;return u=r("ElevationSamplerWorker").catch((()=>null)),u}(),s=await m.createIndex(t,n);return function(t){--c,e(t)&&0===c&&(p=setTimeout((()=>{t.close(),u=null,p=0}),f))}(n),new l(t,s,o)}class l extends o{constructor(t,r,o){super(),this.rindex=r,this.demResolution={min:0,max:0},this.spatialReference=t.spatialReference.clone(),this.extent=t.extent.clone(),this.noDataValue=e(o)&&o.noDataValue||0}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);let r=Number.NEGATIVE_INFINITY;return s.fromValues([t.x,t.y,0],[0,0,-1],h),this.rindex.search({minX:t.x,maxX:t.x,minY:t.y,maxY:t.y},(e=>{n(e,h,x)&&x[2]>r&&(r=x[2])})),r===Number.NEGATIVE_INFINITY?this.noDataValue:r}}const m=new i;let c=0,u=null,p=0;const f=1e4,h=s.fromValues([0,0,0],[0,0,-1]),x=t();export{a as create};
