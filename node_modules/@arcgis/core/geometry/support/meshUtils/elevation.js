/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{eachAlways as e}from"../../../core/promiseUtils.js";import t from"../../Point.js";import"../../../geometry.js";import n from"../../../Ground.js";import{getMetersPerUnitForSR as o}from"../../../core/unitUtils.js";import i from"../../Mesh.js";async function r(t,r,l){let c;if(a(t)||t instanceof n){const n=await async function(t){if(a(t))return t.load();return await t.load(),await e(t.layers.map((e=>e.load()))),t}(t);c=await n.createElevationSampler(r,{demResolution:l&&l.demResolution||"finest-contiguous"})}else c=t;return function(e,t,n){const r=o(t.spatialReference),a=e.demResolution.min/r,l=Math.round(t.width/a),c=Math.round(t.height/a),m=l+1,f=c+1,u=new Float64Array(m*f*3),p=new Float32Array(m*f*2);let d=0,y=0;const h=new Uint32Array(l*c*2*3);let w=0,R=0;s.spatialReference=t.spatialReference;for(let n=0;n<f;n++){const o=t.ymin+t.height*(n/c);for(let i=0;i<m;i++){const r=t.xmin+t.width*(i/l);s.x=r,s.y=o,u[d++]=r,u[d++]=o,u[d++]=e.elevationAt(s)||0;const a=i/l,f=n/c;p[y++]=a,p[y++]=f,n!==c&&i!==l&&(h[R++]=w+1,h[R++]=w+m+1,h[R++]=w+m,h[R++]=w,h[R++]=w+1,h[R++]=w+m),w++}}return new i({vertexAttributes:{position:u,uv:p},components:[{faces:h,shading:"smooth",material:n&&n.material||null}],spatialReference:t.spatialReference})}(c,r,l)}function a(e){return"type"in e&&("elevation"===e.type||"base-elevation"===e.type)}const s=new t;export{r as create};
