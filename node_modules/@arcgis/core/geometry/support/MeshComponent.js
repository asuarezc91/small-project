/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{clone as t}from"../../core/lang.js";import e from"../../core/Logger.js";import{ensureClass as o}from"../../core/accessorSupport/ensureType.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{cast as a}from"../../core/accessorSupport/decorators/cast.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import c from"../../core/Accessor.js";import p from"./MeshMaterial.js";import l from"./MeshMaterialMetallicRoughness.js";import{castArray as n}from"./MeshVertexAttributes.js";var m;const u=e.getLogger("esri.geometry.support.MeshComponent");let h=m=class extends c{constructor(r){super(r),this.faces=null,this.material=null,this.shading="source",this.trustSourceNormals=!1}static from(r){return o(m,r)}castFaces(r){return n(r,Uint32Array,[Uint16Array],{loggerTag:".faces=",stride:3},u)}castMaterial(r){return o(r&&"object"==typeof r&&("metallic"in r||"roughness"in r||"metallicRoughnessTexture"in r)?l:p,r)}clone(){return new m({faces:t(this.faces),shading:this.shading,material:t(this.material),trustSourceNormals:this.trustSourceNormals})}cloneWithDeduplication(r,e){return new m({faces:t(this.faces),shading:this.shading,material:this.material?this.material.cloneWithDeduplication(r,e):null,trustSourceNormals:this.trustSourceNormals})}};r([s({json:{write:!0}})],h.prototype,"faces",void 0),r([a("faces")],h.prototype,"castFaces",null),r([s({type:p,json:{write:!0}})],h.prototype,"material",void 0),r([a("material")],h.prototype,"castMaterial",null),r([s({type:String,json:{write:!0}})],h.prototype,"shading",void 0),r([s({type:Boolean})],h.prototype,"trustSourceNormals",void 0),h=m=r([i("esri.geometry.support.MeshComponent")],h);var f=h;export default f;
