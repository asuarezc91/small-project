/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../Color.js";import{createThemes as a,getThemesforBasemap as o,getRawSchemes as r,filterSchemesByName as l,filterSchemesByTag as s}from"../smartMapping/symbology/support/symbologyUtils.js";import{toWorldScale as n,hasIdenticalColors as t}from"../smartMapping/symbology/support/utils.js";import i from"../smartMapping/symbology/support/colors.js";const p={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"},darker:{color:[26,26,26,.25],width:"1px"}},u={lightBasemaps:{primary:"relationship-blue-orange-brown",secondary:["relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green","relationship-blue-red-pink","relationship-blue-green-brightgreen","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal"]},darkBasemaps:{primary:"relationship-blue-green-brightgreen",secondary:["relationship-blue-red-pink","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal","relationship-blue-orange-brown","relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green"]}},c=a({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features based on relationship between two attributes.",schemes:{point:{light:{common:{noDataColor:"#aaaaaa",outline:p.light,size:"8px"},primary:u.lightBasemaps.primary,secondary:u.lightBasemaps.secondary},dark:{common:{noDataColor:"#aaaaaa",outline:p.darker,size:"8px"},primary:u.darkBasemaps.primary,secondary:u.darkBasemaps.secondary}},polyline:{light:{common:{noDataColor:"#aaaaaa",width:"2px"},primary:u.lightBasemaps.primary,secondary:u.lightBasemaps.secondary},dark:{common:{noDataColor:"#aaaaaa",width:"2px"},primary:u.darkBasemaps.primary,secondary:u.darkBasemaps.secondary}},polygon:{light:{common:{noDataColor:"#aaaaaa",outline:p.light,fillOpacity:.8},primary:u.lightBasemaps.primary,secondary:u.lightBasemaps.secondary},dark:{common:{noDataColor:"#aaaaaa",outline:p.dark,fillOpacity:.8},primary:u.darkBasemaps.primary,secondary:u.darkBasemaps.secondary}}}}}});function m(e){return o(c,e)}function h(e){const a=r({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme,theme:c.get("default")});if(!a)return;const{schemesInfo:o,basemapId:l,basemapTheme:s}=a,n={...e,basemap:l};return{primaryScheme:F(n,o.primary,o.common),secondarySchemes:o.secondary.map((e=>F(n,e,o.common))).filter(Boolean),basemapId:l,basemapTheme:s}}function g(e){return l(e.name,h(e))}function d(e){return s(e.includedTags,e.excludedTags,h(e))}function y(a){if(!a)return;const o={...a};return o.colorsForClassBreaks=o.colorsForClassBreaks.map((a=>({numClasses:a.numClasses,colors:a.colors.map((a=>a.map((a=>new e(a)))))}))),o.noDataColor&&(o.noDataColor=new e(o.noDataColor)),"outline"in o&&o.outline&&(o.outline={color:o.outline.color&&new e(o.outline.color),width:o.outline.width}),o}function b(e,a){let o=[];const r=(a||"HH").split(""),l=r[0],s=r[1];"L"===l&&e.reverse();const n="H"===s;return e.forEach((e=>{n&&e.reverse(),o=o.concat(e)})),o}function f(a,o,r){let l;return a.colorsForClassBreaks.some((e=>(e.numClasses===o&&(l=e.colors),!!l))),l=l.map((a=>a.map((a=>new e(a))))),l?b(l,r):null}function w(e,a){const o=a?e:y(e);return o.colorsForClassBreaks.forEach((e=>{const a=e.colors.reverse(),o=[];for(let r=0;r<e.numClasses;r++){const e=[];a.forEach((a=>{e.push(a[r])})),o.push(e)}e.colors=o})),o}function C(e){const a=e.theme||"default",o=e.geometryType,r=e.colors,l=e.numClasses,s=c.get(a);if(!s)return;const n=s.supportedBasemaps,t=[];return n.forEach((e=>{const s=h({theme:a,basemap:e,geometryType:o});if(s){let e=D(s.primaryScheme,r,l);e&&t.push(e),s.secondarySchemes.forEach((a=>{e=D(a,r,l),e&&t.push(e)}))}})),t}function k(e,a,o,r){let l;const s=f(e,o,r);if(s){1===t(a,s)&&(l=e)}return l}function B(e,a,o,r){let l,s=1;do{l=k(e,a,o,r),l||(e=w(e),s++)}while(!l&&s<=4);return l}function D(e,a,o){return B(e,a,o,"HH")||B(e,a,o,"HL")||B(e,a,o,"LH")||B(e,a,o,"LL")}function F(a,o,r){const l="mesh"!==a.geometryType&&a.worldScale?a.view:null,s=i[o],t=a.theme||"default";if(!s)return;const p=t+"/"+a.basemap+"/"+o,u=[];for(const e in s)if("stops"!==e&&"name"!==e&&"tags"!==e){const a=+e,o=s[e];u.push({numClasses:a,colors:o})}switch(a.geometryType){case"point":case"multipoint":{const a=r;return function(a,o){return{id:a.id,name:a.name,tags:[...a.tags],colorsForClassBreaks:v(a.colorsForClassBreaks),noDataColor:new e(a.noDataColor),outline:{color:new e(a.outline.color),width:a.outline.width},size:o?n(a.size,o):a.size,opacity:a.opacity}}({id:p,name:s.name,tags:s.tags,colorsForClassBreaks:u,noDataColor:a.noDataColor,opacity:1,outline:a.outline,size:a.size},l)}case"polyline":{const a=r;return function(a,o){return{id:a.id,name:a.name,tags:[...a.tags],colorsForClassBreaks:v(a.colorsForClassBreaks),noDataColor:new e(a.noDataColor),opacity:a.opacity,width:o?n(a.width,o):a.width}}({id:p,name:s.name,tags:s.tags,colorsForClassBreaks:u,noDataColor:a.noDataColor,opacity:1,width:a.width},l)}case"polygon":{const a=r,o={id:p,name:s.name,tags:s.tags,colorsForClassBreaks:u,noDataColor:a.noDataColor,opacity:a.fillOpacity,outline:a.outline};return{id:(c=o).id,name:c.name,tags:[...c.tags],colorsForClassBreaks:v(c.colorsForClassBreaks),noDataColor:new e(c.noDataColor),outline:{color:new e(c.outline.color),width:c.outline.width},opacity:c.opacity}}case"mesh":{const a=r;return function(a){return{id:a.id,name:a.name,tags:[...a.tags],colorsForClassBreaks:v(a.colorsForClassBreaks),noDataColor:new e(a.noDataColor),opacity:a.opacity}}({id:p,name:s.name,tags:s.tags,colorsForClassBreaks:u,noDataColor:a.noDataColor,opacity:a.fillOpacity})}}var c}function v(a){return a.map((a=>({numClasses:a.numClasses,colors:a.colors.map((a=>a.map((a=>new e(a)))))})))}var T=Object.freeze({__proto__:null,getThemes:m,getSchemes:h,getSchemeByName:g,getSchemesByTag:d,cloneScheme:y,flatten2DArray:b,getColors:f,flipColors:w,getMatchingSchemes:C});export{h as a,m as b,y as c,g as d,d as e,b as f,f as g,w as h,C as i,T as r};
