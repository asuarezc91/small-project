/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import"../core/has.js";import{isNone as e,isSome as i}from"../core/maybe.js";import s from"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import r from"../core/Error.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{reject as o,create as l,throwIfAborted as p}from"../core/promiseUtils.js";import h from"../geometry/SpatialReference.js";import{canProject as d,project as c}from"../geometry/support/webMercatorUtils.js";import u from"../geometry/Point.js";import m from"../geometry/Extent.js";import"../geometry.js";import{createScreenPoint as g}from"../core/screenUtils.js";import y from"../Viewpoint.js";import{whenTrueOnce as w}from"../core/watchUtils.js";import f from"../layers/support/TileInfo.js";import _ from"./View.js";import"./2d/tiling/TileKey.js";import{PopupView as v}from"./PopupView.js";import T from"./ViewAnimation.js";import{centerAt as V,setExtent as z,rotateTo as R,scaleTo as S,copy as x,createAsync as j,resize as b,extentToScale as k}from"./2d/viewpointUtils.js";import O from"./2d/AnimationManager.js";import M from"./2d/FrameTask.js";import{layerView2DImporter as I}from"./2d/layerViewModuleImportUtils.js";import E from"./2d/MapViewConstraints.js";import G from"./2d/PaddedViewState.js";import"./2d/tiling/PagedTileQueue.js";import P from"./2d/tiling/TileInfoView.js";import"./2d/tiling/TileQueue.js";import"./2d/tiling/TileStrategy.js";import{Timeline as N}from"./2d/support/Timeline.js";const q=s.getLogger("esri.views.MapView");let A=class extends(v(_)){constructor(t){super(t),this._stationaryTimer=null,this.frameTask=new M(this),this.featuresTilingScheme=null,this.fullOpacity=1,this.graphicsView=null,this.initialExtent=null,this.labelManager=null,this.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},this.resizeAlign="center",this.supportsGround=!1,this.timeline=new N,this.type="2d",this.constraints=new E,this.padding={top:0,right:0,bottom:0,left:0};const e=this.handles,i=()=>this.notifyChange("updating");e.add([this.watch("viewpoint",(()=>{this._lastStationaryEventTimestamp=performance.now(),this._flipStationary(160)}),!0),this.on("resize",(t=>this._resizeHandler(t))),this.watch("animationManager.animation",(t=>{this.animation=t})),this.allLayerViews.on("change",(()=>{i(),e.remove("map-view-base-layerViewsUpdating"),e.add(this.allLayerViews.map((t=>t.watch("updating",i))),"map-view-base-layerViewsUpdating")}))],"map-view-base")}destroy(){this.destroyed||(this._set("preconditionsReady",!1),this._gotoTask=this.frameTask=null)}set animation(t){const e=this._get("animation");if(t===e)return;if(e&&e.stop(),!t||t.isFulfilled())return void this._set("animation",null);this._set("animation",t),this.frameTask.animationInProgress=!0;const i=()=>{t===this._get("animation")&&(this._set("animation",null),this.frameTask.requestFrame()),this.frameTask.animationInProgress=!1};t.when(i,i)}get center(){if(!this.ready)return this._get("center");const{center:t,spatialReference:e}=this.state.paddedViewState;return new u({x:t[0],y:t[1],spatialReference:e})}set center(t){if(null==t)return;if(!this._normalizeInput(t))return void q.error("#center",`incompatible spatialReference ${JSON.stringify(t.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`);if(!this.ready)return this._set("center",t),void this.notifyChange("initialExtentRequired");const e=this.viewpoint;V(e,e,t),this.viewpoint=e}set constraints(t){const e=this._get("constraints");e&&(this.handles.remove("map-view-base-constraints"),e.destroy()),this._set("constraints",t),t&&(t.view=this,this.ready&&(this.state.viewpoint=t.fit(this.state.paddedViewState.viewpoint)),this.handles.add(t.on("update",(()=>{this.ready&&this.state&&(this.state.viewpoint=t.fit(this.state.paddedViewState.viewpoint))})),"map-view-base-constraints"))}get extent(){return this.ready?this.state.paddedViewState.extent.clone():this._get("extent")}set extent(t){if(null==t)return;const e=this._normalizeInput(t);if(!e)return void q.error("#center",`incompatible spatialReference ${JSON.stringify(t.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`);if(!e.width||!e.height)return void q.error("#extent","invalid extent size");if(!this.ready)return this._set("extent",e),this._set("center",null),this._set("viewpoint",null),this._set("scale",0),this._set("zoom",-1),void this.notifyChange("initialExtentRequired");const i=this.viewpoint;z(i,i,e,this.size,{constraints:this.constraints}),this.viewpoint=i}get initialExtentRequired(){const{extent:t,center:e,scale:i,viewpoint:s,zoom:n}=this;return!this.get("map.initialViewProperties.viewpoint")&&(!t&&((!e||0===i&&-1===n)&&!s))}get padding(){return this.ready?this.state.padding:this._get("padding")}set padding(t){this.ready?(this.state.padding=t,this._set("padding",this.state.padding)):this._set("padding",t)}get resolution(){return this.state?this.state.resolution:0}get rotation(){return this.ready?this.state.rotation:this._get("rotation")}set rotation(t){if(isNaN(t))return;if(!this.ready)return void this._set("rotation",t);const e=this.viewpoint;R(e,e,t),this.viewpoint=e}get scale(){return this.ready?this.state.scale:this._get("scale")}set scale(t){if(!t||isNaN(t))return;if(!this.ready){this._set("scale",t),this._set("zoom",-1);const e=this._get("extent");return e&&(this._set("extent",null),this._set("center",e.center)),void this.notifyChange("initialExtentRequired")}const e=this.viewpoint;S(e,e,t),this.viewpoint=e}get stationary(){return!(this.animation||this.navigating||this._get("resizing")||this._stationaryTimer)}get updating(){return!this.destroyed&&(!0===this.get("layerViewManager.updating")||!0===this.get("labelManager.updating")||!0===this.get("graphicsView.updating")||this.allLayerViews.some((t=>!t.destroyed&&!("layerViews"in t)&&!0===t.updating)))}get viewpoint(){if(!this.ready)return this._get("viewpoint");const t=this.state.paddedViewState;return t&&t.viewpoint.clone()}set viewpoint(t){if(null==t)return;const i=this._normalizeInput(t);if(!i)return void(!t.scale||isNaN(t.scale)?q.error("#viewpoint",`invalid scale value of ${t.scale}`):e(t.targetGeometry)?q.error("#viewpoint","geometry not defined"):q.error("#viewpoint",`incompatible spatialReference ${JSON.stringify(t.targetGeometry.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`));if(!this.ready)return this._set("viewpoint",i),this._set("extent",null),this._set("center",null),this._set("zoom",-1),this._set("scale",0),void this.notifyChange("initialExtentRequired");const s=new y({targetGeometry:new u,scale:0,rotation:0});x(s,i),this.constraints.constrain(s,this.state.paddedViewState.viewpoint),this.state.viewpoint=s,this.frameTask.requestFrame(),this._set("viewpoint",s)}get zoom(){return this.ready?this.constraints.scaleToZoom(this.scale):this._get("zoom")}set zoom(t){if(null==t)return;if(!this.ready){this.notifyChange("initialExtentRequired"),this._set("zoom",t),this._set("scale",0);const e=this._get("extent");e&&(this._set("extent",null),this._set("center",e.center))}if(!this.constraints.effectiveLODs)return;const e=this.viewpoint;S(e,e,this.constraints.zoomToScale(t)),this.viewpoint=e,this._set("zoom",this.constraints.scaleToZoom(this.scale))}goTo(t,e){if(t)return this.animation&&(this.animation=null),this._createAnimation(),w(this,"ready",e&&e.signal).then((()=>{const i={animate:!0,...e},s=j(t,this);return this.animation.update(s),this._gotoTask={},i.animate?this._gotoAnimated(s,i):this._gotoImmediate(s,i)}));q.error("#goTo()","target cannot be null or undefined")}hitTest(t){return o("Should be implemented by subclasses")}popupHitTest(t){return this.hitTest(t).then((e=>({...e,mapPoint:this.toMap(t)})))}toMap(t){if(!this.ready)return null;const[e,i]=this.state.toMap([0,0],[t.x,t.y]),s=this.spatialReference;return new u({x:e,y:i,spatialReference:s})}isTileInfoRequired(){return!0}toScreen(t){if(!this.ready)return null;const e=this._normalizeInput(t),i=[e.x,e.y];return this.state.toScreen(i,i),g(i[0],i[1])}pixelSizeAt(){return this.ready?this.state.resolution:(q.error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)}requestUpdate(){this.ready&&this.frameTask.requestUpdate()}getDefaultSpatialReference(){return this.get("map.initialViewProperties.spatialReference")||this.get("defaultsFromMap.spatialReference")||null}isSpatialReferenceSupported(t,e){return!(!e&&!this._get("ready"))||null!==this._getDefaultViewpoint()}importLayerView(t){return I.importLayerView(t)}hasLayerViewModule(t){return I.hasLayerViewModule(t)}_createAnimation(){return this.animation&&!this.animation.done||(this.animation=new T),this.animation}_cancellableGoTo(t,e,i){const s=()=>t===this._gotoTask,n=i.then((()=>{s()&&(this.animation=null)})).catch((t=>{throw s()&&(this.animation=null,e.done||(e.stop(),this.frameTask.animationInProgress=!1)),t})),a=l((t=>t(n)));return e.when().catch((()=>{s()&&a.cancel&&a.cancel()})),a}_gotoImmediate(t,e){const i=this._gotoTask,s=this.animation,n=t.then((t=>{if(p(e),i!==this._gotoTask)throw new r("view:goto-interrupted","Goto was interrupted");this.viewpoint=s.target=t,s.finish()}));return this._cancellableGoTo(i,s,n)}_gotoAnimated(t,e){const i=this._gotoTask,s=this.animation,n=t.then((t=>{if(p(e),i!==this._gotoTask)throw new r("view:goto-interrupted","Goto was interrupted");return s.update(t),this.animationManager.animate(s,this.viewpoint,e),s.when().then((()=>{}),(()=>{}))}));return this._cancellableGoTo(i,s,n)}_resizeHandler(t){const e=this.state;if(!e)return;let i=this.state.paddedViewState.viewpoint;const s=this.state.paddedViewState.size.concat();e.size=[t.width,t.height],b(i,i,s,this.state.paddedViewState.size,this.resizeAlign),i=this.constraints.constrain(i,null),this.state.viewpoint=i}_startup(){const t=this._getDefaultViewpoint();this.constraints.view=this,this.constraints.fit(t),this._set("animationManager",new O({view:this})),this._set("state",new G({padding:this._get("padding"),size:this.size,viewpoint:t})),this._set("featuresTilingScheme",new P(f.create({spatialReference:this.spatialReference,size:512}))),this._set("ready",!0),this.frameTask&&this.frameTask.start()}_teardown(){this.frameTask&&this.frameTask.stop(),this._set("ready",!1),this._stationaryTimer&&(clearTimeout(this._stationaryTimer),this._stationaryTimer=null);const{center:[t,e],spatialReference:i,rotation:s,scale:n}=this.state.paddedViewState,a=new u({x:t,y:e,spatialReference:i});this._set("viewpoint",null),this._set("extent",null),this._set("center",a),this._set("zoom",-1),this._set("rotation",s),this._set("scale",n),this._set("spatialReference",i),this.constraints.view=null,this.animationManager.destroy(),this._set("animationManager",null),this._set("state",null),this.animation=null}_flipStationary(t){return null!==this._stationaryTimer||(this._stationaryTimer=setTimeout((()=>{this._stationaryTimer=null;const t=performance.now()-this._lastStationaryEventTimestamp;t<160&&(this._stationaryTimer=this._flipStationary(t))}),t)),this._stationaryTimer}_normalizeInput(t,e=this.spatialReference){const i=t&&t.targetGeometry||t;return e?i?e.equals(i.spatialReference)?t:d(i,e)?function(t){return t&&"esri.Viewpoint"===t.declaredClass}(t)?(t.targetGeometry=c(i,e),t):c(i,e):null:null:t}_getDefaultViewpoint(){const t=this.constraints,e={zoom:this._get("zoom"),scale:this._get("scale"),center:this._normalizeInput(this._get("center")),extent:this._normalizeInput(this._get("extent")),rotation:this._get("rotation"),viewpoint:this._normalizeInput(this._get("viewpoint")),spatialReference:this._userSpatialReference};t.effectiveLODs?-1!==e.zoom&&(e.scale=t.zoomToScale(e.zoom)):e.zoom=-1;let s=null,n=null,a=0;const r=e.viewpoint&&e.viewpoint.rotation,o=e.viewpoint&&e.viewpoint.targetGeometry;i(o)&&("extent"===o.type?s=o:"point"===o.type&&(n=o,a=e.viewpoint.scale));const l=this._normalizeInput(this.get("map.initialViewProperties.viewpoint.targetGeometry.extent")),p=this._normalizeInput(this.initialExtent),h=e.extent||s||l||p,d=e.center||n||h&&h.center,c=this.get("map.initialViewProperties.viewpoint.scale"),u=e.scale||a||c||h&&k(h,this.size),m=this.get("map.initialViewProperties.viewpoint.rotation"),g=e.rotation||r||m||0;return d&&u?new y({targetGeometry:d,scale:u,rotation:g}):null}};t([n()],A.prototype,"_stationaryTimer",void 0),t([n()],A.prototype,"animation",null),t([n({readOnly:!0})],A.prototype,"animationManager",void 0),t([n({value:null,type:u,dependsOn:["state.id","ready"],autoTracked:!1})],A.prototype,"center",null),t([n({type:E})],A.prototype,"constraints",null),t([n({value:null,type:m,dependsOn:["state.id","ready"],autoTracked:!1})],A.prototype,"extent",null),t([n({readOnly:!0})],A.prototype,"featuresTilingScheme",void 0),t([n()],A.prototype,"fullOpacity",void 0),t([n()],A.prototype,"graphicsView",void 0),t([n({type:m})],A.prototype,"initialExtent",void 0),t([n({dependsOn:["map.initialViewProperties?.viewpoint"],autoTracked:!1})],A.prototype,"initialExtentRequired",null),t([n()],A.prototype,"labelManager",void 0),t([n({value:{top:0,right:0,bottom:0,left:0},cast:t=>({top:0,right:0,bottom:0,left:0,...t})})],A.prototype,"padding",null),t([n({type:Object})],A.prototype,"renderingOptions",void 0),t([n()],A.prototype,"resizeAlign",void 0),t([n({readOnly:!0,dependsOn:["state.id"],autoTracked:!1})],A.prototype,"resolution",null),t([n({value:0,type:Number,dependsOn:["state.id","ready"],autoTracked:!1})],A.prototype,"rotation",null),t([n({value:0,type:Number,dependsOn:["state.id","ready"],autoTracked:!1})],A.prototype,"scale",null),t([n({type:h,dependsOn:["map.initialViewProperties?.spatialReference","defaultsFromMap.isSpatialReferenceDone"],autoTracked:!1})],A.prototype,"spatialReference",void 0),t([n({readOnly:!0})],A.prototype,"state",void 0),t([n({dependsOn:["animation","navigating","resizing","_stationaryTimer"],autoTracked:!1})],A.prototype,"stationary",null),t([n({readOnly:!0})],A.prototype,"supportsGround",void 0),t([n({type:N,readOnly:!0})],A.prototype,"timeline",void 0),t([n({readOnly:!0})],A.prototype,"type",void 0),t([n({readOnly:!0,dependsOn:["layerViewManager.updating","labelManager.updating","graphicsView?.updating"],autoTracked:!1})],A.prototype,"updating",null),t([n({value:null,type:y,dependsOn:["state.id","ready"],autoTracked:!1})],A.prototype,"viewpoint",null),t([n({value:-1,dependsOn:["state.id"],autoTracked:!1})],A.prototype,"zoom",null),A=t([a("esri.views.MapViewBase")],A);var L=A;export default L;
