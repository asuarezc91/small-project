/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import o from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{reject as a,all as p,eachAlways as i}from"../../core/promiseUtils.js";import{loadArcade as u}from"../../support/arcadeOnDemand.js";import{calculateTolerance as c}from"../../renderers/support/clickToleranceUtils.js";import{getRequiredFields as l,getFetchPopupTemplate as m}from"./support/popupUtils.js";const n=n=>{let d=class extends n{async fetchPopupFeatures(e,t){const{layer:s}=this;if(!e)return a(new o("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s}));const u=this.get("view.scale"),n=[],d=async e=>{const s=0===e.minScale||u<=e.minScale,o=0===e.maxScale||u>=e.maxScale;if(e.visible&&s&&o)if(e.sublayers)e.sublayers.forEach(d);else if(e.popupEnabled){const s=m(e,{...t,defaultPopupTemplateEnabled:!1});r(s)&&n.push({sublayer:e,popupTemplate:s})}},y=s.sublayers.toArray().map(d);await p(y);const f=n.map((async({sublayer:s,popupTemplate:o})=>{await s.load().catch((()=>{}));const a=s.createQuery(),p=r(t)?t.event:null,i=c({renderer:s.renderer,event:p}),u=this.createFetchPopupFeaturesQueryGeometry(e,i);a.geometry=u,a.outFields=await l(s,o);const m=await this._loadArcadeModules(o);m&&m.arcadeUtils.hasGeometryOperations(o)||(a.maxAllowableOffset=u.width/i);return(await s.queryFeatures(a)).features}));return(await i(f)).reduce(((e,r)=>r.value?[...e,...r.value]:e),[]).filter((e=>null!=e))}canResume(){var e,r;return!!super.canResume()&&(null==(e=this.imageParameters)||null==(r=e.timeExtent)||!r.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length"))return u()}};return e([t()],d.prototype,"imageParameters",void 0),e([t()],d.prototype,"layer",void 0),e([t({dependsOn:["imageParameters.timeExtent"]})],d.prototype,"suspended",void 0),d=e([s("esri.views.layers.MapImageLayerView")],d),d};export{n as MapImageLayerView};
