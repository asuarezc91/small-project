/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{clone as t}from"../../../core/lang.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{JSONMap as i}from"../../../core/jsonMap.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as o}from"../../../core/accessorSupport/decorators/writer.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{JSONSupport as n}from"../../../core/JSONSupport.js";import{fromJSON as a}from"../../../geometry/support/jsonUtils.js";import{geometryTypes as p}from"../../../geometry.js";import l from"../../../TimeExtent.js";import c from"../../../tasks/support/Query.js";var d;const m=new i({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),u=new i({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let h=d=class extends n{constructor(e){super(e),this.where=null,this.geometry=null,this.spatialRelationship="intersects",this.hiddenIds=new Set,this.distance=void 0,this.objectIds=null,this.units=null,this.timeExtent=null,this.enabled=!1}writeWhere(e,t){t.where=e||"1=1"}enable(){this._set("enabled",!0)}createQuery(e={}){const{where:r,geometry:i,spatialRelationship:s,timeExtent:o,objectIds:n,units:a,distance:p}=this;return new c({geometry:t(i),objectIds:t(n),spatialRelationship:s,timeExtent:t(o),where:r,units:a,distance:p,...e})}clone(){const{where:e,geometry:r,spatialRelationship:i,hiddenIds:s,timeExtent:o,objectIds:n,units:a,distance:p}=this,l=new Set;return s.forEach((e=>l.add(e))),new d({geometry:t(r),hiddenIds:l,objectIds:t(n),spatialRelationship:i,timeExtent:t(o),where:e,units:a,distance:p})}};e([r({type:String})],h.prototype,"where",void 0),e([o("where")],h.prototype,"writeWhere",null),e([r({types:p,json:{read:a,write:!0}})],h.prototype,"geometry",void 0),e([r({type:String,json:{read:{source:"spatialRel",reader:m.read},write:{target:"spatialRel",writer:m.write}}})],h.prototype,"spatialRelationship",void 0),e([r({json:{write:(e,t,r)=>t[r]=Array.from(e),read:e=>new Set(e)}})],h.prototype,"hiddenIds",void 0),e([r({type:Number,json:{write:{overridePolicy:e=>({enabled:e>0})}}})],h.prototype,"distance",void 0),e([r({type:[Number],json:{write:!0}})],h.prototype,"objectIds",void 0),e([r({type:String,json:{read:u.read,write:{writer:u.write,overridePolicy(e){return{enabled:e&&this.distance>0}}}}})],h.prototype,"units",void 0),e([r({type:l,json:{write:!0}})],h.prototype,"timeExtent",void 0),e([r({readOnly:!0})],h.prototype,"enabled",void 0),h=d=e([s("esri.views.layers.support.FeatureFilter")],h);var j=h;export default j;
