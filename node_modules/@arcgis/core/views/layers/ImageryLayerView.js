/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import s from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{reject as p}from"../../core/promiseUtils.js";import i from"../../geometry/Point.js";import{combinedViewLayerTimeExtentProperty as a}from"../../layers/support/commonProperties.js";import u from"../../tasks/support/Query.js";import{getFetchPopupTemplate as n}from"./support/popupUtils.js";const m=m=>{let c=class extends m{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(e,o){const{layer:t}=this;if(!e)return p(new s("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:a}=t,m=n(t,o);if(!a||!r(m))throw new s("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:a,popupTemplate:m});const c=await m.getRequiredFields(),l=new u;l.geometry=e,l.outFields=c,l.outSpatialReference=e.spatialReference;const y=this.view.resolution,d="2d"===this.view.type?new i(y,y,this.view.spatialReference):new i(.5*y,.5*y,this.view.spatialReference),{returnTopmostRaster:w,showNoDataRecords:f}=m.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},h={returnDomainValues:!0,returnTopmostRaster:w,pixelSize:d,showNoDataRecords:f};return t.queryVisibleRasters(l,h).then((e=>e))}canResume(){var e;return!!super.canResume()&&(null==(e=this.timeExtent)||!e.isEmpty)}};return e([o()],c.prototype,"layer",void 0),e([o({dependsOn:["timeExtent"]})],c.prototype,"suspended",void 0),e([o(a)],c.prototype,"timeExtent",void 0),e([o()],c.prototype,"view",void 0),c=e([t("esri.views.layers.ImageryLayerView")],c),c};export{m as ImageryLayerView};
