/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import{aliasOf as s}from"../../core/accessorSupport/decorators/aliasOf.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{debounce as t}from"../../core/promiseUtils.js";const i=i=>{let p=class extends i{constructor(){super(...arguments),this.refreshTimestamp=null,this.refreshDebounced=t((async(r,e)=>{let s;"number"==typeof r?s=r:(s=Date.now(),e=r),this._set("refreshTimestamp",s),this.doRefresh&&await this.doRefresh(e)}),2e3)}refresh(r=Date.now()){this._set("refreshTimestamp",r),this.doRefresh&&this.doRefresh()}};return r([e()],p.prototype,"layer",void 0),r([s("layer.refreshInterval")],p.prototype,"refreshInterval",void 0),r([e({readOnly:!0})],p.prototype,"refreshTimestamp",void 0),p=r([o("esri.layers.mixins.RefreshableLayerView")],p),p};function p(r){return"refresh"in r}export{i as RefreshableLayerView,p as isRefreshableLayerView};
