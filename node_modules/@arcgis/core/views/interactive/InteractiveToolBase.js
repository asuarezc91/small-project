/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{createResolver as s}from"../../core/promiseUtils.js";import a from"../../core/Accessor.js";import{setActive as o}from"./interactiveToolUtils.js";import{ManipulatorCollection as r}from"./ManipulatorCollection.js";let h=class extends a{constructor(t){super(t),this.attached=!1,this.created=!1,this.completed=!1,this.manipulators=new r,this.deferCreation=!1,this._editableFlags=new Array,this._creationResolver=s()}get active(){return null!=this.view&&this.view.activeTool===this}get isSupported(){return!0}set visible(t){this._set("visible",t),t||o(this,!1),this.attached&&(t?this._show():this._hide())}get editable(){return this.hasEditableFlag(0)}set editable(t){this.setEditableFlag(0,t)}attach(){!this.attached&&this.isSupported&&(this.manipulators.attach(),this.onAttach(),this.visible&&this.onShow(),this._set("attached",!0))}detach(){this.attached&&(this.onHide(),this.onDetach(),this.manipulators.detach(),this._set("attached",!1))}handleInputEvent(t){this.attached&&this.onInputEvent(t)}handleInputEventAfter(t){this.attached&&this.onInputEventAfter(t)}destroy(){this.manipulators.destroy(),this._set("view",null)}setEditableFlag(t,e){this._editableFlags[t]=e,this.manipulators.isToolEditable=this._editableFlags.every((t=>null==t||t)),this._updateManipulatorAttachment(),0===t&&this.notifyChange("editable"),this.onEditableChange()}hasEditableFlag(t){const e=this._editableFlags[t];return null==e||e}when(){return this._creationResolver.promise}rejectCreation(t){this._creationResolver.reject(t)}initialize(){this.deferCreation||this.complete()}onAttach(){}onDetach(){}onShow(){}onHide(){}onEditableChange(){}onInputEvent(t){}onInputEventAfter(t){}get internallyEditable(){return this.hasEditableFlag(0)&&this.hasEditableFlag(1)}create(){this.created||(this._set("created",!0),this._creationResolver(this))}complete(){this.create(),this._set("completed",!0)}_show(){this._updateManipulatorAttachment(),this.onShow()}_hide(){this._updateManipulatorAttachment(),this.onHide()}_updateManipulatorAttachment(){this.attached&&this.visible?this.manipulators.attach():this.manipulators.detach()}};t([e({constructOnly:!0})],h.prototype,"view",void 0),t([e({dependsOn:["view.activeTool"],readOnly:!0})],h.prototype,"active",null),t([e({value:!0})],h.prototype,"visible",null),t([e({value:!0})],h.prototype,"editable",null),t([e({readOnly:!0})],h.prototype,"attached",void 0),t([e({readOnly:!0})],h.prototype,"created",void 0),t([e({readOnly:!0})],h.prototype,"completed",void 0),t([e({readOnly:!0})],h.prototype,"manipulators",void 0),t([e({constructOnly:!0})],h.prototype,"deferCreation",void 0),h=t([i("esri.views.interactive.InteractiveToolBase")],h);export{h as InteractiveToolBase};
