/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{unwrap as t}from"../../../core/maybe.js";import{sign as e}from"../../../core/mathUtils.js";import{a as r,f as i}from"../../../chunks/vec2f64.js";import{d as o,g as n,q as s,p}from"../../../chunks/vec2.js";import{defaults as a}from"./Settings.js";import{anyMapPointToScreenPoint as h,squareDistance as l}from"./snappingUtils.js";import{SnappingAlgorithm as g}from"./SnappingAlgorithm.js";import{RayConstraint as c}from"./SnappingConstraint.js";import{RightAngleSnappingCandidate as f}from"./RightAngleSnappingCandidate.js";class d extends g{constructor({enabled:t=a.lineSnapper.enabled,proximityThreshold:e=a.lineProximityThreshold,shortLineThreshold:i=a.shortLineThreshold}={}){super({enabled:t,proximityThreshold:e,shortLineThreshold:i}),this._tmp=r()}snapNewVertex(t,e){const r=e.geometry.data.components[0],i=r.vertices.length,o=[];if(i<2)return o;const n=e.geometry.data.coordinateHelper,s=n.fromPoint(t),p=h(s,e.geometry.data.coordinateHelper,e.elevationInfo,e.view),a=r.vertices[i-1];this._checkForSnappingCandidate(o,a.left,a.pos,n.fromPoint(t),a.left.left.pos,a.pos,e,t,p);const l=r.vertices[0];return this._checkForSnappingCandidate(o,l.right,l.pos,n.fromPoint(t),l.right.right.pos,l.pos,e,t,p),o}snapExistingVertex(e,r){const i=[],o=t(r.vertexHandle),n=o.component,s=n.vertices.length;if(s<3)return i;const p=r.geometry.data.coordinateHelper.fromPoint(e),a=h(p,r.geometry.data.coordinateHelper,r.elevationInfo,r.view),l=o.left,g=o.right,c=n.vertices[0],f=n.vertices[s-1];if(!l)return this._checkForSnappingCandidate(i,c.right.right.right,c.right.right.pos,p,c.right.right.right.right.pos,c.right.right.pos,r,e,a),i;if(!g)return this._checkForSnappingCandidate(i,f.left.left.left,f.left.left.pos,p,f.left.left.left.left.pos,f.left.left.pos,r,e,a),i;if(l&&l.left.left){const t=l.left.left;this._checkForSnappingCandidate(i,t,l.left.pos,p,t.left.pos,l.left.pos,r,e,a)}if(g&&g.right.right){const t=g.right.right;this._checkForSnappingCandidate(i,t,g.right.pos,p,t.right.pos,g.right.pos,r,e,a)}return i}_checkForSnappingCandidate(t,a,g,d,m,v,u,x,S){if(!this.edgeExceedsShortLineThreshold(a,u))return;o(this._tmp,a.right.pos,a.left.pos);const _=i(this._tmp[1],-this._tmp[0]),y=n(_,o(this._tmp,d,g))/s(_),j=u.geometry.data.coordinateHelper,k=j.fromXYZ(p(r(),v,_,y),x.hasZ?x.z:0);l(S,h(k,j,u.elevationInfo,u.view))<this.squaredProximityTreshold(u.pointer)&&t.push(new f({coordinateHelper:j,targetPoint:k,constraint:new c(v,p(j.createNew(),v,_,e(y))),previousVertex:m,centerVertex:v}))}}export{d as RightAngleSnapper};
