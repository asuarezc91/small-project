/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{unwrap as e}from"../../../core/maybe.js";import{f as t,a as o}from"../../../chunks/vec2f64.js";import{defaults as r}from"./Settings.js";import{anyMapPointToScreenPoint as s,squareDistance as i}from"./snappingUtils.js";import{SnappingAlgorithm as n}from"./SnappingAlgorithm.js";import{projectPointToLine as d}from"../../3d/support/geometryUtils/vector2d.js";import{LineSnappingCandidate as a}from"./LineSnappingCandidate.js";class h extends n{constructor({enabled:e=r.lineSnapper.enabled,proximityThreshold:t=r.lineProximityThreshold,shortLineThreshold:o=r.shortLineThreshold}={}){super({enabled:e,proximityThreshold:t,shortLineThreshold:o})}snapNewVertex(e,t){const o=t.geometry.data.components[0],r=o.edges.length,i=[];if(r<1)return i;const n=t.geometry.data.coordinateHelper,d=n.fromPoint(e),a=s(d,n,t.elevationInfo,t.view),h=o.edges[r-1];let l=h;do{this.edgeExceedsShortLineThreshold(l,t)&&this._processCandidateProposal(l.left.pos,l.right.pos,e,a,t,i),l=l.left.left}while(l&&l!==h);return i}snapExistingVertex(t,o){const r=[],i=e(o.vertexHandle),n=i.component;if(n.edges.length<2)return r;const d=o.geometry.data.coordinateHelper,a=d.fromPoint(t),h=s(a,d,o.elevationInfo,o.view),l=i.left,p=i.right;l&&p&&this.edgeExceedsShortLineThreshold(l,o)&&this.edgeExceedsShortLineThreshold(p,o)&&this._processCandidateProposal(l.left.pos,p.right.pos,t,h,o,r);const m=n.edges[0];let g=m;do{g!==i.left&&g!==i.right&&this.edgeExceedsShortLineThreshold(g,o)&&this._processCandidateProposal(g.left.pos,g.right.pos,t,h,o,r),g=g.right.right}while(g&&g!==m);return r}_processCandidateProposal(e,r,n,h,l,p){const m=d(o(),t(n.x,n.y),e,r),g=l.geometry.data.coordinateHelper,c=g.fromXYZ(m,n.hasZ?n.z:0);i(h,s(c,g,l.elevationInfo,l.view))<this.squaredProximityTreshold(l.pointer)&&p.push(new a({coordinateHelper:l.geometry.data.coordinateHelper,lineStart:e,lineEnd:r,targetPoint:c}))}}export{h as LineSnapper};
