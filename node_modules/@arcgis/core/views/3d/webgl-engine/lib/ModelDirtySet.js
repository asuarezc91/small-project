/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{someMap as e}from"../../../../core/MapUtils.js";import{assert as t}from"./Util.js";export default class{constructor(e){this._residentGeomRecords=new Map,this._dirtyGeomRecords=new Map,this._model=e}get residentLayerCount(){return this._residentGeomRecords.size}get residentObjectCount(){let e=0;return this._residentGeomRecords.forEach((t=>{e+=t.size})),e}hasDirtyGeometryRecords(){return e(this._dirtyGeomRecords,(t=>e(t,(e=>e&&e.size>0))))}handleUpdate(e,r,o){return t(this[r],"ModelDirtySet doesn't know how to process "+r),this[r](e,o)}shaderTransformationChanged(e){const t=this._residentGeomRecords.get(e.id);t&&t.forEach(((e,t)=>{const r=this._model.get(1,t);r&&r.hasVolativeTransformation()&&e.forEach((e=>{for(const t of e[1])t.shaderTransformationChanged()}))}))}commit(){return this.commitLayers(this._dirtyGeomRecords.keys())}commitLayers(e){const r=[],o=[],s=[];for(const d of e){const e=this._dirtyGeomRecords.get(d);e&&(e.forEach(((e,i)=>{const n=this._ensureGeomRecord(d,i);e.forEach(((e,d)=>{const c=e[0],a=e[1],h=e[2];let m=!1;if(2&a){const e=n.get(d);if(e){const t=e[1];if(4&h){const e=this._model.get(1,i);for(const r of t)if(this._model.updateRenderGeometryTransformation(e,c,r)){m=!0;break}}if(!m)for(const e of t)s.push({renderGeometry:e,updateType:h})}else t(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update")}if(4&a||m){const e=n.get(d);e?o.push.apply(o,e[1]):4===a&&t(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove"),e&&n.delete(d)}if(1&a||m){const e=[c,[]],t=this._model.get(1,i);this._model.getGeometryRenderGeometries(t,c,e[1]),r.push.apply(r,e[1]),n.set(d,e)}})),0===n.size&&this._residentGeomRecords.get(d).delete(i)})),0===this._residentGeomRecords.get(d).size&&this._residentGeomRecords.delete(d),this._dirtyGeomRecords.delete(d))}return[r,o,s]}getResidentRenderGeometries(){return this.getResidentRenderGeometriesFilteredByLayers([...this._residentGeomRecords.keys()])}getResidentRenderGeometriesFilteredByLayers(e){const t=[];for(let r=0;r<e.length;r++){const o=e[r],s=this._residentGeomRecords.get(o);s&&s.forEach((e=>{e.forEach((e=>{t.push(...e[1])}))}))}return t}_objectStateChanged(e,t,r,o){if(null!=r)this._componentPropertyChanged(t,r,o,e);else for(const r of t.geometryRecords)this._componentPropertyChanged(t,r,o,e)}visibilityChanged(e,t,r){this._objectStateChanged(1,e,t,r)}highlightChanged(e,t,r){this._objectStateChanged(8,e,t,r)}occlusionChanged(e,t,r){this._objectStateChanged(16,e,t,r)}vertexAttrsUpdated(e,t,r){this._updateOrCreateDirtyRecord(e,t,r,2,0,0,2,5,2)}layerAdded(e){const t=e.getObjects();for(let r=0;r<t.length;r++)this.layerObjectAdded(e,t[r])}layerRemoved(e){const t=e.getObjects();for(let r=0;r<t.length;r++)this.layerObjectRemoved(e,t[r])}layerObjectAdded(e,t){const r=e.id,o=t.geometryRecords;for(let e=0;e<o.length;e++)this.objGeometryAdded(t,o[e],r)}layerObjectRemoved(e,t){const r=e.id,o=t.geometryRecords;for(let e=0;e<o.length;e++)this.objGeometryRemoved(t,o[e],r)}layObjectReplaced(e,t){this.layerObjectRemoved(e,t[0]),this.layerObjectAdded(e,t[1])}objTransformation(e,t){t=t||this._getParentLayerId(e);const r=e.id;this._ensureGeomRecord(t,r).forEach((r=>{this._updateOrCreateDirtyRecord(e,r[0],t,2,0,0,2,5,4)}))}objGeometryAdded(e,t,r){this._updateOrCreateDirtyRecord(e,t,r,1,4,0,0,0)}objGeometryRemoved(e,t,r){this._updateOrCreateDirtyRecord(e,t,r,4,1,2,0,0)}_componentPropertyChanged(e,t,r,o){this._updateOrCreateDirtyRecord(e,t,r,2,0,0,2,5,o)}_updateOrCreateDirtyRecord(e,r,o,s,d,i,n,c,a){o=o||this._getParentLayerId(e);const h=e.id,m=r.id,l=this._ensureDirtyRecord(o,h),y=l.get(m);if(y){const e=y[1];e&d?l.delete(m):e&i?(y[1]=s,y[2]=a):e&n?y[2]|=a:e&c||t(!1,"ModelDirtySet.objGeometryAdded: inconsistent state")}else l.set(m,[r,s,a])}_ensureGeomRecord(e,t){let r=this._residentGeomRecords.get(e);r||(r=new Map,this._residentGeomRecords.set(e,r));let o=r.get(t);return o||(o=new Map,r.set(t,o)),o}_ensureDirtyRecord(e,t){let r=this._dirtyGeomRecords.get(e);r||(r=new Map,this._dirtyGeomRecords.set(e,r));let o=r.get(t);return o||(o=new Map,r.set(t,o)),o}_getParentLayerId(e){return e.parentLayer.id}formatDebugInfo(){const e=["ADD","UPD",void 0,"REM"];let t="";return this._dirtyGeomRecords.forEach(((r,o)=>{r.forEach(((r,s)=>{t.length>0&&(t+="\n"),t+=o+"."+s;const d=[];r.forEach((e=>{const t=e[1];d[t]||(d[t]=[]),d[t].push(e[0].geometry.id)}));for(let r=0;r<d.length;r++)if(d[r]){t+=" "+e[r-1]+": ";for(let e=0;e<d[r].length;e++)t+=d[r][e]+", "}}))})),t}}
