/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{isNone as s,isSome as t}from"../../../../core/maybe.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{createTask as o}from"../../../../core/promiseUtils.js";import a from"../../../../core/Accessor.js";import n from"../../../../core/Evented.js";import{clamp as m}from"../../../../core/mathUtils.js";import{createScreenPointArray as u,createRenderScreenPointArray as c,screenPointObjectToArray as p}from"../../../../core/screenUtils.js";import h from"../../../../core/Handles.js";import{requestImage as l}from"../../../../support/requestImageUtils.js";import d from"../../../webgl/Program.js";import{makePipelineState as g,simpleBlendingParams as f,defaultColorWriteParams as _}from"../../../webgl/renderState.js";import k from"../../../webgl/Texture.js";import{Pos2 as v}from"./DefaultVertexBufferLayouts.js";import{createQuadVAO as T}from"./glUtil3D.js";import"../../../webgl/FramebufferObject.js";import"../../../webgl/RenderingContext.js";import{build as x}from"../shaders/Magnifier.glsl.js";import{loadMagnifierResources as y}from"../../../magnifier/resources.js";let b=class extends a{constructor(){super(...arguments),this._handles=new h,this._magnifier=null,this._imageSources=null,this._imageLoadTask=null,this._resources=null,this.events=new n,this.tmpScreenPoint=u(),this.tmpRenderPoint=c()}get updating(){return s(this._imageSources)&&t(this._imageLoadTask)&&!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(e){if(e===this._magnifier)return;this._handles.removeAll(),this._magnifier=e;const s=()=>{this.updateResourceLoading(),this.events.emit("request-render")};t(this._magnifier)&&this._handles.add(this._magnifier.watch("version",s)),s()}get enabled(){return t(this._validMagnifier)}get _validMagnifier(){return t(this._magnifier)&&this._magnifier.visible&&t(this._magnifier.position)&&this._magnifier.size>0?this._magnifier:null}get factor(){return t(this._magnifier)&&this._magnifier.factor||1}dispose(){this._magnifier=null,this._handles.destroy(),t(this._imageLoadTask)&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this.disposeResources()}render(e,t){const r=this._validMagnifier;if(s(r))return;const i=t.camera.pixelRatio,o=Math.ceil(i*r.size);if(this.updateResources(e,o),s(this._resources))return;const a=this._resources.textures,n=Math.ceil(1/this.factor*o);a.input.resize(n,n);const u=t.camera.fullWidth,c=t.camera.fullHeight;p(r.position,this.tmpScreenPoint);const h=t.camera.screenToRender(this.tmpScreenPoint,this.tmpRenderPoint),l=.5*n,d=.5*n;h[0]=m(h[0],l,u-l-1),h[1]=m(h[1],d,c-d-1);const g=Math.floor(h[0]-l),f=Math.floor(h[1]-d);e.bindTexture(a.input,0),e.gl.copyTexImage2D(a.input.descriptor.target,0,a.input.descriptor.pixelFormat,g,f,n,n,0);const _=r.offsetX*i,k=r.offsetY*i,v=(h[0]+_)/u*2-1,T=(h[1]-k)/c*2-1,x=o/u*2,y=o/c*2;e.bindVAO(this._resources.vao),e.bindTexture(a.overlay,1),e.bindTexture(a.mask,2);const b=this._resources.program;e.bindProgram(b),b.setUniform1i("textureInput",0),b.setUniform1i("textureOverlay",1),b.setUniform1i("textureMask",2),b.setUniform4f("drawPosition",v,T,x,y),b.setUniform1i("maskEnabled",r.maskEnabled?1:0),b.setUniform1i("overlayEnabled",r.overlayEnabled?1:0),e.setPipelineState(this._resources.pipelineState),e.drawArrays(5,0,4)}updateResourceLoading(){const e=this._validMagnifier;if(s(e))return;const r=e.mask,i=e.overlay;!t(this._imageLoadTask)||this._imageLoadTask.mask===r&&this._imageLoadTask.overlay===i||(this._imageLoadTask.task.abort(),this._imageLoadTask=null,this._imageSources=null),t(this._imageSources)||t(this._imageLoadTask)||(this._imageLoadTask={mask:r,overlay:i,task:o((async e=>{const o=s(r)||s(i)?y(e):null,a=t(r)?l(r,{signal:e}):o.then((e=>e.mask)),n=t(i)?l(i,{signal:e}):o.then((e=>e.overlay));this._imageSources={mask:await a,overlay:await n},this.disposeResources(),this.events.emit("request-render")}))},this._imageLoadTask.task.promise.then((()=>this.notifyChange("updating")),(()=>this.notifyChange("updating"))))}updateResources(e,r){if(!this.enabled)return void this.disposeResources();if(t(this._resources)){if(this._resources.textures.size!==r){const t=this.createTextureResources(e,r);if(s(t))return void this.disposeResources();this.disposeTextureResources(this._resources.textures),this._resources.textures=t}return}const i=this.createTextureResources(e,r);s(i)||(this._resources={textures:i,program:this.createProgram(e),vao:this.createVAO(e),pipelineState:g({blending:f(1,771),depthTest:null,depthWrite:null,colorWrite:_})})}disposeResources(){s(this._resources)||(this.disposeTextureResources(this._resources.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}disposeTextureResources(e){e.mask.dispose(),e.overlay.dispose(),e.input.dispose()}createTextureResources(e,t){if(s(this._imageSources))return null;this._imageSources.overlay.width=t,this._imageSources.overlay.height=t,this._imageSources.mask.width=t,this._imageSources.mask.height=t;const r=new k(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0},this._imageSources.overlay),i=new k(e,{target:3553,pixelFormat:6406,internalFormat:6406,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0},this._imageSources.mask);return{input:new k(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!1}),mask:i,overlay:r,size:t}}createProgram(e){const s=x();return new d(e,s.generateSource("vertex"),s.generateSource("fragment"),this.attributeLocations)}createVAO(e){return T(e,v,this.attributeLocations,0,1)}get attributeLocations(){return{position:0}}};e([r()],b.prototype,"_imageSources",void 0),e([r()],b.prototype,"_imageLoadTask",void 0),e([r({readOnly:!0,dependsOn:["_imageSources","_imageLoadTask"]})],b.prototype,"updating",null),b=e([i("esri/views/3d/webgl-engine/lib/MagnifierHelper")],b);export{b as MagnifierHelper};
