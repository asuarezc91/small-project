/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{get as o,isSome as t}from"../../../../core/maybe.js";import r from"../../../../Color.js";import{pt2px as i}from"../../../../core/screenUtils.js";import{Z as l}from"../../../../chunks/vec4f64.js";class e{constructor(o){this.definition=o,this.key=JSON.stringify(o),this.haloSize=Math.round(o.halo.size),this.fillStyle=this.colorToRGBA(o.color),this.haloStyle=this.colorToRGB(o.halo.color)}colorToRGB(o){return`rgb(${o.slice(0,3).map((o=>Math.floor(255*o))).toString()})`}colorToRGBA(o){return`rgba(${o.slice(0,3).map((o=>Math.floor(255*o))).toString()},${o[3]})`}static fromSymbol(s,n=1){const a=o(s,"material","color"),f=t(a)?r.toUnitRGBA(a):l,c=s.halo,h=null!=s.size?i(s.size):12,m={family:s.font&&s.font.family?s.font.family:"sans-serif",weight:s.font&&s.font.weight?s.font.weight:"normal",style:s.font&&s.font.style?s.font.style:"normal"},y=t(c)&&t(c.color)&&c.size>0?{size:i(c.size),color:r.toUnitRGBA(c.color)}:{size:0,color:l};return new e({size:h,color:f,font:m,halo:y,pixelRatio:n})}}export default e;export{e as TextRenderParameters};
