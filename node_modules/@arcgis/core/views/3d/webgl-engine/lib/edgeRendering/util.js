/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as t,isSome as n}from"../../../../../core/maybe.js";import{binaryIndexOf as r}from"../../../../../core/arrayUtils.js";function e(r){let e=null;for(const n of r){const r=n.type;if(c(n))if(t(e))e=r;else if(e!==r)return"uber"}return n(e)?e:"solid"}function o(t){let n=0;for(const{material:r}of t)if(c(r)){if(r.color[3]*r.opacity<1)return 1;n=2}return n}function i(t){let n=0;for(const{material:r}of t)if(c(r)){switch(r.objectTransparency){case 1:case 0:return 1;case 2:if(r.opacity<1)return 1}n=2}return n}function c(t){return t.size*t.color[3]*t.opacity>0}function f(t,n,r,e){return r*(e/t)*2*Math.tan(.5*n)}function u(t,n,e){return t.length-function(t,n){const e=r(t,n,!0);return-1===e?n<t[0]?0:t.length:e}(t,n*e.minimumEdgeLength)}function s(t,n,r,e){for(let o=0;o<t.length;o++){const i=t[o].index,c=n[o],f=n[o+1];if(e)for(let t=c;t<f;t++){const n=e[t];r.set(n,i)}else for(let t=c;t<f;t++)r.set(t,i)}}export{u as computeEdgeCount,o as determineEdgeTransparency,i as determineObjectTransparency,e as determineRendererType,f as estimateLengthAtDistance,s as fillComponenBufferIndices};
