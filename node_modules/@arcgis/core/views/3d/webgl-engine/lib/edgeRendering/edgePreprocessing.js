/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{forEach as e}from"../../../../../core/typedArrayUtil.js";import{range as t}from"../../../../../core/arrayUtils.js";import{deg2rad as o,acosClamped as n}from"../../../../../core/mathUtils.js";import{c as r}from"../../../../../chunks/vec3f64.js";import{k as s,s as c,g as a,d as i,c as l,f as g,n as f}from"../../../../../chunks/vec3.js";import{directionFromTo as m}from"../../../support/mathUtils.js";function p(n,r,m,p=w){const y=n.vertices.position,I=n.vertices.componentIndex,V=o(p.anglePlanar),j=o(p.angleSignificantEdge),N=Math.cos(j),x=Math.cos(V),F=A.edge,U=F.position0,k=F.position1,E=F.faceNormal0,D=F.faceNormal1,M=function(e){const t=e.faces.length/3,o=e.vertices.position,n=e.faces,r=v.v0,s=v.v1,c=v.v2,a=new Float32Array(3*t);for(let e=0;e<t;e++){const t=n[3*e+0],i=n[3*e+1],m=n[3*e+2];o.getVec(t,r),o.getVec(i,s),o.getVec(m,c),g(s,s,r),g(c,c,r),l(r,s,c),f(r,r),a[3*e+0]=r[0],a[3*e+1]=r[1],a[3*e+2]=r[2]}return a}(n),P=function(e){const t=e.faces.length/3,o=e.faces,n=e.neighbors;let r=0;for(let e=0;e<t;e++){const t=n[3*e+0],s=n[3*e+1],c=n[3*e+2],a=o[3*e+0],i=o[3*e+1],l=o[3*e+2];r+=-1===t||a<i?1:0,r+=-1===s||i<l?1:0,r+=-1===c||l<a?1:0}const s=new Int32Array(4*r);let c=0;for(let e=0;e<t;e++){const t=n[3*e+0],r=n[3*e+1],a=n[3*e+2],i=o[3*e+0],l=o[3*e+1],g=o[3*e+2];(-1===t||i<l)&&(s[c++]=i,s[c++]=l,s[c++]=e,s[c++]=t),(-1===r||l<g)&&(s[c++]=l,s[c++]=g,s[c++]=e,s[c++]=r),(-1===a||g<i)&&(s[c++]=g,s[c++]=i,s[c++]=e,s[c++]=a)}return s}(n),S=P.length/4,b=r.allocate(S);let L=0;const q=S,z=m.allocate(q);let B=0,C=0,G=0;const H=t(0,S),J=new Float32Array(S);e(J,((e,t,o)=>{y.getVec(P[4*t+0],U),y.getVec(P[4*t+1],k),o[t]=s(U,k)})),H.sort(((e,t)=>J[t]-J[e]));const K=new Array,O=new Array;for(let e=0;e<S;e++){const t=H[e],o=J[t],n=P[4*t+0],s=P[4*t+1],l=P[4*t+2],g=P[4*t+3],f=-1===g;if(y.getVec(n,U),y.getVec(s,k),f)c(E,M[3*l+0],M[3*l+1],M[3*l+2]),a(D,E),F.componentIndex=I.get(n),F.cosAngle=i(E,D);else{if(c(E,M[3*l+0],M[3*l+1],M[3*l+2]),c(D,M[3*g+0],M[3*g+1],M[3*g+2]),F.componentIndex=I.get(n),F.cosAngle=i(E,D),h(F,x))continue;F.cosAngle<-.9999&&a(D,E)}C+=o,G++,f||u(F,N)?(r.write(b,L++,F),K.push(o)):d(F,V)&&(m.write(z,B++,F),O.push(o))}const Q=new Float32Array(K.reverse()),R=new Float32Array(O.reverse());return{regular:{instancesData:r.trim(b,L),lodInfo:{lengths:Q}},silhouette:{instancesData:m.trim(z,B),lodInfo:{lengths:R}},averageEdgeLength:C/G}}function u(e,t){return e.cosAngle<t}function h(e,t){return e.cosAngle>t}function d(e,t){const o=n(e.cosAngle),r=A.fwd,s=A.ortho;m(r,e.position1,e.position0);return o*(i(l(s,e.faceNormal0,e.faceNormal1),r)>0?-1:1)>t}const A={edge:{position0:r(),position1:r(),faceNormal0:r(),faceNormal1:r(),componentIndex:0,cosAngle:0},ortho:r(),fwd:r()},v={v0:r(),v1:r(),v2:r()},w={anglePlanar:4,angleSignificantEdge:35};export{p as extractEdges};
