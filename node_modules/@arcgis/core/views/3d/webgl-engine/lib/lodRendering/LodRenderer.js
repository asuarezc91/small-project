/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{c as e}from"../../../../../chunks/vec3f64.js";import{f as t,d as s,i as n}from"../../../../../chunks/vec3.js";import{a as i}from"../../../../../chunks/mat4f64.js";import{a as r}from"../../../../../chunks/vec2f64.js";import{a}from"../../../../../chunks/vec4f64.js";import{empty as o,expandWithVec3 as l,center as c,diameter as h}from"../../../../../geometry/support/aaBoundingBox.js";import{Default3D as d}from"../DefaultVertexAttributeLocations.js";import{glLayout as u}from"../../../support/buffer/glUtil.js";import{assert as p}from"../Util.js";import m from"../../../../webgl/BufferObject.js";import{bindVertexBufferLayout as g,unbindVertexBufferLayout as f}from"../../../../webgl/Util.js";import _ from"../../../../webgl/VertexArrayObject.js";import{acquireMaterials as y,releaseMaterials as I,encodeDoubleVec3 as b}from"../../materials/renderers/utils.js";import{IntersectorResult as v}from"../intersectorUtils.js";import C from"../Camera.js";import D from"../../../support/debugFlags.js";import{colorMixModes as x}from"../../materials/internal/MaterialUtil.js";import{OutputHighlight as E}from"../../core/shaderLibrary/output/OutputHighlight.glsl.js";import{DefaultMaterial as R}from"../../materials/DefaultMaterial.js";import{InstanceData as L,StateFlags as T}from"./InstanceData.js";import{InstanceOctree as S}from"./InstanceOctree.js";import{LevelSelector as U}from"./LevelSelector.js";import{RenderInstanceData as w}from"./RenderInstanceData.js";let V=function(e){const t=e.baseBoundingSphere.radius,s=e.levels.map((e=>e.minScreenSpaceRadius));return new U(t,s)};function A(e){V=e}class H{constructor(e,t){const s=e.rctx,n=t.geometry,i=t.material,r=n.data.toRenderData();this.materialRep=e.materialRep,i.setParameterValues({instancedDoublePrecision:!0});const a=i.createBufferWriter(),o=a.vertexBufferLayout,l=a.elementCount(r),c=a.allocate(l);a.write({},r,c,0),this.geometry=n,this.material=i,this.glMaterials=y(i,this.materialRep),this.vertexBufferLayout=o,this.vbo=m.createVertex(s,35044,c.buffer),this.vao=new _(s,d,{geometry:u(o)},{geometry:this.vbo}),this.vertexCount=l}destroy(){I(this.material,this.materialRep),this.vbo.dispose(),this.vao.dispose()}get boundingInfo(){return this.geometry.boundingInfo}get triangleCount(){return this.vertexCount/3}intersect(e,t,s,n,i,r){const a=this.geometry.id,o=i.toString();this.material.intersect(this.geometry,null,e.transform.transform,e,s,n,((s,n,l,c)=>{if(s>=0){if(null!=t&&!t(e.rayBeginPoint,e.rayEndPoint,s))return;const h={type:"external",metadata:{layerUid:r.layerUid,graphicUid:r.graphicUid(i)}};if((null==e.results.min.drapedLayerOrder||c>=e.results.min.drapedLayerOrder)&&(null==e.results.min.dist||s<e.results.min.dist)&&(e.results.min.set(h,o,s,n,e.transform.transform,c,null,a,l),e.results.min.intersector="LodRenderer"),0!==e.options.store&&(null==e.results.max.drapedLayerOrder||c>=e.results.max.drapedLayerOrder)&&(null==e.results.max.dist||s>e.results.max.dist)&&(e.results.max.set(h,o,s,n,e.transform.transform,c,null,a,l),e.results.min.intersector="LodRenderer"),2===e.options.store){const t=new v(e.results.min.ray);t.set(h,o,s,n,e.transform.transform,c,null,a,l),t.intersector="LodRenderer",e.results.all.push(t)}}}))}}class O{constructor(e,t){this.components=[],this.minScreenSpaceRadius=t.minScreenSpaceRadius,t.components.forEach((t=>{this.components.push(new H(e,t))}))}destroy(){this.components.forEach((e=>{e.destroy()}))}intersect(e,t,s,n,i,r){this.components.forEach((a=>{a.intersect(e,t,s,n,i,r)}))}get boundingBox(){if(!this._boundingBox){const e=o();this.components.forEach((t=>{l(e,t.boundingInfo.bbMin),l(e,t.boundingInfo.bbMax)})),this._boundingBox=e}return this._boundingBox}get boundingSphere(){if(!this._boundingSphere){const t=this.boundingBox,s=e();c(t,s),this._boundingSphere={center:s,radius:.5*h(t)}}return this._boundingSphere}get triangleCount(){return this.components.reduce(((e,t)=>e+t.triangleCount),0)}}class M{constructor(e,t,s,n){this.type="Lod",this.isGround=!1,this._inverseViewport=r(),this._levels=[],this._renderInstanceData=[],this._highlightRenderInstanceData=[],this._instanceIndex=0,this._slicePlane=!1,this._enableLevelSelection=!0,this._lastCamera=new C,this._updateCyclesWithStaticCamera=-1,this._needFullCycle=!1,this.canRender=!0,this._symbol=e,this._optionalFields=t,this._metadata=s,this._instanceBufferLayout=R.getInstanceBufferLayout({instancedDoublePrecision:!0,instanced:t}),this._glInstanceBufferLayout=u(this._instanceBufferLayout,{divisor:1}),this._instanceData=new L(this._optionalFields,n),this._instanceData.on("instance-added",(()=>{this.requestUpdateCycle()})),this._instanceData.on("instance-removed",(()=>{this.requestUpdateCycle()})),this._instanceData.on("instance-transform-changed",(e=>{this.requestUpdateCycle(),this._metadata.notifyGraphicUpdate(e.index,2)})),this._instanceData.on("instance-visibility-changed",(e=>{this.requestUpdateCycle(!0),this._metadata.notifyGraphicUpdate(e.index,1)})),this._instanceData.on("instance-highlight-changed",(()=>{this.requestUpdateCycle(!0)})),this._enableLevelSelection=this._symbol.levels.length>1,j.push(this)}destroy(){j.splice(j.indexOf(this),1)}get levels(){return this._levels}get baseBoundingBox(){return this._levels[this._levels.length-1].boundingBox}get baseBoundingSphere(){return this._levels[this._levels.length-1].boundingSphere}get baseMaterial(){return this._levels[this._levels.length-1].components[0].material}get slicePlane(){return this._slicePlane}set slicePlane(e){this._slicePlane=e}get intersectionHandlerId(){return this._metadata.layerUid}get instanceData(){return this._instanceData}get memoryUsage(){const e={cpu:0,gpu:0};return this._renderInstanceData.forEach((t=>{const s=t.memoryUsage;e.cpu+=s.cpu,e.gpu+=s.gpu})),this._highlightRenderInstanceData.forEach((t=>{const s=t.memoryUsage;e.cpu+=s.cpu,e.gpu+=s.gpu})),e}get renderStats(){const e=this._instanceData.size,t=[];return this._levels.forEach(((e,s)=>{const n=this._renderInstanceData[s],i=this._highlightRenderInstanceData[s],r=n.size+i.size,a=e.triangleCount;t.push({renderedInstances:r,renderedTriangles:r*a,trianglesPerInstance:a})})),{totalInstances:e,renderedInstances:t.reduce(((e,t)=>e+t.renderedInstances),0),renderedTriangles:t.reduce(((e,t)=>e+t.renderedTriangles),0),levels:t}}initializeRenderContext(e){this._initContext=e;const t=e.rctx;this._symbol.levels.forEach((s=>{this._levels.push(new O(e,s)),this._renderInstanceData.push(new w(t,this._instanceBufferLayout)),this._highlightRenderInstanceData.push(new w(t,this._instanceBufferLayout))})),this._levelSelector=V(this)}uninitializeRenderContext(){this.invalidateOctree(),this._levels.forEach((e=>{e.destroy()})),this._renderInstanceData.forEach((e=>{e.destroy()})),this._highlightRenderInstanceData.forEach((e=>{e.destroy()}))}get slots(){return[4,6]}get needsHighlight(){return this._highlightRenderInstanceData.reduce(((e,t)=>e+t.size),0)>0}prepareRender(e){this.runUpdates(e)}render(e){const t=e.rctx,s=4===e.slot?3:6===e.slot?5:null;if(!s)return;if(!this.baseMaterial.isVisible()||!this.baseMaterial.isVisibleInPass(e.pass))return!1;const n=e.camera;this._inverseViewport[0]=1/n.fullViewport[2],this._inverseViewport[1]=1/n.fullViewport[3];const i={slot:s,origin:[0,0,0],camera:n,inverseViewport:this._inverseViewport,shadowMap:e.shadowMap,shadowMappingEnabled:!!e.shadowMap&&e.shadowMap.enabled,ssaoEnabled:!!e.ssaoHelper&&e.ssaoHelper.enabled,screenToWorldRatio:null,screenToWorldRatioGlobalWM:null,slicePlane:e.sliceHelper&&e.sliceHelper.plane,hudVisibilityTexture:e.offscreenRenderingHelper?e.offscreenRenderingHelper.hudVisibilityTexture:null,highlightDepthTexture:e.offscreenRenderingHelper?e.offscreenRenderingHelper.depthTexture:null,hasOccludees:!1,linearDepthTexture:null,linearDepthTextureID:0,lastFrameColorTexture:null,lastFrameColorTextureID:0,reprojectionMat:null,ssrEnabled:!1,lighting:e.scenelightingData,transparencyPassType:e.transparencyPassType};t.bindVAO();for(let t=0;t<this._levels.length;++t){const n=e.isHighlightPass?this._highlightRenderInstanceData[t]:this._renderInstanceData[t];this._levels[t].components.forEach((r=>{this.renderComponent(e,s,i,n,r,t)}))}return!0}intersect(s,i,r,a){if(!this.baseMaterial.isVisible())return;const o=e();t(o,a,r);const l=e=>{this._instanceData.getCombinedModelTransform(e,G),s.transform.set(G),n(q,r,s.transform.inverse),n(N,a,s.transform.inverse);const t=this._instanceData.getState(e),o=this._instanceData.getLodLevel(e);p(t&T.ACTIVE,"invalid instance state"),p(o>=0&&o<this._levels.length,"invaid lod level"),this._levels[o].intersect(s,i,q,N,e,this._metadata)};this.baseMaterial.params.verticalOffset?this.octree.forEach(l):this.octree.forEachAlongRay(r,o,l)}queryDepthRange(e){return this.queryDepthRangeOctree(e)}notifyShaderTransformationChanged(){this.invalidateOctree()}requestUpdateCycle(e=!1){this._updateCyclesWithStaticCamera=-1,e&&(this._needFullCycle=!0),this.needsUpdates&&this._initContext.requestRender()}get needsUpdates(){return this._instanceData.size>0&&this._updateCyclesWithStaticCamera<1}runUpdates(e){if(D.LOD_INSTANCE_RENDERER_DISABLE_UPDATES)return;if(this._enableLevelSelection){const t=e.equals(this._lastCamera);this._lastCamera.copyFrom(e),t||this.requestUpdateCycle()}const t=this._needFullCycle?this._instanceData.size:2e3;this._needFullCycle=!1,this.updateInstances(e,t),this.needsUpdates&&this._initContext.requestRender()}get octree(){return this._octree||(this._octree=this.buildOctree()),this._octree}invalidateOctree(){this._octree&&(this._octree.destroy(),this._octree=null)}buildOctree(){const e=new S(this._instanceData,this.baseBoundingSphere),t=this._instanceData,s=t.view?t.view.state:null;for(let t=0;t<this._instanceData.capacity;++t){s.get(t)&T.ACTIVE&&e.addInstance(t)}return e}queryDepthRangeOctree(e){const n=e.eye,i=e.viewForward,r=this.octree.findClosest(i,"front-to-back",e.frustum),a=this.octree.findClosest(i,"back-to-front",e.frustum);if(null!=r&&null!=a){this._instanceData.view.boundingSphere.getVec(r,F),t(F,F,n);const o=s(F,i)-F[3];this._instanceData.view.boundingSphere.getVec(a,F),t(F,F,n);const l=s(F,i)+F[3];return{near:Math.max(e.near,o),far:Math.min(e.far,l)}}return{near:1/0,far:-1/0}}startUpdateCycle(){this._updateCyclesWithStaticCamera++,this._renderInstanceData.forEach((e=>{e.startUpdateCylce()})),this._highlightRenderInstanceData.forEach((e=>{e.startUpdateCylce()})),this.needsUpdates&&this._initContext.requestRender()}updateInstances(e,t){const s=this._enableLevelSelection,n=this._levelSelector;n.updateCamera(e),this._renderInstanceData.forEach((e=>{e.beginUpdate()})),this._highlightRenderInstanceData.forEach((e=>{e.beginUpdate()}));const i=this._instanceData,r=this._instanceData.view,a=i.size,o=i.capacity;let l=this._instanceIndex;t=Math.min(a,t);for(let e=0;e<t;++e){0===l&&this.startUpdateCycle();const e=r.state.get(l);let a=0;if(!(e&T.ALLOCATED)){l=(l+1)%o,t++;continue}const c=r.lodLevel.get(l);if(e&T.ACTIVE&&this._renderInstanceData[c].freeTail(),e&T.HIGHLIGHT_ACTIVE&&this._highlightRenderInstanceData[c].freeTail(),e&T.REMOVE)i.freeInstance(l);else if(e&T.VISIBLE){let t=0;if(s&&(r.modelOrigin.getVec(l,P),t=n.selectLevel(P,i.getCombinedMedianScaleFactor(l))),a=e&~(T.ACTIVE|T.HIGHLIGHT_ACTIVE|T.TRANSFORM_CHANGED),t>=0){const s=this._renderInstanceData[t],n=s.allocateHead();if(B(r,l,s.view,n),a|=T.ACTIVE,e&T.HIGHLIGHT){const e=this._highlightRenderInstanceData[t],s=e.allocateHead();B(r,l,e.view,s),a|=T.HIGHLIGHT_ACTIVE}}r.state.set(l,a),r.lodLevel.set(l,t)}else a=e&~(T.ACTIVE|T.HIGHLIGHT_ACTIVE|T.TRANSFORM_CHANGED),r.state.set(l,a);if(this._octree){const t=!!(e&T.ACTIVE),s=!!(a&T.ACTIVE);!t&&s?this._octree.addInstance(l):t&&!s?this._octree.removeInstance(l):t&&s&&e&T.TRANSFORM_CHANGED&&(this._octree.removeInstance(l),this._octree.addInstance(l))}l=(l+1)%o}this._instanceIndex=l,this._renderInstanceData.forEach((e=>{e.endUpdate()})),this._highlightRenderInstanceData.forEach((e=>{e.endUpdate()}))}renderComponent(e,t,s,n,i,r){const a=i.glMaterials.get(e.pass);if(!a||!a.beginSlot(t)||0===n.size)return;const o=e.rctx,l=o.capabilities.instancing;a.ensureParameters(s);const c=a.getTechnique(),h=a.getPipelineState(t);o.setPipelineState(h),a.bind(o,s),o.bindVAO(i.vao),c.ensureAttributeLocations(i.vao);const u=c.program;e.isHighlightPass&&E.bindOutputHighlight(o,u,s),c.bindDraw(s),D.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL&&0===e.pass&&(u.setUniform4fv("externalColor",z[Math.min(r,z.length-1)]),u.setUniform1i("colorMixMode",x.replace));const m=n.capacity,_=n.headIndex,y=n.tailIndex,I=n.firstIndex,b=this._glInstanceBufferLayout,v=(e,t)=>{g(o,d,n.buffer,b,e),l.drawArraysInstanced(c.primitiveType,0,i.vertexCount,t-e),f(o,d,n.buffer,b)};i.material.params.transparent&&null!=I?_>y?(p(I>=y&&I<=_,"invalid firstIndex"),v(I,_),v(y,I)):_<y&&(I<=_?(p(I>=0&&I<=_,"invalid firstIndex"),v(I,_),v(y,m),v(0,I)):(p(I>=y&&I<=m,"invalid firstIndex"),v(I,m),v(0,_),v(y,I))):_>y?v(y,_):_<y&&(v(0,_),v(y,m)),o.bindVAO(null)}}function B(e,t,s,n){b(e.modelOrigin,t,s.modelOriginHi,s.modelOriginLo,n),s.model.copyFrom(n,e.model,t),s.modelNormal.copyFrom(n,e.modelNormal,t),e.color&&s.color&&s.color.copyFrom(n,e.color,t),e.featureAttribute&&s.featureAttribute&&s.featureAttribute.copyFrom(n,e.featureAttribute,t)}const j=[],P=e(),F=a(),G=i(),q=e(),N=e(),z=[[1,0,1,1],[0,0,1,1],[0,1,0,1],[1,1,0,1],[1,0,0,1]];export{H as LodComponentData,O as LodLevelData,M as LodRenderer,j as lodRenderers,A as setLevelSelectorFactory};
