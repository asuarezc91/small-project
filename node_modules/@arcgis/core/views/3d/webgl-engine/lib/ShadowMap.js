/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{clamp as t,lerp as e,acosClamped as s}from"../../../../core/mathUtils.js";import{c as a}from"../../../../chunks/vec3f64.js";import{s as i,p as r,i as h,g as c}from"../../../../chunks/vec3.js";import{m as o,a as n,l as m,t as u,o as d}from"../../../../chunks/mat4.js";import{a as l}from"../../../../chunks/mat3f64.js";import{a as p}from"../../../../chunks/mat4f64.js";import{a as f}from"../../../../chunks/vec2f64.js";import{a as x}from"../../../../chunks/vec4f64.js";import{s as M,h as g,a as b,m as w,j as T,d as S,g as j,n as C,e as D,c as v}from"../../../../chunks/vec2.js";import{s as z,t as y}from"../../../../chunks/vec4.js";import{assert as U,logWithBase as k,verify as O,rayRay2D as L}from"./Util.js";import N from"../../../webgl/Texture.js";import{getGpuMemoryUsage as A}from"../../../webgl/Util.js";import{createEmptyTexture as F}from"./glUtil3D.js";import P from"./Camera.js";import{DefaultTextureUnits as R}from"./DefaultTextureUnits.js";import _ from"../../../webgl/FramebufferObject.js";class H{constructor(){this.camera=new P,this.lightMat=p()}}const G=p(),W=p(),q=p(),E=x(),V=[];for(let t=0;t<8;++t)V.push(x());const B=a(),I=a(),J=f(),K=f(),Q=f(),X=f(),Y=f(),Z=p(),$=a(),tt=[],et=p(),st=new Float32Array(64),at=f(),it=f(),rt=[f(),f(),f(),f()],ht=f(),ct=f(),ot=f(),nt=f(),mt=f(),ut=f(),dt=f();function lt(t,e,s,a,i,r,h,c){M(at,0,0);for(let e=0;e<4;++e)g(at,at,t[e]);b(at,at,.25),M(it,0,0);for(let e=4;e<8;++e)g(it,it,t[e]);b(it,it,.25),w(rt[0],t[4],t[5],.5),w(rt[1],t[5],t[6],.5),w(rt[2],t[6],t[7],.5),w(rt[3],t[7],t[4],.5);let o=0,n=T(rt[0],at);for(let t=1;t<4;++t){const e=T(rt[t],at);e<n&&(n=e,o=t)}S(ht,rt[o],t[o+4]);const m=ht[0];let u,d;ht[0]=-ht[1],ht[1]=m,S(ct,it,at),j(ct,ht)<0&&C(ht,ht),w(ht,ht,ct,s),D(ht,ht),u=d=j(S(ot,t[0],at),ht);for(let e=1;e<8;++e){const s=j(S(ot,t[e],at),ht);s<u?u=s:s>d&&(d=s)}v(a,at),b(ot,ht,u-e),g(a,a,ot);let l=-1,p=1,f=0,x=0;for(let e=0;e<8;++e){S(nt,t[e],a),D(nt,nt);const s=ht[0]*nt[1]-ht[1]*nt[0];s>0?s>l&&(l=s,f=e):s<p&&(p=s,x=e)}O(l>0,"leftArea"),O(p<0,"rightArea"),b(mt,ht,u),g(mt,mt,at),b(ut,ht,d),g(ut,ut,at),dt[0]=-ht[1],dt[1]=ht[0];const z=L(a,t[x],ut,g(ot,ut,dt),1,i),y=L(a,t[f],ut,ot,1,r),U=L(a,t[f],mt,g(ot,mt,dt),1,h),k=L(a,t[x],mt,ot,1,c);O(z,"rayRay"),O(y,"rayRay"),O(U,"rayRay"),O(k,"rayRay")}function pt(t,e){return 3*e+t}const ft=f();function xt(t,e){return M(ft,t[e],t[e+3]),ft}const Mt=f(),gt=l();function bt(t,e,s,a,i){S(Mt,s,a),b(Mt,Mt,.5),gt[0]=Mt[0],gt[1]=Mt[1],gt[2]=0,gt[3]=Mt[1],gt[4]=-Mt[0],gt[5]=0,gt[6]=Mt[0]*Mt[0]+Mt[1]*Mt[1],gt[7]=Mt[0]*Mt[1]-Mt[1]*Mt[0],gt[8]=1,gt[pt(0,2)]=-j(xt(gt,0),t),gt[pt(1,2)]=-j(xt(gt,1),t);let r=j(xt(gt,0),s)+gt[pt(0,2)],h=j(xt(gt,1),s)+gt[pt(1,2)],c=j(xt(gt,0),a)+gt[pt(0,2)],o=j(xt(gt,1),a)+gt[pt(1,2)];r=-(r+c)/(h+o),gt[pt(0,0)]+=gt[pt(1,0)]*r,gt[pt(0,1)]+=gt[pt(1,1)]*r,gt[pt(0,2)]+=gt[pt(1,2)]*r,r=1/(j(xt(gt,0),s)+gt[pt(0,2)]),h=1/(j(xt(gt,1),s)+gt[pt(1,2)]),gt[pt(0,0)]*=r,gt[pt(0,1)]*=r,gt[pt(0,2)]*=r,gt[pt(1,0)]*=h,gt[pt(1,1)]*=h,gt[pt(1,2)]*=h,gt[pt(2,0)]=gt[pt(1,0)],gt[pt(2,1)]=gt[pt(1,1)],gt[pt(2,2)]=gt[pt(1,2)],gt[pt(1,2)]+=1,r=j(xt(gt,1),e)+gt[pt(1,2)],h=j(xt(gt,2),e)+gt[pt(2,2)],c=j(xt(gt,1),s)+gt[pt(1,2)],o=j(xt(gt,2),s)+gt[pt(2,2)],r=-.5*(r/h+c/o),gt[pt(1,0)]+=gt[pt(2,0)]*r,gt[pt(1,1)]+=gt[pt(2,1)]*r,gt[pt(1,2)]+=gt[pt(2,2)]*r,r=j(xt(gt,1),e)+gt[pt(1,2)],h=j(xt(gt,2),e)+gt[pt(2,2)],c=-h/r,gt[pt(1,0)]*=c,gt[pt(1,1)]*=c,gt[pt(1,2)]*=c,i[0]=gt[0],i[1]=gt[1],i[2]=0,i[3]=gt[2],i[4]=gt[3],i[5]=gt[4],i[6]=0,i[7]=gt[5],i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=gt[6],i[13]=gt[7],i[14]=0,i[15]=gt[8]}export default class{constructor(t,e){this.rctx=t,this.viewingMode=e,this._enabled=!1,this.textureSize=0,this.maxTextureSize=0,this.numCascades=1,this.maxNumCascades=4,this.splitSchemeLambda=0,this.warp=!0,this.cascadeDistances=[0,0,0,0,0],this.cascades=[],this.emptyTexture=F(this.rctx),this.maxTextureSize=this.rctx.parameters.maxTextureSize;for(let t=0;t<4;++t)this.cascades.push(new H)}dispose(){this.emptyTexture.dispose(),this.emptyTexture=null,this.discardDepthTexture()}set maxCascades(e){this.maxNumCascades=t(Math.floor(e),1,4)}get maxCascades(){return this.maxNumCascades}set enabled(t){this._enabled=t,t||this.discardDepthTexture()}get enabled(){return this._enabled}getDepthTexture(){return this.depthTexture}getCascades(){for(let t=0;t<this.numCascades;++t)tt[t]=this.cascades[t];return tt.length=this.numCascades,tt}prepare(t,a,l){U(this.enabled),this.textureSize=this.computeTextureSize(t.fullWidth,t.fullHeight),this.assertDepthTexture(),o(W,t.projectionMatrix,t.viewMatrix);let p=l.near,f=l.far;p<2&&(p=2),f<2&&(f=2),p>=f&&(p=2,f=4),this.numCascades=Math.min(1+Math.floor(k(f/p,4)),this.maxNumCascades);const x=(f-p)/this.numCascades,M=Math.pow(f/p,1/this.numCascades);let g=p,b=p;for(let t=0;t<this.numCascades+1;++t)this.cascadeDistances[t]=e(g,b,this.splitSchemeLambda),g*=M,b+=x;n(q,W);const w=1===this.viewingMode?t.eye:i($,0,0,1);m(Z,[0,0,0],[-a[0],-a[1],-a[2]],w);const T=t.viewMatrix,S=t.projectionMatrix;for(let t=0;t<this.numCascades;++t){const e=this.cascades[t],i=-this.cascadeDistances[t],n=-this.cascadeDistances[t+1],m=(S[10]*i+S[14])/Math.abs(S[11]*i+S[15]),l=(S[10]*n+S[14])/Math.abs(S[11]*n+S[15]);U(m<l);for(let t=0;t<8;++t){z(E,t%4==0||t%4==3?-1:1,t%4==0||t%4==1?-1:1,t<4?m:l,1),y(V[t],E,q);for(let e=0;e<3;++e)V[t][e]/=V[t][3]}r($,V[0]),u(G,Z,$),e.camera.viewMatrix=G;for(let t=0;t<8;++t)h(V[t],V[t],e.camera.viewMatrix);c(B,V[0]),c(I,V[0]);for(let t=1;t<8;++t)for(let e=0;e<3;++e)B[e]=Math.min(B[e],V[t][e]),I[e]=Math.max(I[e],V[t][e]);if(B[2]-=200,I[2]+=200,e.camera.near=-I[2],e.camera.far=-B[2],this.warp){p=1/V[0][3],f=1/V[4][3],U(p<f);let t=p+Math.sqrt(p*f);const i=Math.sin(s(T[2]*a[0]+T[6]*a[1]+T[10]*a[2]));t/=i,lt(V,t,i,J,K,Q,X,Y),bt(J,K,X,Y,e.camera.projectionMatrix),e.camera.projectionMatrix[10]=2/(B[2]-I[2]),e.camera.projectionMatrix[14]=-(B[2]+I[2])/(B[2]-I[2])}else d(e.camera.projectionMatrix,B[0],I[0],B[1],I[1],e.camera.near,e.camera.far);o(e.lightMat,e.camera.projectionMatrix,e.camera.viewMatrix);const x=this.textureSize/2;e.camera.viewport[0]=t%2==0?0:x,e.camera.viewport[1]=0===Math.floor(t/2)?0:x,e.camera.viewport[2]=x,e.camera.viewport[3]=x}this.lastOrigin=null;const j=this.rctx;j.bindFramebuffer(this.fbo),j.bindTexture(null,7),j.setClearColor(1,1,1,1),j.clearSafe(16640)}finish(t){U(this.enabled),this.rctx.bindFramebuffer(t)}bind(t,e){const s=this.rctx;s.bindTexture(this.enabled?this.depthTexture:this.emptyTexture,e),s.bindProgram(t),t.setUniform1i("depthTex",e),t.setUniform1f("depthHalfPixelSz",this.enabled?.5/this.textureSize:-1),t.setUniform1i("shadowMapNum",this.numCascades),t.setUniform4f("shadowMapDistance",this.cascadeDistances[0],this.numCascades>1?this.cascadeDistances[1]:1/0,this.numCascades>2?this.cascadeDistances[2]:1/0,this.numCascades>3?this.cascadeDistances[3]:1/0)}bindToAllPrograms(t){const e=t.getProgramsUsingUniform("shadowMapDistance");for(let t=0;t<e.length;t++)this.bind(e[t],R.SHADOW_MAP)}bindView(t,e){if(!this.enabled)return;const s=this.lastOrigin;if(!(s&&s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])){this.lastOrigin=this.lastOrigin||a(),c(this.lastOrigin,e);for(let t=0;t<this.numCascades;++t){u(et,this.cascades[t].lightMat,e);for(let e=0;e<16;++e)st[16*t+e]=et[e]}}t.setUniformMatrix4fv("shadowMapMatrix",st)}computeTextureSize(t,e){const s=.5*Math.log(t*t+e*e)*Math.LOG2E,a=2**Math.round(s+.35);return Math.min(this.maxTextureSize,2*a)}assertDepthTexture(){if(null!=this.depthTexture&&this.depthTexture.descriptor.width===this.textureSize)return;this.discardDepthTexture();const t={target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0,width:this.textureSize,height:this.textureSize};this.depthTexture=new N(this.rctx,t),this.fbo=new _(this.rctx,{colorTarget:0,depthStencilTarget:1,width:this.textureSize,height:this.textureSize},this.depthTexture)}discardDepthTexture(){this.fbo&&(this.fbo.dispose(),this.fbo=null),this.depthTexture&&(this.depthTexture.dispose(),this.depthTexture=null)}getGpuMemoryUsage(){return A(this.fbo)}get test(){const t=this;return{maxNumCascades:this.maxNumCascades,cascades:this.cascades,textureSize:this.textureSize,set splitSchemeLambda(e){t.splitSchemeLambda=e},get splitSchemeLambda(){return t.splitSchemeLambda},set warp(e){t.warp=e},get warp(){return t.warp}}}}
