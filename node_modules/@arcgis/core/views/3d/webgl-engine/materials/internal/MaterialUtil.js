/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as t}from"../../../../../core/maybe.js";import{glClamp as n,clamp as e}from"../../../../../core/mathUtils.js";import{c as o}from"../../../../../chunks/vec3f64.js";import{s as i,c as r,n as s}from"../../../../../chunks/vec3.js";import{create as c,setMin as f,setMax as a}from"../../../../../geometry/support/aaBoundingBox.js";import{assert as l,VertexAttrConstants as u}from"../../lib/Util.js";import{isInstanceHidden as m}from"../renderers/utils.js";import{scale as p}from"../../lib/screenSizePerspectiveUtils.js";const d=c(),h=u;function g(t,n,e,o,i,r,s){const c=m(n),f=e.tolerance;if(!c)if(t.boundingInfo)l("triangle"===t.data.primitiveType),M(t.boundingInfo,o,i,f,r,s);else{const n=t.getIndices(h.POSITION),e=t.getAttribute(h.POSITION);y(o,i,0,n.length/3,n,e,void 0,r,s)}}const x=o();function M(n,e,o,i,r,s){const c=j(e,o,x);if(f(d,n.getBBMin()),a(d,n.getBBMax()),t(r)&&r.applyToAabb(d),P(d,e,c,i)){const t=n.getPrimitiveIndices(),c=n.getIndices(),f=n.getPosition(),a=t?t.length:c.length/3;if(a>W){const t=n.getChildren();if(void 0!==t){for(let n=0;n<8;++n)void 0!==t[n]&&M(t[n],e,o,i,r,s);return}}y(e,o,0,a,c,f,t,r,s)}}const I=2**-52,b=o();function y(n,e,o,i,r,s,c,f,a){if(c)return function(n,e,o,i,r,s,c,f,a){const{data:l,offsetIdx:u,strideIdx:m}=s,p=n[0],d=n[1],h=n[2],g=e[0],x=e[1],M=e[2],y=g-p,v=x-d,T=M-h;for(let n=o;n<i;++n){const e=c[n];let o=3*e,i=u+m*r[o++],s=l[i++],g=l[i++],x=l[i];i=u+m*r[o++];let M=l[i++],j=l[i++],P=l[i];i=u+m*r[o];let V=l[i++],O=l[i++],B=l[i];t(f)&&([s,g,x]=f.applyToVertex(s,g,x,n),[M,j,P]=f.applyToVertex(M,j,P,n),[V,O,B]=f.applyToVertex(V,O,B,n));const S=M-s,L=j-g,U=P-x,E=V-s,N=O-g,W=B-x,k=v*W-N*T,z=T*E-W*y,C=y*N-E*v,R=S*k+L*z+U*C;if(Math.abs(R)<=I)continue;const H=p-s,X=d-g,Y=h-x,Z=H*k+X*z+Y*C;if(R>0){if(Z<0||Z>R)continue}else if(Z>0||Z<R)continue;const _=X*U-L*Y,q=Y*S-U*H,w=H*L-S*X,D=y*_+v*q+T*w;if(R>0){if(D<0||Z+D>R)continue}else if(D>0||Z+D<R)continue;const F=(E*_+N*q+W*w)/R;if(F>=0){a(F,A(S,L,U,E,N,W,b),e)}}}(n,e,o,i,r,s,c,f,a);const{data:l,offsetIdx:u,strideIdx:m}=s,p=n[0],d=n[1],h=n[2],g=e[0]-p,x=e[1]-d,M=e[2]-h;for(let n=o,e=3*o;n<i;++n){let o=u+m*r[e++],i=l[o++],s=l[o++],c=l[o];o=u+m*r[e++];let y=l[o++],v=l[o++],T=l[o];o=u+m*r[e++];let j=l[o++],P=l[o++],V=l[o];t(f)&&([i,s,c]=f.applyToVertex(i,s,c,n),[y,v,T]=f.applyToVertex(y,v,T,n),[j,P,V]=f.applyToVertex(j,P,V,n));const O=y-i,B=v-s,S=T-c,L=j-i,U=P-s,E=V-c,N=x*E-U*M,W=M*L-E*g,k=g*U-L*x,z=O*N+B*W+S*k;if(Math.abs(z)<=I)continue;const C=p-i,R=d-s,H=h-c,X=C*N+R*W+H*k;if(z>0){if(X<0||X>z)continue}else if(X>0||X<z)continue;const Y=R*S-B*H,Z=H*O-S*C,_=C*B-O*R,q=g*Y+x*Z+M*_;if(z>0){if(q<0||X+q>z)continue}else if(q>0||X+q<z)continue;const w=(L*Y+U*Z+E*_)/z;if(w>=0){a(w,A(O,B,S,L,U,E,b),n)}}}const v=o(),T=o();function A(t,n,e,o,c,f,a){return i(v,t,n,e),i(T,o,c,f),r(a,v,T),s(a,a),a}function j(t,n,e){return i(e,1/(n[0]-t[0]),1/(n[1]-t[1]),1/(n[2]-t[2]))}function P(t,n,e,o){return V(t,n,e,o,1/0)}function V(t,n,e,o,i){const r=(t[0]-o-n[0])*e[0],s=(t[3]+o-n[0])*e[0];let c=Math.min(r,s),f=Math.max(r,s);const a=(t[1]-o-n[1])*e[1],l=(t[4]+o-n[1])*e[1];if(f=Math.min(f,Math.max(a,l)),f<0)return!1;if(c=Math.max(c,Math.min(a,l)),c>f)return!1;const u=(t[2]-o-n[2])*e[2],m=(t[5]+o-n[2])*e[2];return f=Math.min(f,Math.max(u,m)),!(f<0)&&(c=Math.max(c,Math.min(u,m)),!(c>f)&&c<i)}function O(t,e,o,i,r){let s=(o.screenLength||0)*t.pixelRatio;r&&(s=p(s,i,e,r));const c=s*Math.tan(.5*t.fovY)/(.5*t.fullHeight);return n(c*e,o.minWorldLength||0,null!=o.maxWorldLength?o.maxWorldLength:1/0)}function B(t,n,e){if(!t)return;const o=t.parameters,i=t.paddingPixelsOverride;n.setUniform4f(e,o.divisor,o.offset,o.minPixelSize,i)}function S(t,n){const e=n?S(n):{};for(const n in t){let o=t[n];o&&o.forEach&&(o=E(o)),null==o&&n in e||(e[n]=o)}return e}function L(t,n){let e=!1;for(const o in n){const i=n[o];void 0!==i&&(e=!0,Array.isArray(i)?t[o]=i.slice():t[o]=i)}return e}function U(t,n,o,i,r){if(!n.options.selectionMode)return;const s=t.getAttribute(h.POSITION).data,c=t.getAttribute(h.SIZE),f=c&&c.data[0],a=o[0],l=o[1],u=((f+i)/2+4)*t.screenToWorldRatio;let m=Number.MAX_VALUE;for(let t=0;t<s.length-5;t+=3){const n=s[t],o=s[t+1],i=a-n,r=l-o,c=s[t+3]-n,f=s[t+4]-o,u=e((c*i+f*r)/(c*c+f*f),0,1),p=c*u-i,d=f*u-r,h=p*p+d*d;h<m&&(m=h)}m<u*u&&r()}function E(t){const n=[];return t.forEach((t=>n.push(t))),n}const N={multiply:1,ignore:2,replace:3,tint:4},W=1e3;export{B as bindScreenSizePerspective,N as colorMixModes,j as computeInvDir,A as computeNormal,S as copyParameters,P as intersectAabbInvDir,V as intersectAabbInvDirBefore,U as intersectDrapedRenderLineGeometry,g as intersectTriangleGeometry,y as intersectTriangles,L as updateParameters,O as verticalOffsetAtDistance};
