/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{BufferViewVec4f as e,BufferViewVec4u8 as t,BufferViewVec3f as f,BufferViewVec2f as o}from"../../../support/buffer/BufferView.js";import{VertexAttrConstants as s,assert as n}from"../../lib/Util.js";function l(e,t,f,o,s){const n=f.typedBuffer,l=f.typedBufferStride,r=e.length;if(o*=l,null==s||1===s)for(let f=0;f<r;++f){const s=2*e[f];n[o]=t[s],n[o+1]=t[s+1],o+=l}else for(let f=0;f<r;++f){const r=2*e[f];for(let e=0;e<s;++e)n[o]=t[r],n[o+1]=t[r+1],o+=l}}function r(e,t,f,o,s){const n=f.typedBuffer,l=f.typedBufferStride,r=e.length;if(o*=l,null==s||1===s)for(let f=0;f<r;++f){const s=3*e[f];n[o]=t[s],n[o+1]=t[s+1],n[o+2]=t[s+2],o+=l}else for(let f=0;f<r;++f){const r=3*e[f];for(let e=0;e<s;++e)n[o]=t[r],n[o+1]=t[r+1],n[o+2]=t[r+2],o+=l}}function i(e,t,f,o,s){const n=f.typedBuffer,l=f.typedBufferStride,r=e.length;if(o*=l,null==s||1===s)for(let f=0;f<r;++f){const s=4*e[f];n[o]=t[s],n[o+1]=t[s+1],n[o+2]=t[s+2],n[o+3]=t[s+3],o+=l}else for(let f=0;f<r;++f){const r=4*e[f];for(let e=0;e<s;++e)n[o]=t[r],n[o+1]=t[r+1],n[o+2]=t[r+2],n[o+3]=t[r+3],o+=l}}function c(e,t,f,o){const s=f.typedBuffer,n=f.typedBufferStride,l=e.length;o*=n;for(let f=0;f<l;++f){const l=9*e[f];for(let e=0;e<9;++e)s[o+e]=t[l+e];o+=n}}function a(e,t,f,o){const s=f.typedBuffer,n=f.typedBufferStride,l=e.length;o*=n;for(let f=0;f<l;++f){const l=16*e[f];for(let e=0;e<16;++e)s[o+e]=t[l+e];o+=n}}function d(e,t,f,o,s,n){if(f){const l=f,r=o.typedBuffer,i=o.typedBufferStride,c=e.length;if(s*=i,null==n||1===n)for(let f=0;f<c;++f){const o=3*e[f],n=t[o],c=t[o+1],a=t[o+2];r[s]=l[0]*n+l[4]*c+l[8]*a+l[12],r[s+1]=l[1]*n+l[5]*c+l[9]*a+l[13],r[s+2]=l[2]*n+l[6]*c+l[10]*a+l[14],s+=i}else for(let f=0;f<c;++f){const o=3*e[f],c=t[o],a=t[o+1],d=t[o+2],u=l[0]*c+l[4]*a+l[8]*d+l[12],p=l[1]*c+l[5]*a+l[9]*d+l[13],B=l[2]*c+l[6]*a+l[10]*d+l[14];for(let e=0;e<n;++e)r[s]=u,r[s+1]=p,r[s+2]=B,s+=i}}else r(e,t,o,s,n)}function u(e,t,f,o,s,n){if(f){const l=f,r=o.typedBuffer,i=o.typedBufferStride,c=e.length,a=l[0],d=l[1],u=l[2],p=l[4],B=l[5],g=l[6],y=l[8],h=l[9],b=l[10],z=Math.abs(1-a*a+p*p+y*y)>1e-5||Math.abs(1-d*d+B*B+h*h)>1e-5||Math.abs(1-u*u+g*g+b*b)>1e-5;if(s*=i,null==n||1===n)for(let f=0;f<c;++f){const o=3*e[f],n=t[o],l=t[o+1],c=t[o+2];let O=a*n+p*l+y*c,S=d*n+B*l+h*c,N=u*n+g*l+b*c;if(z){const e=O*O+S*S+N*N;if(e<.999999&&e>1e-6){const t=Math.sqrt(e);O/=t,S/=t,N/=t}}r[s+0]=O,r[s+1]=S,r[s+2]=N,s+=i}else for(let f=0;f<c;++f){const o=3*e[f],l=t[o],c=t[o+1],O=t[o+2];let S=a*l+p*c+y*O,N=d*l+B*c+h*O,k=u*l+g*c+b*O;if(z){const e=S*S+N*N+k*k;if(e<.999999&&e>1e-6){const t=Math.sqrt(e);S/=t,N/=t,k/=t}}for(let e=0;e<n;++e)r[s+0]=S,r[s+1]=N,r[s+2]=k,s+=i}}else r(e,t,o,s,n)}function p(e,t,f,o,s,n){const l=o.typedBuffer,r=o.typedBufferStride,i=e.length;if(s*=r,null==n||1===n){if(4===f)for(let f=0;f<i;++f){const o=4*e[f];l[s]=t[o],l[s+1]=t[o+1],l[s+2]=t[o+2],l[s+3]=t[o+3],s+=r}else if(3===f)for(let f=0;f<i;++f){const o=3*e[f];l[s]=t[o],l[s+1]=t[o+1],l[s+2]=t[o+2],l[s+3]=255,s+=r}}else if(4===f)for(let f=0;f<i;++f){const o=4*e[f];for(let e=0;e<n;++e)l[s]=t[o],l[s+1]=t[o+1],l[s+2]=t[o+2],l[s+3]=t[o+3],s+=r}else if(3===f)for(let f=0;f<i;++f){const o=3*e[f];for(let e=0;e<n;++e)l[s]=t[o],l[s+1]=t[o+1],l[s+2]=t[o+2],l[s+3]=255,s+=r}}function B(e,t,f,o,s,n,l){const r=s.typedBuffer,i=s.typedBufferStride,c=e.length;if(n*=i,null==l||1===l){if(4===f)for(let f=0;f<c;++f){const s=4*e[f];r[n]=t[s]*o[0],r[n+1]=t[s+1]*o[1],r[n+2]=t[s+2]*o[2],r[n+3]=t[s+3]*o[3],n+=i}else if(3===f){const f=255*o[3];for(let s=0;s<c;++s){const l=3*e[s];r[n]=t[l]*o[0],r[n+1]=t[l+1]*o[1],r[n+2]=t[l+2]*o[2],r[n+3]=f,n+=i}}}else if(4===f)for(let f=0;f<c;++f){const s=4*e[f];for(let e=0;e<l;++e)r[n]=t[s]*o[0],r[n+1]=t[s+1]*o[1],r[n+2]=t[s+2]*o[2],r[n+3]=t[s+3]*o[3],n+=i}else if(3===f){const f=255*o[3];for(let s=0;s<c;++s){const c=3*e[s];for(let e=0;e<l;++e)r[n]=t[c]*o[0],r[n+1]=t[c+1]*o[1],r[n+2]=t[c+2]*o[2],r[n+3]=f,n+=i}}}function g(r,c,a,B,g,y){for(const h of c.fieldNames){const c=r.vertexAttr[h],b=r.indices[h];if(c&&b)switch(h){case s.POSITION:{n(3===c.size);const e=g.getField(h,f);e&&d(b,c.data,a,e,y);break}case s.NORMAL:{n(3===c.size);const e=g.getField(h,f);e&&u(b,c.data,B,e,y);break}case s.UV0:{n(2===c.size);const e=g.getField(h,o);e&&l(b,c.data,e,y);break}case s.UVMAPSPACE:{n(4===c.size);const t=g.getField(h,e);t&&i(b,c.data,t,y);break}case s.MEANVERTEXPOSITION:{n(3===c.size);const e=g.getField(h,f);e&&d(b,c.data,a,e,y);break}case s.BOUND1:case s.BOUND2:case s.BOUND3:{n(3===c.size);const e=g.getField(h,f);e&&d(b,c.data,a,e,y);break}case s.COLOR:{n(3===c.size||4===c.size);const e=g.getField(h,t);e&&p(b,c.data,c.size,e,y);break}case s.SYMBOLCOLOR:{n(3===c.size||4===c.size);const e=g.getField(h,t);e&&p(b,c.data,c.size,e,y);break}case s.TANGENT:{n(4===c.size);const t=g.getField(h,e);t&&i(b,c.data,t,y);break}}}}export{c as writeBufferMat3f,a as writeBufferMat4f,l as writeBufferVec2,r as writeBufferVec3,i as writeBufferVec4,p as writeColor,g as writeDefaultAttributes,B as writeMultipliedColor,u as writeNormal,d as writePosition};
