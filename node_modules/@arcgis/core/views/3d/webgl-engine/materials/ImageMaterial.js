/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../lib/GLMaterialTexture.js";import{intersectTriangleGeometry as t}from"./internal/MaterialUtil.js";import{Material as i,materialParametersDefaults as a}from"../lib/Material.js";import{OITPolygonOffsetLimit as s}from"../lib/OrderIndependentTransparency.js";import{DefaultBufferWriter as r,PositionUVLayout as n}from"./internal/DefaultBufferWriter.js";import{ImageMaterialTechniqueConfiguration as u,ImageMaterialTechnique as h}from"../shaders/ImageMaterialTechnique.js";class c extends i{constructor(e,t){super(t,e,l),this.supportsEdges=!0,this.techniqueConfig=new u}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<s,this.techniqueConfig}intersect(e,i,a,s,r,n,u){t(e,i,s,r,n,void 0,u)}getGLMaterial(e){return 0===e.output||7===e.output||4===e.output?new p(e):void 0}createBufferWriter(){return new r(n)}}class p extends e{constructor(e){super({...e,...e.material.params}),this.updateParameters()}updateParameters(e){const t=this.material.params;this.updateTexture(t.textureId),this.technique=this.techniqueRep.acquireAndReleaseExisting(h,this.material.getTechniqueConfig(this.output,e),this.technique)}beginSlot(e){if(4===this.output)return 3===e;return e===(this.technique.configuration.transparent?this.technique.configuration.writeDepth?5:8:3)}_updateOccludeeState(e){e.hasOccludees!==this.material.params.sceneHasOcludees&&(this.material.setParameterValues({sceneHasOcludees:e.hasOccludees}),this.updateParameters(e))}ensureParameters(e){0!==this.output&&7!==this.output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){e.bindProgram(this.technique.program),this.bindTexture(e,this.technique.program),this.bindTextureScale(e,this.technique.program),this.technique.bindPass(e,this.material.params,t)}getPipelineState(e,t){return this.technique.getPipelineState(t)}}const l={transparent:!1,writeDepth:!0,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,opacity:1,textureId:null,initTextureTransparent:!0,...a};export{c as ImageMaterial};
