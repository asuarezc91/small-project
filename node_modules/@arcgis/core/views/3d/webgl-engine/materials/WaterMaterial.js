/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{intersectTriangleGeometry as e}from"./internal/MaterialUtil.js";import{Material as t}from"../lib/Material.js";import{OITPolygonOffsetLimit as i}from"../lib/OrderIndependentTransparency.js";import{DefaultBufferWriter as a,PositionUVLayout as r}from"./internal/DefaultBufferWriter.js";import{WaterTechniqueConfiguration as n}from"./WaterTechnique.js";import{WaterGLMaterial as s}from"./WaterGLMaterial.js";import{AnimationTimer as o}from"../lib/AnimationTimer.js";import{defaultWaterMaterialParameters as h}from"./internal/waterMaterialUtils.js";class c extends t{constructor(e,t){super(t,e,h),this.animation=new o,this.techniqueConfig=new n}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.receiveShadows=this.params.receiveShadows,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.useSSR=this.params.ssrEnabled,this.techniqueConfig.isDraped=this.params.isDraped,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<i,this.techniqueConfig}update(e){const t=Math.min(e.camera.relativeElevation,e.camera.distance);return this.animation.enabled=Math.sqrt(this.params.waveTextureRepeat/this.params.waveStrength)*t<p,this.animation.advance(e.dt),this.animation.enabled}intersect(t,i,a,r,n,s,o){e(t,i,r,n,s,void 0,o)}getGLMaterial(e){if(0===e.output&&this.params.isDraped){const t=e;return t.output=5,new s(t)}switch(e.output){case 0:case 2:case 4:case 7:return new s(e)}}createBufferWriter(){return new a(r)}}const p=35e3;export{c as WaterMaterial};
