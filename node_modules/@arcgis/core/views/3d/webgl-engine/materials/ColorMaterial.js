/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../lib/GLMaterial.js";import{intersectTriangleGeometry as t}from"./internal/MaterialUtil.js";import{Material as i,materialParametersDefaults as s}from"../lib/Material.js";import{OITPolygonOffsetLimit as r}from"../lib/OrderIndependentTransparency.js";import{DefaultBufferWriter as a,PositionColorLayout as n}from"./internal/DefaultBufferWriter.js";import{ColorMaterialTechniqueConfiguration as u,ColorMaterialTechnique as h}from"../shaders/ColorMaterialTechnique.js";class o extends i{constructor(e,t){super(t,e,l),this.supportsEdges=!0,this.techniqueConfig=new u}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.vertexColors=this.params.vertexColors,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<r,this.techniqueConfig}getPassParameters(){return this.params}intersect(e,i,s,r,a,n,u){t(e,i,r,a,n,void 0,u)}getGLMaterial(e){return 0===e.output||7===e.output||4===e.output||1===e.output&&this.params.writeLinearDepth?new c(e):void 0}createBufferWriter(){return new a(n)}}class c extends e{constructor(e){super(e),this.updateParameters()}updateParameters(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(h,this.material.getTechniqueConfig(this.output,e),this.technique)}beginSlot(e){if(4===this.output)return 3===e;return e===(this.technique.configuration.transparent?this.technique.configuration.writeDepth?5:8:3)}_updateOccludeeState(e){e.hasOccludees!==this.material.params.sceneHasOcludees&&this.material.setParameterValues({sceneHasOcludees:e.hasOccludees})}ensureParameters(e){0!==this.output&&7!==this.output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.getPassParameters(),t)}getPipelineState(e,t){return this.technique.getPipelineState(t)}}const l={color:[1,1,1,1],transparent:!1,writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,...s};export{o as ColorMaterial};
