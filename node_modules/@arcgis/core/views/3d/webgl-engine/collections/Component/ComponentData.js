/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{slice as t}from"../../../../../core/typedArrayUtil.js";import{isNone as e}from"../../../../../core/maybe.js";import{AutoDisposable as i}from"../../lib/AutoDisposable.js";import{ComponentRangeRunLengthEncoded as s}from"./IndexRange/ComponentRangeRunLengthEncoded.js";export default class extends i{constructor(e,i){super(),this.pickability=null,this.highlightCounts=null,this.cachedGeometryRanges=null,this.cachedHighlightRanges=null,this.offsets=t(i);const h=this.count;this.visibility=new s(h),this.materialDataBuffer=e.getBuffer(h),this.materialDataIndices=new Uint16Array(h);for(let t=0;t<h;t++)this.materialDataIndices[t]=this.materialDataBuffer.acquireIndex()}dispose(){super.dispose();for(let t=0;t<this.count;t++)this.materialDataBuffer.releaseIndex(this.materialDataIndices[t])}get count(){return this.offsets.length-1}get geometryRanges(){return e(this.cachedGeometryRanges)&&(this.cachedGeometryRanges=this.visibility.computeOffsetRanges(this.offsets)),this.cachedGeometryRanges}get highlightRanges(){return e(this.highlightCounts)?null:(e(this.cachedHighlightRanges)&&(this.cachedHighlightRanges=function(t,e,i){const s=[];let h=i.length;e.forEachComponent((e=>(t[e]>0&&(h!==e-1&&(s.length&&s.push(i[h+1]-s[s.length-1]),s.push(i[e])),h=e),!0))),s.length&&s.push(i[h+1]-s[s.length-1]);return s}(this.highlightCounts,this.visibility,this.offsets)),this.cachedHighlightRanges)}highlightsDirty(){this.cachedHighlightRanges=null}visibilityDirty(){this.cachedGeometryRanges=null,this.cachedHighlightRanges=null}}
