/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{once as t}from"../../../../core/accessorSupport/utils.js";import s from"../../../../core/PerformanceSampler.js";import{startMeasurement as r}from"../../../webgl/Measurement.js";const i=["prepare","shadowmap","lineardepth","normals","ssao","opaque","opaque edges","transparent","transparent edges","hudvisibility","transparent terrain","atmosphere","laserline","occluded","antialiasing","highlights","hudOccluded","hudNotoccluded"];class a{constructor(){this.triangles=0,this.drawCalls=0}reset(){this.triangles=0,this.drawCalls=0}}function o(t,s,r){e(r)&&(r.drawCalls+=t,r.triangles+=s)}class n extends s{constructor(){super("total"),this.total=0,this.frameCount=0}}class l{constructor(){this._startTime=0,this._lastSample=0,this._enableGPUTimer=0,this.totalTime=new n,this.gpuTime=new s("gpu",9),this.renderPassTimings=i.map((e=>new s(e))),this.stats=new a}enableGPUTimer(){return++this._enableGPUTimer,{remove:t((()=>--this._enableGPUTimer))}}prerender(e){this._startTime=this._lastSample=performance.now(),this._enableGPUTimer&&(this._gpuTimer=r(e))}advance(e){const t=performance.now();this.renderPassTimings[e].record(t-this._lastSample),this._lastSample=t}postrender(){e(this._gpuTimer)&&(this._gpuTimer.stop((t=>e(t)&&this.gpuTime.record(t)),16),this._gpuTimer=null);const t=performance.now()-this._startTime;this.totalTime.record(t),this.totalTime.total+=t,this.totalTime.frameCount++}}export{a as RenderStats,n as RenderTime,l as RendererPerformanceInfo,o as addToRenderStats,i as performanceStatsCategories};
