/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as i}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as t,parameter as o}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as s}from"../lib/DefaultVertexAttributeLocations.js";import n from"../../../webgl/Program.js";import{defaultDepthWriteParams as a,makePipelineState as p,defaultColorWriteParams as l,simpleBlendingParams as d}from"../../../webgl/renderState.js";import{View as c}from"../core/shaderLibrary/util/View.glsl.js";import{Slice as h}from"../core/shaderLibrary/Slice.glsl.js";import{ScreenSizePerspective as u}from"../core/shaderLibrary/util/ScreenSizePerspective.glsl.js";import{HUD as g}from"../core/shaderLibrary/hud/HUD.glsl.js";import{HUDOcclusion as f}from"../core/shaderLibrary/hud/HUDOcclusionPass.glsl.js";import{OutputHighlight as m}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{VisualVariables as b}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{H as v,a as y}from"../../../../chunks/HUDMaterial.glsl.js";import{VerticalOffset as E}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{OITBlending as P}from"../lib/OrderIndependentTransparency.js";class O extends r{initializeProgram(e){const i=O.shader.get(),r=this.configuration,t=i.build({output:r.output,FrontFacePass:2===r.transparencyPassType,viewingMode:e.viewingMode,occlusionTestEnabled:r.occlusionTestEnabled,signedDistanceFieldEnabled:r.sdf,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!0,debugDrawBorder:r.debugDrawBorder,binaryHighlightOcclusionEnabled:r.binaryHighlightOcclusion,screenCenterOffsetUnitsEnabled:r.screenCenterOffsetUnitsEnabled,screenSizePerspectiveEnabled:r.screenSizePerspective,verticalOffsetEnabled:r.verticalOffset,pixelSnappingEnabled:r.pixelSnappingEnabled,vvSize:r.vvSize,vvColor:r.vvColor,vvInstancingEnabled:!1,isDraped:r.isDraped});return new n(e.rctx,t.generateSource("vertex"),t.generateSource("fragment"),s)}bindPass(e,i,r){c.bindProjectionMatrix(this.program,r.camera.projectionMatrix),this.program.setUniform1f("cameraGroundRelative",r.camera.aboveGround?1:-1),this.program.setUniform1f("perDistancePixelRatio",Math.tan(r.camera.fovY/2)/(r.camera.fullViewport[2]/2)),this.program.setUniformMatrix4fv("viewNormal",r.camera.viewInverseTransposeMatrix),this.program.setUniform1f("polygonOffset",i.shaderPolygonOffset),E.bindUniforms(this.program,i,r),u.bindUniforms(this.program,i),this.program.setUniform1f("pixelRatio",r.camera.pixelRatio||1),c.bindViewport(this.program,r),6===this.configuration.output?f.bindUniforms(this.program):(g.bindUniforms(this.program,r),v.bindUniforms(this.program,i,r.camera.pixelRatio||1),b.bindUniforms(this.program,i),this.configuration.occlusionTestEnabled&&g.bindVisibilityTexture(e,this.program,r)),4===this.configuration.output&&m.bindOutputHighlight(e,this.program,r)}bindDraw(e){c.bindView(this.program,e),c.bindCamPosition(this.program,e.origin,e.camera.viewInverseTransposeMatrix),h.bindUniformsWithOrigin(this.program,this.configuration,e)}setPipelineState(e){const i=this.configuration,r=3===e,t=2===e,o=this.configuration.polygonOffsetEnabled&&S,s=(r||t)&&4!==i.output?(i.depthEnabled||6===i.output)&&a:null;return p({blending:0===i.output||7===i.output||4===i.output?r?x:P(e):null,depthTest:{func:515},depthWrite:s,colorWrite:l,polygonOffset:o})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return 6===this.configuration.output?0:4}}O.shader=new i(y,(()=>import("./HUDMaterial.glsl.js")));const S={factor:0,units:-4},x=d(1,771);class j extends t{constructor(){super(...arguments),this.output=0,this.occlusionTestEnabled=!0,this.sdf=!1,this.vvSize=!1,this.vvColor=!1,this.verticalOffset=!1,this.screenSizePerspective=!1,this.screenCenterOffsetUnitsEnabled=0,this.debugDrawBorder=!0,this.binaryHighlightOcclusion=!0,this.slicePlaneEnabled=!1,this.polygonOffsetEnabled=!1,this.depthEnabled=!0,this.transparencyPassType=3,this.pixelSnappingEnabled=!0,this.isDraped=!1}}e([o({count:8})],j.prototype,"output",void 0),e([o()],j.prototype,"occlusionTestEnabled",void 0),e([o()],j.prototype,"sdf",void 0),e([o()],j.prototype,"vvSize",void 0),e([o()],j.prototype,"vvColor",void 0),e([o()],j.prototype,"verticalOffset",void 0),e([o()],j.prototype,"screenSizePerspective",void 0),e([o({count:2})],j.prototype,"screenCenterOffsetUnitsEnabled",void 0),e([o()],j.prototype,"debugDrawBorder",void 0),e([o()],j.prototype,"binaryHighlightOcclusion",void 0),e([o()],j.prototype,"slicePlaneEnabled",void 0),e([o()],j.prototype,"polygonOffsetEnabled",void 0),e([o()],j.prototype,"depthEnabled",void 0),e([o({count:4})],j.prototype,"transparencyPassType",void 0),e([o()],j.prototype,"pixelSnappingEnabled",void 0),e([o()],j.prototype,"isDraped",void 0);export{O as HUDMaterialTechnique,j as HUDMaterialTechniqueConfiguration};
