/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as o,parameter as i}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as s}from"../lib/DefaultVertexAttributeLocations.js";import n from"../../../webgl/Program.js";import{makePipelineState as a,defaultDepthWriteParams as p,defaultColorWriteParams as c,separateBlendingParams as l}from"../../../webgl/renderState.js";import{View as h}from"../core/shaderLibrary/util/View.glsl.js";import{OITBlending as f,OITDepthTest as m,OITDepthWrite as d}from"../lib/OrderIndependentTransparency.js";import{C as u}from"../../../../chunks/CheckerBoard.glsl.js";class g extends t{initializeProgram(e){const r=g.shader.get(),t=this.configuration,o=r.build({OITEnabled:0===t.transparencyPassType});return new n(e.rctx,o.generateSource("vertex"),o.generateSource("fragment"),s)}bindPass(e,r,t){h.bindProjectionMatrix(this.program,t.camera.projectionMatrix),this.program.setUniform2fv("size",r.size),this.program.setUniform4fv("color1",r.color1),this.program.setUniform4fv("color2",r.color2)}bindDraw(e){h.bindView(this.program,e)}setPipelineState(e){const r=this.configuration,t=3===e,o=2===e;return a({blending:r.transparent?t?b:f(e):null,depthTest:{func:m(e)},depthWrite:t?r.writeDepth&&p:d(e),colorWrite:c,polygonOffset:t||o?r.polygonOffset&&y:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}g.shader=new r(u,(()=>import("./CheckerBoard.glsl.js")));const y={factor:0,units:-25},b=l(770,1,771,771);class j extends o{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3}}e([i()],j.prototype,"transparent",void 0),e([i()],j.prototype,"writeDepth",void 0),e([i()],j.prototype,"polygonOffset",void 0),e([i({count:4})],j.prototype,"transparencyPassType",void 0);export{g as CheckerBoardTechnique,j as CheckerBoardTechniqueConfiguration};
