/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{f as t}from"../../../../chunks/vec3f64.js";import{ReloadableShaderModule as i}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as o,parameter as s}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as a}from"../lib/DefaultVertexAttributeLocations.js";import n from"../../../webgl/Program.js";import{makePipelineState as l,defaultDepthWriteParams as c,defaultColorWriteParams as p}from"../../../webgl/renderState.js";import{View as u}from"../core/shaderLibrary/util/View.glsl.js";import{colorMixModes as h,bindScreenSizePerspective as d}from"../materials/internal/MaterialUtil.js";import{Slice as m}from"../core/shaderLibrary/Slice.glsl.js";import{OutputHighlight as f}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{VisualVariables as g}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{VerticalOffset as v}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{blendingDefault as b,OITBlending as y,OITDepthTest as x,getOITPolygonOffset as T}from"../lib/OrderIndependentTransparency.js";import{stencilWriteMaskOn as P,stencilToolMaskBaseParams as M,stencilBaseAllZerosParams as S}from"../lib/StencilUtils.js";import{ReadShadowMap as O}from"../core/shaderLibrary/shading/ReadShadowMap.glsl.js";import{doublePrecisionRequiresObfuscation as C}from"../core/shaderLibrary/util/DoublePrecision.glsl.js";import{InstancedDoublePrecision as D}from"../core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js";import{PhysicallyBasedRenderingParameters as w}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{D as j}from"../../../../chunks/DefaultMaterial.glsl.js";class A extends r{initializeProgram(e){const t=A.shader.get(),i=this.configuration,r=t.build({OITEnabled:0===i.transparencyPassType,output:i.output,viewingMode:e.viewingMode,receiveShadows:i.receiveShadows,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:i.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,symbolColor:i.symbolColors,vvSize:i.vvSize,vvColor:i.vvColor,vvInstancingEnabled:!0,instanced:i.instanced,instancedColor:i.instancedColor,instancedDoublePrecision:i.instancedDoublePrecision,useOldSceneLightInterface:!1,pbrMode:i.usePBR?i.isSchematic?2:1:0,hasMetalnessAndRoughnessTexture:i.hasMetalnessAndRoughnessTexture,hasEmissionTexture:i.hasEmissionTexture,hasOcclusionTexture:i.hasOcclusionTexture,hasNormalTexture:i.hasNormalTexture,hasColorTexture:i.hasColorTexture,receiveAmbientOcclusion:i.receiveAmbientOcclusion,useCustomDTRExponentForWater:!1,normalType:i.normalsTypeDerivate?3:0,doubleSidedMode:i.doubleSidedMode,vertexTangets:i.vertexTangents,attributeTextureCoordinates:i.hasMetalnessAndRoughnessTexture||i.hasEmissionTexture||i.hasOcclusionTexture||i.hasNormalTexture||i.hasColorTexture?1:0,textureAlphaPremultiplied:i.textureAlphaPremultiplied,attributeColor:i.vertexColors,screenSizePerspectiveEnabled:i.screenSizePerspective,verticalOffsetEnabled:i.verticalOffset,offsetBackfaces:i.offsetBackfaces,doublePrecisionRequiresObfuscation:C(e.rctx),alphaDiscardMode:i.alphaDiscardMode,supportsTextureAtlas:!1});return new n(e.rctx,r.generateSource("vertex"),r.generateSource("fragment"),a)}bindPass(e,t,i){u.bindProjectionMatrix(this.program,i.camera.projectionMatrix);const r=this.configuration.output;7===r&&(this.program.setUniform1f("opacity",t.opacity),this.program.setUniform1f("layerOpacity",t.layerOpacity),this.program.setUniform4fv("externalColor",t.externalColor),this.program.setUniform1i("colorMixMode",h[t.colorMixMode])),0===r?(i.lighting.setUniforms(this.program,!1),this.program.setUniform3fv("ambient",t.ambient),this.program.setUniform3fv("diffuse",t.diffuse),this.program.setUniform4fv("externalColor",t.externalColor),this.program.setUniform1i("colorMixMode",h[t.colorMixMode]),this.program.setUniform1f("opacity",t.opacity),this.program.setUniform1f("layerOpacity",t.layerOpacity),this.configuration.usePBR&&w.bindUniforms(this.program,t,this.configuration.isSchematic)):1===r||3===r?this.program.setUniform2fv("nearFar",i.camera.nearFar):4===r&&f.bindOutputHighlight(e,this.program,i),g.bindUniformsForSymbols(this.program,t),v.bindUniforms(this.program,t,i),d(t.screenSizePerspective,this.program,"screenSizePerspectiveAlignment"),2!==t.textureAlphaMode&&3!==t.textureAlphaMode||this.program.setUniform1f("textureAlphaCutoff",t.textureAlphaCutoff)}bindDraw(e){const i=this.configuration.instancedDoublePrecision?t(e.camera.viewInverseTransposeMatrix[3],e.camera.viewInverseTransposeMatrix[7],e.camera.viewInverseTransposeMatrix[11]):e.origin;u.bindViewCustomOrigin(this.program,i,e.camera.viewMatrix),(0===this.configuration.output||7===this.configuration.output||1===this.configuration.output&&this.configuration.screenSizePerspective||2===this.configuration.output&&this.configuration.screenSizePerspective||4===this.configuration.output&&this.configuration.screenSizePerspective)&&u.bindCamPosition(this.program,i,e.camera.viewInverseTransposeMatrix),2===this.configuration.output&&this.program.setUniformMatrix4fv("viewNormal",e.camera.viewInverseTransposeMatrix),this.configuration.instancedDoublePrecision&&D.bindCustomOrigin(this.program,i),m.bindUniforms(this.program,this.configuration,e.slicePlane,i),0===this.configuration.output&&O.bindViewCustomOrigin(this.program,e,i)}setPipeline(e,t){const i=this.configuration,r=3===e,o=2===e;return l({blending:0!==i.output&&7!==i.output||!i.transparent?null:r?b:y(e),culling:U(i),depthTest:{func:x(e)},depthWrite:r||o?i.writeDepth&&c:null,colorWrite:p,stencilWrite:i.sceneHasOcludees?P:null,stencilTest:i.sceneHasOcludees?t?M:S:null,polygonOffset:r||o?null:T(i.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this.setPipeline(this.configuration.transparencyPassType,!0),this.setPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e){return e?this._occludeePipelineState:this.pipeline}}A.shader=new i(j,(()=>import("./DefaultMaterial.glsl.js")));const U=e=>function(e){return e.cullFace?0!==e.cullFace:!e.slicePlaneEnabled&&!e.transparent&&!e.doubleSidedMode}(e)&&{face:1===e.cullFace?1028:1029,mode:2305};class E extends o{constructor(){super(...arguments),this.output=0,this.alphaDiscardMode=1,this.doubleSidedMode=0,this.isSchematic=!1,this.vertexColors=!1,this.offsetBackfaces=!1,this.symbolColors=!1,this.vvSize=!1,this.vvColor=!1,this.verticalOffset=!1,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.sliceHighlightDisabled=!1,this.receiveAmbientOcclusion=!1,this.screenSizePerspective=!1,this.textureAlphaPremultiplied=!1,this.hasColorTexture=!1,this.usePBR=!1,this.hasMetalnessAndRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.instanced=!1,this.instancedColor=!1,this.instancedDoublePrecision=!1,this.vertexTangents=!1,this.normalsTypeDerivate=!1,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparent=!1,this.enableOffset=!0,this.cullFace=0,this.transparencyPassType=3}}e([s({count:8})],E.prototype,"output",void 0),e([s({count:4})],E.prototype,"alphaDiscardMode",void 0),e([s({count:3})],E.prototype,"doubleSidedMode",void 0),e([s()],E.prototype,"isSchematic",void 0),e([s()],E.prototype,"vertexColors",void 0),e([s()],E.prototype,"offsetBackfaces",void 0),e([s()],E.prototype,"symbolColors",void 0),e([s()],E.prototype,"vvSize",void 0),e([s()],E.prototype,"vvColor",void 0),e([s()],E.prototype,"verticalOffset",void 0),e([s()],E.prototype,"receiveShadows",void 0),e([s()],E.prototype,"slicePlaneEnabled",void 0),e([s()],E.prototype,"sliceHighlightDisabled",void 0),e([s()],E.prototype,"receiveAmbientOcclusion",void 0),e([s()],E.prototype,"screenSizePerspective",void 0),e([s()],E.prototype,"textureAlphaPremultiplied",void 0),e([s()],E.prototype,"hasColorTexture",void 0),e([s()],E.prototype,"usePBR",void 0),e([s()],E.prototype,"hasMetalnessAndRoughnessTexture",void 0),e([s()],E.prototype,"hasEmissionTexture",void 0),e([s()],E.prototype,"hasOcclusionTexture",void 0),e([s()],E.prototype,"hasNormalTexture",void 0),e([s()],E.prototype,"instanced",void 0),e([s()],E.prototype,"instancedColor",void 0),e([s()],E.prototype,"instancedDoublePrecision",void 0),e([s()],E.prototype,"vertexTangents",void 0),e([s()],E.prototype,"normalsTypeDerivate",void 0),e([s()],E.prototype,"writeDepth",void 0),e([s()],E.prototype,"sceneHasOcludees",void 0),e([s()],E.prototype,"transparent",void 0),e([s()],E.prototype,"enableOffset",void 0),e([s({count:3})],E.prototype,"cullFace",void 0),e([s({count:4})],E.prototype,"transparencyPassType",void 0);export{A as DefaultMaterialTechnique,E as DefaultMaterialTechniqueConfiguration};
