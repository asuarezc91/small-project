/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{a as r}from"../../../../chunks/vec4f64.js";import{ReloadableShaderModule as i}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as o,parameter as s}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import n from"../../../webgl/Program.js";import{makePipelineState as a,defaultDepthWriteParams as l,defaultColorWriteParams as d}from"../../../webgl/renderState.js";import{View as c}from"../core/shaderLibrary/util/View.glsl.js";import{Slice as p}from"../core/shaderLibrary/Slice.glsl.js";import{blendingDefault as h,OITBlending as g,OITDepthWrite as m,OITPolygonOffset as u}from"../lib/OrderIndependentTransparency.js";import{ScreenSizeScaling as b}from"../core/shaderLibrary/ScreenSizeScaling.glsl.js";import{S as f}from"../../../../chunks/ShadedColorMaterial.glsl.js";class y extends t{initializeProgram(e){const r=y.shader.get(),i=this.configuration,t=r.build({output:i.output,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:i.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,screenSizeEnabled:i.screenSizeEnabled,shadingEnabled:i.shadingEnabled,OITEnabled:0===i.transparencyPassType});return new n(e.rctx,t.generateSource("vertex"),t.generateSource("fragment"),P)}bindPass(e,r,i){const{screenSizeEnabled:t,shadingEnabled:o}=this.configuration,{color:s,shadingTint:n,shadingDirection:a}=r;c.bindProjectionMatrix(this.program,i.camera.projectionMatrix),this.program.setUniform4fv("color",s),o&&(this.program.setUniform4fv("shadedColor",this.blendColor(E,n,s)),this.program.setUniform3fv("shadingDirection",a),this.program.setUniformMatrix4fv("viewNormal",i.camera.viewInverseTransposeMatrix)),t&&b.bindPassUniforms(this.program,r,i)}blendColor(e,r,i){const t=1-r[3],o=r[3]+i[3]*t;return 0===o?(e[3]=o,e):(e[0]=(r[0]*r[3]+i[0]*i[3]*t)/o,e[1]=(r[1]*r[3]+i[1]*i[3]*t)/o,e[2]=(r[2]*r[3]+i[2]*i[3]*t)/o,e[3]=i[3],e)}bindDraw(e){c.bindView(this.program,e),c.bindCamPosition(this.program,e.origin,e.camera.viewInverseTransposeMatrix),p.bindUniformsWithOrigin(this.program,this.configuration,e)}setPipelineState(e){const r=this.configuration,i=3===e,t=2===e;return a({blending:0!==r.output&&7!==r.output||!r.transparent?null:i?h:g(e),culling:(o=r.cullFace,0!==o&&{face:1===o?1028:1029,mode:2305}),depthTest:{func:t?513:r.shadingEnabled?515:513},depthWrite:i?r.writeDepth&&l:m(e),colorWrite:d,polygonOffset:i||t?null:u});var o}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}y.shader=new i(f,(()=>import("./ShadedColorMaterial.glsl.js")));class S extends o{constructor(){super(...arguments),this.output=0,this.cullFace=0,this.slicePlaneEnabled=!1,this.sliceHighlightDisabled=!1,this.transparent=!1,this.writeDepth=!0,this.screenSizeEnabled=!0,this.shadingEnabled=!0,this.transparencyPassType=3}}e([s({count:8})],S.prototype,"output",void 0),e([s({count:3})],S.prototype,"cullFace",void 0),e([s()],S.prototype,"slicePlaneEnabled",void 0),e([s()],S.prototype,"sliceHighlightDisabled",void 0),e([s()],S.prototype,"transparent",void 0),e([s()],S.prototype,"writeDepth",void 0),e([s()],S.prototype,"screenSizeEnabled",void 0),e([s()],S.prototype,"shadingEnabled",void 0),e([s({count:4})],S.prototype,"transparencyPassType",void 0);const v={POSITION:"position",NORMAL:"normal",OFFSET:"offset"},P={position:0,normal:1,offset:2},E=r();export{y as ShadedColorMaterialTechnique,S as ShadedColorMaterialTechniqueConfiguration,v as ShadedColorMaterialVertexAttrConstants,P as ShadedColorMaterialVertexAttrLocations};
