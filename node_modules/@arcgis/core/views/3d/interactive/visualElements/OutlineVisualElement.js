/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e,unwrap as t,isNone as r}from"../../../../core/maybe.js";import s from"../../../../core/Evented.js";import{c as i}from"../../../../chunks/vec3f64.js";import{s as a,b as n,a as o}from"../../../../chunks/vec3.js";import{projectBuffer as l}from"../../../../geometry/projection.js";import{g as h,c}from"../../../../chunks/vec4.js";import{empty as d,expandWithBuffer as u,create as m}from"../../../../geometry/support/aaBoundingBox.js";import{makeDehydratedPoint as p}from"../../../../layers/graphics/dehydratedFeatures.js";import{computeAttachmentOriginLines as f}from"../../webgl-engine/lib/geometryDataUtils.js";import{ElevationContext as g}from"../../layers/graphics/ElevationContext.js";import _ from"../../webgl-engine/lib/Geometry.js";import{RibbonVertexAttributeConstants as y}from"../../webgl-engine/shaders/RibbonLineTechnique.js";import{RibbonLineMaterial as v}from"../../webgl-engine/materials/RibbonLineMaterial.js";import O from"../../webgl-engine/lib/RenderGeometry.js";import{geometryToRenderInfoDraped as w,createGeometryData as R,geometryToRenderInfo as b}from"../../layers/graphics/lineUtils.js";import{f as C,a as D}from"../../../../chunks/vec4f32.js";import{LaserlineVisualElement as j}from"./LaserlineVisualElement.js";import{VisualElementResources as E}from"./VisualElementResources.js";import{DrapedVisualElementResources as P}from"./DrapedVisualElementResources.js";class G{constructor(e){this.view=null,this._attachmentOrigin=p(0,0,0,null),this._attachmentOriginDirty=!0,this.events=new s,this._isDraped=!1,this._geometry=null,this._width=1,this._color=C(1,0,1,1),this._innerWidth=0,this._innerColor=C(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._elevationInfo=null,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=8,this.resources=new E({view:e.view,createResources:e=>this.createResources(e),recreateGeometry:(e,t)=>(e.geometries.length=0,this.recreateGeometry(t,e.material,e.geometries),e.geometries)}),this._attachmentOrigin.spatialReference=e.view.spatialReference,this.drapedResources=new P({view:e.view,createResources:()=>this.createDrapedResources(),recreateGeometry:e=>{e.geometries=this.createRenderGeometriesDraped(e.material),this.attachmentOriginChanged()}});let t=!0;this._laserline=new j({view:e.view});for(const r in e)r in this?"attached"===r?t=e[r]:this[r]=e[r]:console.error("Cannot set unknown property",r);this.attached=t}destroy(){this.resources.destroy(),this.drapedResources.destroy(),this._laserline.destroy()}get isDraped(){return this._isDraped}set isDraped(e){e!==this._isDraped&&(this._isDraped=e,this.updateAttached(this.attached),this._laserline.attached=this.laserlineAttached)}get laserlineAttached(){return this.attached&&this.visible&&e(this._laserlineStyle)&&!this.isDraped&&this.laserlineEnabled}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e,this.drapedResources.visible=e,this._laserline.attached=this.laserlineAttached}get attached(){return this.resources.attached||this.drapedResources.attached}set attached(e){this.updateAttached(e)}updateAttached(e){this.resources.attached=!this.isDraped&&e,this.drapedResources.attached=this.isDraped&&e,this._laserline.attached=this.laserlineAttached,this.attached&&this.attachmentOriginChanged()}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry(),this.drapedResources.recreateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this.updateMaterial())}get color(){return this._color}set color(e){h(e,this._color)||(c(this._color,e),this.updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this.updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){h(e,this._innerColor)||(c(this._innerColor,e),this.updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(t){const r=e(t)!==e(this._stipplePattern);this._stipplePattern=t,r?this.resources.recreate():this.updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){e&&this._stippleOffColor&&h(e,this._stippleOffColor)||(this._stippleOffColor=e?D(e):null,this.updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this.updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources.recreateGeometry()}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(t){this._laserlineStyle=t,this._laserline.attached=this.laserlineAttached,e(t)&&(this._laserline.style=t)}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this.laserlineAttached)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get attachmentOrigin(){if(!this._attachmentOriginDirty)return this._attachmentOrigin;const r=e(this.resources.resources)?this.resources.resources.geometries:null;if(!r||0===r.length)return null;a(I,0,0,0);const s=y.POSITION;let i=0;for(const e of r){const r=e.getAttribute(s),a=e.getIndices(s),o=t(this.resources.resources).material.isClosed(r.data,a);f(r,a,o,M)&&(n(I,I,M),i++)}return 0===i?null:(o(I,I,1/i),this.view.renderCoordsHelper.fromRenderCoords(I,this._attachmentOrigin),this._attachmentOriginDirty=!1,this._attachmentOrigin)}updateMaterial(){e(this.resources.resources)&&this.resources.resources.material.setParameterValues(this.materialParameters),e(this.drapedResources.resources)&&this.drapedResources.resources.material.setParameterValues(this.materialParameters)}get isClosed(){return e(this.geometry)&&"polygon"===this.geometry.type}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,isClosed:this.isClosed,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,join:"round",stippleIntegerRepeats:!0,polygonOffset:!0,renderOccluded:this.normalizedRenderOccluded}}get normalizedRenderOccluded(){return this.isDraped&&8===this._renderOccluded?4:this._renderOccluded}recreateGeometry(e,t,r){const s=this.createRenderGeometries();for(const i of s)e.addGeometry(i,t),r.push(i);this.attachmentOriginChanged()}attachmentOriginChanged(){this._attachmentOriginDirty=!0,this.events.emit("attachment-origin-changed")}createResources(e){const t=new v(this.materialParameters,"lineVisualElement"),r=[];return this.recreateGeometry(e,t,r),{material:t,geometries:r,forEach:e=>{e(t),r.forEach(e)}}}createDrapedResources(){const e=new v(this.materialParameters,"lineVisualElement");return{material:e,geometries:this.createRenderGeometriesDraped(e)}}createRenderGeometriesDraped(e){const t=this.geometry;if(r(t))return[];const s=w(t,this.view.basemapTerrain.spatialReference),i=[];for(const{position:t}of s.lines){const r={attributeData:{position:t},removeDuplicateStartEnd:this.isClosed?1:0},s=new O(R(r));s.material=e;const n=d(A);u(n,t),a(s.center,.5*(n[0]+n[3]),.5*(n[1]+n[4]),0),s.bsRadius=.5*Math.sqrt((n[3]-n[0])*(n[3]-n[0])+(n[4]-n[1])*(n[4]-n[1])),i.push(s)}return i}calculateMapBounds(e){if(r(this.resources.resources))return!1;const t=this.view.renderCoordsHelper;for(const r of this.resources.resources.geometries){const s=r.data.getAttribute("position"),i=s.data,a=new Float64Array(i.length);l(s.data,t.spatialReference,0,a,this.view.spatialReference,0,i.length/3),u(e,a)}return!0}createRenderGeometries(){const e=this.geometry;if(r(e))return[];const t=b(e,this.view.elevationProvider,this.view.renderCoordsHelper,g.fromElevationInfo(this.elevationInfo)),s=[],i=[];for(const{position:e,mapPosition:r}of t.lines){const t={attributeData:{position:e,mapPosition:r},removeDuplicateStartEnd:this.isClosed?1:0},a=R(t);s.push(new _(a,"geometryOutlineVisualElement")),i.push(e)}return this._laserline.pathVerticalPlane=i,s}}const A=m(),M=i(),I=i();export{G as OutlineVisualElement};
