/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{c as t}from"../../../../../chunks/vec3f64.js";import{e,g as s,f as r}from"../../../../../chunks/vec3.js";import{slerp as i}from"../../../support/mathUtils.js";import{getSphericalPCPF as o}from"../../../../../geometry/projectionEllipsoid.js";import{canProjectWithoutEngine as n,projectVectorToVector as p}from"../../../../../geometry/projection.js";import{sv3d as c}from"../../../support/stack.js";class a{constructor(e=t(),s=t()){this.startRenderSpace=e,this.endRenderSpace=s,this.type="euclidean"}eval(t,s){return e(s,this.startRenderSpace,this.endRenderSpace,t)}createRenderGeometry(t,e){const s=[],i=[],o=(e,o)=>{const n=m;r(n,e,t),s.push([n[0],n[1],n[2]]),i.push([o[0],o[1],o[2]])},n=e.worldUpAtPosition(this.eval(.5,d),c.get());return o(this.startRenderSpace,n),o(this.endRenderSpace,n),{points:s,normals:i}}}class h{constructor(e,s,r){this.startRenderSpace=e,this.endRenderSpace=s,this.renderSpatialReference=r,this.type="geodesic",this._start=t(),this._end=t(),this._pcpf=o(r),this._project=n(r,this._pcpf),this._projectIn(e,this._start),this._projectIn(s,this._end)}_projectIn(t,e){this._project?p(t,this.renderSpatialReference,e,this._pcpf):s(e,t)}eval(t,s){return this._project?(i(this._start,this._end,t,s),p(s,this._pcpf,s,this.renderSpatialReference)):e(s,this._start,this._end,t),s}createRenderGeometry(t,e){const s=[],i=[],o=(e,o)=>{const n=l;r(n,e,t),s.push([n[0],n[1],n[2]]),i.push([o[0],o[1],o[2]])};for(let t=0;t<128;++t){const s=t/127,r=d,i=m;this.eval(s,r),e.worldUpAtPosition(r,i),o(r,i)}return{points:s,normals:i}}}const d=t(),m=t(),l=t();export{a as EuclideanSegment,h as GeodesicSegment};
