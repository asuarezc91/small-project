/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as e}from"../../../../core/maybe.js";import{c as t}from"../../../../chunks/vec3f64.js";import{s as r}from"../../../../chunks/vec3.js";import{g as i,c as s}from"../../../../chunks/vec4.js";import a from"../../webgl-engine/lib/GeometryUtil.js";import{ElevationContext as o}from"../../layers/graphics/ElevationContext.js";import l from"../../webgl-engine/lib/Geometry.js";import{geometryToRenderInfo as n}from"../../layers/graphics/pointUtils.js";import{Object3DVisualElement as u}from"./Object3DVisualElement.js";import{ShadedColorMaterialVertexAttrConstants as c}from"../../webgl-engine/shaders/ShadedColorMaterialTechnique.js";import{ShadedColorMaterial as h}from"../../webgl-engine/materials/ShadedColorMaterial.js";import{settings as d}from"../editingTools/settings.js";class m extends u{constructor(e){super(e),this.view=null,this._renderOccluded=4,this._vertices=null,this._spatialReference=null,this._color=d.colorToVec4(d.reshapeManipulators.vertex.color),this._size=d.reshapeManipulators.vertex.size,this._outlineColor=d.colorToVec4(d.reshapeManipulators.vertex.outlineColor),this._outlineSize=d.reshapeManipulators.vertex.outlineSize,this._elevationInfo=null,this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial(),this.updateOutlineMaterial())}get vertices(){return this._vertices}set vertices(e){this._vertices=e,this.recreateGeometry()}get spatialReference(){return this._spatialReference}set spatialReference(e){this._spatialReference=e,this.recreateGeometry()}get color(){return this._color}set color(e){i(e,this._color)||(s(this._color,e),this.updateMaterial())}get size(){return this._size}set size(e){e!==this._size&&(this._size=e,this.updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){i(e,this._outlineColor)||(s(this._outlineColor,e),this.updateOutlineMaterial())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this.updateOutlineMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.recreateGeometry()}get vertexMaterialParameters(){return{color:this._color,transparent:this._color[3]<1,screenSize:this.size,renderOccluded:this._renderOccluded}}get vertexOutlineMaterialParameters(){return{color:this._outlineColor,transparent:this._outlineColor[3]<1,screenSize:this.size+2*this.outlineSize,renderOccluded:this._renderOccluded}}updateMaterial(){this.attached&&this.vertexMaterial.setParameterValues(this.vertexMaterialParameters)}updateOutlineMaterial(){this.attached&&this.vertexOutlineMaterial.setParameterValues(this.vertexOutlineMaterialParameters)}createRenderGeometries(){const t=this.vertices;if(e(t)||0===t.length)return[];const i=n(t,this.spatialReference,this.view.elevationProvider,this.view.renderCoordsHelper,o.fromElevationInfo(this.elevationInfo)),s=[],a=i.numVertices,u=i.position;for(let e=0;e<a;++e){const t=r(p,u[3*e+0],u[3*e+1],u[3*e+2]),i=new l(v(.5,16,16,t),"VerticesVisualElement-vertex"),a=new l(v(.5,16,16,t),"VerticesVisualElement-vertexOutline");s.push({vertexGeometry:i,vertexOutlineGeometry:a})}return s}createGeometries(e){const t=this.createRenderGeometries();for(const{vertexGeometry:r,vertexOutlineGeometry:i}of t)e.addGeometry(r,this.vertexMaterial),e.addGeometry(i,this.vertexOutlineMaterial)}createExternalResources(){this.vertexMaterial=new h({...this.vertexMaterialParameters,writeDepth:!0,cullFace:2,screenSizeEnabled:!0},"manipulator"),this.vertexOutlineMaterial=new h({...this.vertexOutlineMaterialParameters,transparent:!0,writeDepth:!0,cullFace:1,screenSizeEnabled:!0,shadingEnabled:!1},"manipulator-outline")}destroyExternalResources(){this.vertexMaterial=null,this.vertexOutlineMaterial=null}forEachExternalResource(e){e(this.vertexMaterial),e(this.vertexOutlineMaterial)}}const p=t();function v(e,t,r,i){const s=a.createSphereGeometry(e,t,r,{attributes:{position:c.OFFSET,uv:null}});return s.indices[c.POSITION]=new Uint32Array(s.indexCount),s.vertexAttributes[c.POSITION]={size:3,data:Float64Array.from(i),offsetIdx:0,strideIdx:3},s}export{m as VerticesVisualElement};
