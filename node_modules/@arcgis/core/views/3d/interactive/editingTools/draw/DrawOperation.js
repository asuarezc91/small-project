/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import"../../../../../core/has.js";import{unwrapOr as t,unwrap as i,isSome as r,isNone as n}from"../../../../../core/maybe.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../../../core/accessorSupport/decorators/subclass.js";import"../../../../../core/urlUtils.js";import"../../../../../core/uuid.js";import"../../../../../portal/support/resourceExtension.js";import a from"../../../../../geometry/Point.js";import"../../../../../geometry.js";import o from"../../../../../core/Evented.js";import{createScreenPoint as p}from"../../../../../core/screenUtils.js";import c from"../../../../../core/Handles.js";import{watch as h}from"../../../../../core/watchUtils.js";import{createCoordinateHelper as d}from"../coordinateHelper.js";import{DrawManipulator as l}from"./DrawManipulator.js";import{ElevationDrawSurface as m}from"./drawSurfaces.js";import{EditGeometry as g,Component as u}from"../editGeometry/EditGeometry.js";import{EditGeometryHelper as y}from"../editGeometry/EditGeometryHelper.js";import{defaultDrawingMode as _}from"../../../../draw/DrawingMode.js";import{createManipulatorDragEventPipeline as v}from"../../../../interactive/dragEventPipeline.js";import{SnappingContext as x}from"../../../../interactive/snapping/SnappingAlgorithm.js";import{SnappingEngine as f}from"../../../../interactive/snapping/SnappingEngine.js";let w=class extends o{constructor(e){super(),this._manipulator=null,this._stagedVertex=null,this.geometryType=null,this.elevationInfo=null,this.snapToSceneEnabled=null,this._handles=new c,this._defaultZ=0,this._elevationDrawSurface=null,this._snappingDrawSurface=null,this._snappingEnabled=!1,this._createOperationCompleted=!1,this._pointerDownStates=new Set,this.view=e.view,this.drawingMode=t(e.drawingMode,_),this.geometryType=e.geometryType,this.elevationInfo=e.elevationInfo,this.coordinateHelper=d(e.hasZ,e.hasM,this.view.spatialReference,this.view.viewingMode),this._defaultZ=e.defaultZ,this.snapToSceneEnabled=e.snapToSceneEnabled,this.snappingEngine=new f(e.snappingOptions),this._snappingEnabled=e.snappingOptions.selfEnabled,this._handles.add(h(e.snappingOptions,"selfEnabled",(()=>{this._snappingEnabled=e.snappingOptions.selfEnabled}))),this._snappingDrawSurface=i(e.snappingDrawSurface),this._elevationDrawSurface=new m(this.elevationInfo,this._defaultZ,this.view),this._editGeometry=new y(new g(this.coordinateHelper),"segment"===this.geometryType?"polyline":this.geometryType),this._activeComponent=new u(this._editGeometry.data),this._editGeometry.data.components.push(this._activeComponent),this._editGeometry.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.toArray(e.pos)}))),i=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":this.emit(e.type,{...e,added:i,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:i,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:i,vertices:t})}})),this._manipulator=new l({grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size}),e.manipulators.add(this._manipulator),this._manipulator.grabbable="point"!==this.geometryType;const n=this.createManipulatorDragPipeline(this._manipulator),s=this._manipulator.events.on("immediate-double-click",(e=>{this._manipulator.dragging||"point"!==this.geometryType&&(this.complete(),e.stopPropagation())})),a=this._manipulator.events.on("immediate-click",(e=>{if(this._manipulator.dragging)return;const t=this._activeComponent,i=this._closeOnClickVertexIndex(e.screenPoint);if(r(i))this.discardStagedVertex(),this.complete();else{const i=this._screenToMap(e.screenPoint);if(r(i))switch(this.drawingMode){case"freehand":break;case"click":case"hybrid":this.hasStagedVertex?this.commitStagedVertex():this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(i)),("point"===this.geometryType||"segment"===this.geometryType&&2===t.vertices.length||"segment"===this.geometryType&&"hybrid"===this.drawingMode&&1===t.vertices.length)&&this.complete()}}e.stopPropagation()}));this._handles.add([n,a,s])}get isCompleted(){return this._createOperationCompleted}createManipulatorDragPipeline(e){switch(this.drawingMode){case"click":return this.createManipulatorDragPipelineClick(e);case"freehand":return this.createManipulatorDragPipelineFreehand(e);case"hybrid":return this.createManipulatorDragPipelineHybrid(e)}}createManipulatorDragPipelineClick(e){return v(e,((e,t,r,n)=>{const s="touch"===n&&this._snappingEnabled;if(this.isCompleted||!s)return;let a=null;t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||s&&0===this.vertices.length)&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":"start"===e.action&&s&&(a=new x(this._editGeometry,this.view,this.elevationInfo,n)),s&&(this.stagedVertex=this.snappingEngine.snap(e.mapEnd,i(a)));break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete(),s&&(this.commitStagedVertex(),this.snappingEngine.doneSnapping())}return e})),r.next((()=>{s&&this.snappingEngine.doneSnapping()}))}))}createManipulatorDragPipelineFreehand(e){return v(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))}createManipulatorDragPipelineHybrid(e){return v(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))}destroy(){this._handles.destroy(),this._handles=null}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":{if(this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return;const t=p(e.x,e.y),i=this._closeOnClickVertexIndex(t);if(r(i)){this.discardStagedVertex();const e={componentIndex:0,vertexIndex:i,coordinates:this.coordinateHelper.toArray(this._activeComponent.vertices[i].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}else{const i=this._screenToMap(t);r(i)?(this.stagedVertex=this.snappingEngine.snap(i,new x(this._editGeometry,this.view,this.elevationInfo,e.pointerType)),this._manipulator.cursor="crosshair"):this._manipulator.cursor=null}e.stopPropagation();break}case"hold":"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()}}get canRedo(){return this._editGeometry.canRedo}redo(){this._editGeometry.redo()}get canUndo(){return this._editGeometry.canUndo}undo(){this.snappingEngine.doneSnapping(),this._editGeometry.undo()}complete(e=!1){this.commitStagedVertex(),this._createOperationCompleted=!0,this.snappingEngine.doneSnapping(),this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:e,type:"complete"})}cancel(){this.complete(!0)}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get numVertices(){return r(this._stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}get numCommittedVertices(){return this._activeComponent.vertices.length}get vertices(){const e=this._activeComponent.vertices.map((e=>this.coordinateHelper.toArray(e.pos)));return r(this._stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this._stagedVertex)),e}get spatialReference(){return this.view.spatialReference}get hasStagedVertex(){return r(this._stagedVertex)}get stagedVertex(){return this._stagedVertex}set stagedVertex(e){if(n(e))return void this.discardStagedVertex();this._stagedVertex=e;const t={componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)};this.emit("cursor-update",{updated:null,vertices:[t],operation:"apply",type:"vertex-update"})}commitStagedVertex(){if(r(this._stagedVertex)){const e=this._stagedVertex;this._stagedVertex=null,this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(e))}}discardStagedVertex(){this._stagedVertex=null}_screenToMapDragEventStep(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),n(e))return null;const i=this._screenToMap(t.screenEnd);return r(i)?{...t,mapStart:e,mapEnd:i}:null}}_screenToMap(e){return this._getDrawSurface().screenToMap(e)}_mapToScreen(e){return this._getDrawSurface().mapToScreen(e)}_getDrawSurface(){let e=null;if(this.coordinateHelper.hasZ){let t=this._defaultZ,i=!1;r(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(i=!0),r(this.snapToSceneEnabled)&&(i=this.snapToSceneEnabled),r(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(i=!1);const n=this._activeComponent.vertices.length;("segment"===this.geometryType||"polygon"===this.geometryType)&&n>0&&(t=this.coordinateHelper.zFromArray(this._activeComponent.vertices[0].pos),i=!1),i?e=this._snappingDrawSurface:(this._elevationDrawSurface.defaultZ=t,e=this._elevationDrawSurface)}else this._elevationDrawSurface.defaultZ=null,e=this._elevationDrawSurface;return e}_vertexWithinPointerDistance(e,t){const i=this._mapToScreen(e);return!!r(i)&&function(e,t,i){const r=e.x-t.x,n=e.y-t.y;return r*r+n*n<=i}(i,t,25)}_closeOnClickVertexIndex(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[0].pos,S),e))return 0;if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[t.vertices.length-1].pos,S),e))return t.vertices.length-1}return null}};w=e([s("esri.views.3d.interactive.editingTools.draw3D.DrawOperation")],w);const S=new a({x:0,y:0,z:0});export{w as DrawOperation};
