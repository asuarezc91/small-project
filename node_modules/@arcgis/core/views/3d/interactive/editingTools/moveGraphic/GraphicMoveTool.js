/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import"../../../../../core/has.js";import{unwrap as e,isSome as i}from"../../../../../core/maybe.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import{makeHandle as a}from"../../../../../core/handleUtils.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../../../core/accessorSupport/decorators/subclass.js";import"../../../../../core/urlUtils.js";import"../../../../../core/uuid.js";import"../../../../../portal/support/resourceExtension.js";import n from"../../../../../core/Evented.js";import r from"../../../../../core/Collection.js";import l from"../../../../../core/Handles.js";import{getGraphicEffectiveElevationInfo as p}from"../../../../../support/elevationInfoUtils.js";import{makeDehydratedPoint as h}from"../../../../../layers/graphics/dehydratedFeatures.js";import{dragGraphicMany as c,resetGraphicMany as m}from"../../../../interactive/dragEventPipeline.js";import{InteractiveToolBase as u}from"../../../../interactive/InteractiveToolBase.js";import{getGraphicAttachmentOrigin as d}from"../../manipulatorUtils.js";import{isSupportedGraphic as g}from"./isSupportedGraphic.js";import{canMoveZ as v}from"../manipulatorUtils.js";import{OutlineVisualElement as f}from"../../visualElements/OutlineVisualElement.js";import{GraphicState as M}from"../../../layers/graphics/GraphicState.js";import{createVisualElements as y}from"../visualElementUtils.js";import{DISC_RADIUS as _}from"../manipulations/config.js";import{primaryShapeOrientation as j}from"../manipulations/moveUtils.js";import{MoveManipulation as w}from"../manipulations/MoveManipulation.js";import{MoveXYGraphicManipulation as b}from"../manipulations/MoveXYGraphicManipulation.js";class x{constructor(t){this.allGraphics=t,this.type="graphic-move-start"}}class E{constructor(t,e,i){this.dx=t,this.dy=e,this.allGraphics=i,this.type="graphic-move"}}class A{constructor(t){this.allGraphics=t,this.type="graphic-move-stop"}}let S=class extends(n.EventedMixin(u)){constructor(t){super(t),this.graphics=new r,this.enableZ=!0,this.type="move-3d",this._toolHandles=new l,this._handles=new l}initialize(){this._toolHandles.add([this.graphics.on("change",(()=>this._refreshManipulators()))]),this._refreshManipulators()}destroy(){this._handles.destroy(),this._handles=null,this._toolHandles.destroy(),this._toolHandles=null,this.graphics.removeAll(),this._set("view",null)}reset(){}_refreshManipulators(){this._handles.removeAll(),this._moveManipulation&&this._moveManipulation.destroy(),this.manipulators.removeAll();const t=this.graphics.toArray().filter((t=>0===g(t))).map((t=>new D(t)));t.length&&(this.createManipulators(t),this.createVisualElements(t),this._handles.add(t.map((t=>this.view.trackGraphicState(t.state)))),this.updateMoveManipulation(t))}createManipulators(t){for(const e of t){const i=e.state;e.manipulationXY=new b({tool:this,view:this.view,graphicState:i}),e.manipulationXY.forEachManipulator((t=>this._handles.add(t.events.on("immediate-click",(t=>{this.emit("immediate-click",{...t,graphic:i.graphic}),t.stopPropagation()}))))),this._handles.add(e.manipulationXY.createDragPipeline(((e,i,a)=>this.buildDragEventPipeline(e,i,a,t))))}this.createMoveManipulation(t)}createMoveManipulation(t){const i=new w({tool:this,view:this.view,snapToScene:!1,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:!0,radius:1===t.length?w.radiusForSymbol(t[0].graphic.symbol):_});this._moveManipulation=i,i.elevationInfo={mode:"absolute-height",offset:0},i.forEachManipulator((t=>{this._handles.add(t.events.on("immediate-click",(e=>{i.zManipulation.hasManipulator(t)||1!==this.graphics.length||this.emit("immediate-click",{...e,graphic:this.graphics.getItemAt(0)}),e.stopPropagation()})))}));const a=()=>this.updateMoveManipulation(t);for(const e of t)this._handles.add([e.state.on("changed",a),e.state.watch("displaying",a)]);const o=t[t.length-1];this._handles.add(o.state.on("changed",(()=>this.updateMoveManipulationAngle(o)))),this._handles.add(i.createDragPipeline(((e,i,a)=>{this.buildDragEventPipeline(e,i,a,t)}),p(o.graphic),e(o.graphic.geometry).spatialReference)),this.updateMoveManipulationAngle(o)}createVisualElements(t){for(const e of t){const i=e.graphic,o=y({view:this.view,graphic:i,forEachManipulator:t=>{e.manipulationXY.forEachManipulator(t),this._moveManipulation.forEachManipulator(t)},onManipulatorsChanged:()=>a()});e.geometryRepresentation=o.visualElement,e.geometryRepresentation instanceof f&&this._handles.add([e.geometryRepresentation.events.on("attachment-origin-changed",(()=>{e.state.isDraped||this.updateMoveManipulation(t)})),e.state.watch("isDraped",(()=>this.updateMoveManipulation(t)))]),this._handles.add(o)}}updateMoveManipulationAngle(t){this._moveManipulation.angleDeferred=()=>j(t.graphic.geometry)}updateMoveManipulation(t){const e=h(0,0,0,this.view.spatialReference);let a=0,o=!1;const s=this._moveManipulation;for(const s of t){if(!s.state.displaying)continue;const t=s.state.graphic;this.enableZ&&v(t)&&(o=!0);const n=s.geometryRepresentation instanceof f&&!s.state.isDraped?s.geometryRepresentation.attachmentOrigin:d(this.view,t);i(n)&&(e.x+=n.x,e.y+=n.y,e.z+=n.z,a++)}a>0?(e.x/=a,e.y/=a,e.z/=a,s.location=e,s.xyManipulation.available=!0,s.xyAxisManipulation.available=!0,s.zManipulation.available=o):s.available=!1}buildDragEventPipeline(t,e,i,a){const o=[],s=[];let n=null,r=null;const l=()=>{for(const t of o)t.dragging=!1;o.length=0,s.length=0,n=null,r=null,this._moveManipulation.interactive=!0};e.next((e=>{if("start"===e.action){o.length=0,s.length=0;for(const e of a)e.dragging||!e.manipulationXY.hasManipulator(t)&&e.manipulationXY.grabbing||(o.push(e),s.push(e.graphic),e.dragging=!0);if(0!==s.length&&(this._moveManipulation.interactive=!1,n=c(s),r=m(s),this.emit("graphic-move-start",new x(s)),this.destroyed))return null}return 0!==s.length?e:null})).next((t=>n(t))).next((t=>{switch(t.action){case"start":case"update":if(t.translationX||t.translationY||t.translationZ){const e=this.view.toScreen(t.mapStart),i=this.view.toScreen(t.mapEnd),a=i.x-e.x,o=i.y-e.y;if(this.emit("graphic-move",new E(a,o,s)),this.destroyed)return null}break;case"end":if(this.emit("graphic-move-stop",new A(s)),this.destroyed)return null;l()}})),i.next((t=>r(t))).next((()=>{if(this.emit("graphic-move-stop",new A(s)),this.destroyed)return null;l()}))}};t([o({constructOnly:!0,nonNullable:!0})],S.prototype,"view",void 0),t([o({readOnly:!0})],S.prototype,"graphics",void 0),t([o({constructOnly:!0,nonNullable:!0})],S.prototype,"enableZ",void 0),t([o({readOnly:!0})],S.prototype,"type",void 0),S=t([s("esri.views.3d.interactive.editingTools.graphicMove3D.GraphicMoveTool")],S);class D{constructor(t){this.state=null,this.geometryRepresentation=null,this.manipulationXY=null,this.dragging=!1,this.state=new M({graphic:t})}get graphic(){return this.state.graphic}}export{E as GraphicMoveEvent,x as GraphicMoveStartEvent,A as GraphicMoveStopEvent,S as GraphicMoveTool};
