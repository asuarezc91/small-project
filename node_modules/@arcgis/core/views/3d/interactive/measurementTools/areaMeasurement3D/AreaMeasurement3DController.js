/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as t,unwrap as e}from"../../../../../core/maybe.js";import i from"../../../../../core/Handles.js";import{createScreenPointFromEvent as s}from"../../../../support/screenUtils.js";import{clonePoint as o}from"../../../../../layers/graphics/hydratedFeatures.js";import{createManipulatorDragEventPipeline as a}from"../../../../interactive/dragEventPipeline.js";import{hideManipulatorWhileDragging as n}from"../../editingTools/dragEventPipeline3D.js";import r from"./AreaMeasurement3DView.js";function d(t){return"mouse"!==t.pointerType||0===t.button}export default class{constructor(t,e,s){this._manipulators=s,this._handles=new i,this._tempPickRequest=new r.PickRequest,this.model=t,this.view=e,this.model.reset(),this._setupManipulators()}destroy(){this._handles.destroy(),this._handles=null}handleInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=t=>`manipulator-${t}`;let i=0;const s=t=>s=>("start"===s.action&&(i++,this.model.lastDraggedVertex=e(this.view.manipulatorIdToVertexId(t)),"measured"===this.model.state&&(this.model.state="editing")),s),r=()=>t=>"end"===t.action?(i--,0===i&&"editing"===this.model.state&&(this.model.state="measured"),null):t,h=(i,h)=>{this._handles.add([a(h,((t,a,d)=>{const h=n(t),l=e(this.view.manipulatorIdToVertexId(i));a.next(s(i)).next(h).next(r()).next(this.view.screenToMap3D()).next((e=>{t.location=e.mapEnd,this.model.path.update(l,o(e.mapEnd))}));const m=o(this.model.path.vertex(l));d.next(h).next((()=>{this.model.path.update(l,m),t.location=m}))})),h.events.on("double-click",(t=>{d(t)&&("drawing"===this.model.state&&this.model.finishMeasurement(),t.stopPropagation())}))],t(i))},l=e=>{this._handles.remove(t(e))};this._manipulators.forEach((({id:t,manipulator:e})=>{h(t,e)})),this._handles.add([this._manipulators.on("after-add",(({item:{id:t,manipulator:e}})=>{h(t,e)})),this._manipulators.on("after-remove",(({item:{id:t}})=>{l(t)}))])}_handleDrag(t){"editing"===this.model.state&&t.stopPropagation()}_handleImmediateClick(e){if(!d(e))return;const i=s(e);if(this.model.active)switch(this.model.state){case"initial":this._addVertexAt(i)&&(this.model.state="drawing",e.stopPropagation());break;case"drawing":{const s=this.view.vertexHandleAt(i,e.pointerType);if(t(s)){if(this._addVertexAt(i))return}else 0===s&&(this.model.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(i)}_handlePointerMove(t){if("mouse"===t.pointerType){const e=s(t);this._hoverAt(e)}}_handleKeyDown(t){"Enter"===t.key&&"drawing"===this.model.state&&(this.model.finishMeasurement(),t.stopPropagation())}_hoverAt(t){if(this.view.requiresCursorPoint){const e=this._pick(t);e.mapPoint&&(this.model.cursorPoint=e.mapPoint)}else this.model.cursorPoint=null}_addVertexAt(t){const e=this._pick(t);return!!e.mapPoint&&(this.model.path.add(e.mapPoint),!0)}_pick(t){const e=this._tempPickRequest;return e.screenPoint=t,this.view.pick(e)}}
