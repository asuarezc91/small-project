/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as t,isNone as i}from"../../../core/maybe.js";import r from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{addFrameTask as n}from"../../../core/scheduling.js";import o from"../../../core/Accessor.js";import{canProject as p}from"../../../geometry/support/webMercatorUtils.js";import h from"../../../geometry/Point.js";import l from"../../../geometry/Extent.js";import{createScreenPoint as c}from"../../../core/screenUtils.js";import d from"../../../Camera.js";import m from"../../../core/Handles.js";import v from"../../../Viewpoint.js";import{on as u,once as w,whenOnce as y}from"../../../core/watchUtils.js";import{a as g}from"../../../chunks/vec4f64.js";import{s as f}from"../../../chunks/vec4.js";import{cameraOnContentAlongViewDirection as C,surfaceElevationBelowRenderLocation as O}from"../camera/intersectionUtils.js";import{applyAll as x}from"../camera/constraintUtils.js";import S from"../webgl-engine/lib/Camera.js";import{internalToExternal as j,externalToInternal as T,toExtent as b,distanceToScale as P,scaleToZoom as R,fromExtent as I,getObserverForPointAtDistance as _,scaleToDistance as B,zoomToScale as U}from"../support/cameraUtils.js";import{Frustum as M}from"./Frustum.js";import{PropertiesPool as V}from"../support/PropertiesPool.js";import z from"./ConstraintsManager.js";import{SurfaceCollisionCorrectionController as E}from"./controllers/SurfaceCollisionCorrectionController.js";import{fromCamera as N,toCamera as k}from"../support/viewpointUtils.js";import{GoToOperation as A}from"./GoToOperation.js";const H=r.getLogger("esri.views.3d.state.ViewStateManager");let G=class extends o{constructor(e){super(e),this.propertiesPool=new V({frustum:M},this),this.handles=new m,this.cameraSetByUser=!1,this.internalSetOrder=[],this.gotoOperation=null,this.ready=!1,this.updateDevicePixelRatio=null}get camera(){if(!this.ready)return this._get("camera");const e=j(this.view,this.view.state.camera),t=this._get("camera");return e&&t&&e.equals(t)?t:e}set camera(e){this.updatePropertyBeforeReady("camera",e)||this.setStateCamera(T(this.view,e),{applyConstraints:!1})||H.error("#camera=","Invalid camera",e)}get center(){return this.ready?this.view.pointsOfInterest.centerOnContent.location:this._get("center")}set center(e){this.updatePropertyBeforeReady("center",e)||(e?this.isCompatible(e)?this.setStateCamera(this.centerToCamera(e),{applyConstraints:!0})?this.view.pointsOfInterest.centerOnContent.update():H.error("#center=","Invalid center",e):H.error("#center=","Center has an incompatible spatial reference (center: "+(e.spatialReference?e.spatialReference.wkid:"none")+", view: "+this.view.spatialReference.wkid+")",e):H.error("#center=","Center may not be null or undefined"))}get extent(){if(!this.ready)return this._get("extent");const e=this.view,i=b(e,e.state.camera,e.pointsOfInterest.centerOnContent.renderLocation);return t(i)?i:this._get("extent")}set extent(e){this.updatePropertyBeforeReady("extent",e)||(e?this.isCompatible(e)?this.setStateCamera(this.extentToCamera(e),{applyConstraints:!0})||H.error("#extent=","Invalid extent",e):H.error("#extent=","Extent has an incompatible spatial reference (extent: "+(e.spatialReference?e.spatialReference.wkid:"none")+", view: "+this.view.spatialReference.wkid+")",e):H.error("#extent=","Extent may not be null or undefined"))}get frustum(){const e=this.propertiesPool.get("frustum");return e.renderCoordsHelper=this.view.renderCoordsHelper,e.update(this.view.state.camera),e}get hasInitialView(){return!!this.view.get("map.initialViewProperties.viewpoint")}get scale(){if(!this.ready)return this._get("scale");const e=this.view.pointsOfInterest.centerOnContent;return P(this.view,e.distance,e.location.latitude)}set scale(e){this.updatePropertyBeforeReady("scale",e)||this.setStateCamera(this.scaleToCamera(e),{applyConstraints:!0})||H.error("#scale=","Invalid scale",e)}get padding(){if(!this.ready)return this._get("padding");const e=this.view.state.camera,t=e.padding,i=e.pixelRatio,r=this._get("padding"),a=Math.round(t[0]/i),s=Math.round(t[1]/i),n=Math.round(t[2]/i),o=Math.round(t[3]/i);return null!=r&&r.top===a&&r.right===s&&r.bottom===n&&r.left===o?r:{top:a,right:s,bottom:n,left:o}}set padding(e){this.updatePropertyBeforeReady("padding",e)||(this.paddingToArray(e,this.view.state.camera.pixelRatio,K),this.view.state.updateCamera((e=>e.padding=K)))}paddingToArray(e,t,i){e?f(i,e.top||0,e.right||0,e.bottom||0,e.left||0):f(i,0,0,0,0);for(let e=0;e<4;e++)i[e]=Math.round(i[e]*t)}get screenCenter(){const e=this.padding;return c((this.view.width-(e.left+e.right))/2+e.left,(this.view.height-(e.top+e.bottom))/2+e.top)}get viewpoint(){return this.ready?N(this.view,this.camera):this._get("viewpoint")}set viewpoint(e){if(!this.updatePropertyBeforeReady("viewpoint",e))if(e)if(this.isCompatible(e))this.setStateCamera(this.viewpointToCamera(e),{applyConstraints:!e.camera})||H.error("#viewpoint=","Invalid viewpoint",e);else{const i=t(e.camera)?e.camera.position:e.targetGeometry,r=t(i)&&i.spatialReference;H.error("#viewpoint=","Viewpoint has an incompatible spatial reference (viewpoint: "+(r?r.wkid:"none")+", view: "+this.view.spatialReference.wkid+")",e)}else H.error("#viewpoint=","Viewpoint may not be null or undefined")}get zoom(){return this.ready?R(this.view,this.scale):this._get("zoom")}set zoom(e){this.updatePropertyBeforeReady("zoom",e)||this.setStateCamera(this.zoomToCamera(e),{applyConstraints:!0})||H.error("#zoom=","Invalid zoom",e)}initialize(){this.handles.add([this.view.state.watch("camera",(e=>this.cameraChangedSync(e)),!0),u(this.view,"state.events","before-camera-change",(e=>this.updateElevation(e.camera)))]),w(this.view.state,"camera",(e=>this.updateElevation(e)),!0),this.handles.add(n({prepare:()=>this.prepareFrame()})),this.handles.add(this.view.state.watch("cameraController",(()=>{this.cameraSetByUser=!0,this.handles.remove(Q)}))),this.handles.add(u(this.view,"state.events","camera-projection-changed",(()=>this.notifyChange("scale"))))}destroy(){this.deinit(),this.handles&&(this.handles.destroy(),this.handles=null),this.propertiesPool&&(this.propertiesPool.destroy(),this.propertiesPool=null)}init(){this.constraintsManager=new z({view:this.view}),this.prepareFrame();const e=this.getInitialProperties();this.cameraSetByUser=!1,this._set("ready",!0);for(const t of e)this.set(t.name,t.value);if(!this.cameraSetByUser){const e=this.view.get("map.initialViewProperties.viewpoint")||this.view.initialExtent;e&&this.isCompatible(e)?this.setInitialView(e):2===this.view.state.mode&&this.handles.add(y(this.view.basemapTerrain,"ready",(()=>{this.handles.remove(Q),this.setInitialView(this.view.groundExtent)})),Q)}}deinit(){this.cancelGoToOperation(),this.ready&&(this._override("padding",this.padding),this._set("ready",!1),this._clearOverride("hasInitialView"),this.internalSetOrder.length=0,this.cameraSetByUser=!1,this.handles.remove(Q),this.constraintsManager&&(this.constraintsManager.destroy(),this.constraintsManager=null))}async goTo(e,i){const r={animate:!0,...i};return this.gotoOperation=t(this.gotoOperation)?this.gotoOperation.goTo(e,r):new A(e,r,this.view),this.gotoOperation}debugSetCameraOnContent(){this.setStateCamera(C(this.view),{applyConstraints:!1})}step(e){const t=this.view.state,i=t&&this.view.state.cameraController;i&&(t.updateCamera((t=>{i.stepController(e,t)})),i.steppingFinished&&i.finishController())}cancelGoToOperation(){t(this.gotoOperation)&&(this.gotoOperation.abort(),this.gotoOperation=null)}getInitialProperties(){const e=new Set,t=[];for(const{propertyName:i,overrides:r}of L){const a=e.has(i),s=this._isOverridden(i);!a&&s&&t.push({name:i,value:this._get(i)}),this._clearOverride(i),(a||s)&&r.forEach((t=>e.add(t)))}return t}setInitialView(e){if(!e||this.cameraSetByUser)return;if(e instanceof d)return void this.setStateCamera(T(this.view,e),{applyConstraints:!1});if(e instanceof v){if(e.targetGeometry instanceof l){const i=I(this.view,e.targetGeometry,0,.5,0);return void(t(i)&&this.setStateCamera(T(this.view,i),{applyConstraints:!0}))}const i={applyConstraints:!e.camera},r=this.viewpointToCamera(e);return void this.setStateCamera(r,i)}const i=I(this.view,e,0,.5,0);t(i)&&this.setStateCamera(T(this.view,i),{applyConstraints:!0})}updatePropertyBeforeReady(e,t){if(!this.ready){this._override(e,t);const i=this.internalSetOrder.indexOf(e);return-1!==i&&(this.internalSetOrder=this.internalSetOrder.splice(i,1)),t&&(this.internalSetOrder.push(e),-1!==D.indexOf(e)&&this._override("hasInitialView",!0)),!0}return!1}isCompatible(e){return!i(e)&&(e instanceof v?e.camera?this.isCompatible(e.camera):this.isCompatible(e.targetGeometry):e instanceof d?this.isCompatible(e.position):e.spatialReference&&p(e.spatialReference,this.view.spatialReference))}getPreservingHeadingTilt(e=W){return this.cameraSetByUser?(e.heading=this.camera.heading,e.tilt=this.camera.tilt):(e.heading=0,e.tilt=.5),e}centerPointAtDistanceToCamera(e,t,r=J){const{heading:a,tilt:s}=this.getPreservingHeadingTilt(),n=_(this.view,a,s,e,t,1);return i(n)?null:(r.copyFrom(this.view.state.camera),r.eye=n.eye,r.center=n.center,r.up=n.up,r)}centerToCamera(e){const t=this.view.pointsOfInterest.centerOnContent;t.update();const i=t.distance;return this.centerPointAtDistanceToCamera(e,i)}extentToCamera(e){const{heading:i,tilt:r}=this.getPreservingHeadingTilt(),a=I(this.view,e,i,r,1,q);return t(a)?T(this.view,a):null}scaleToCamera(e){if(null==e)return null;const t=this.view.pointsOfInterest.centerOnContent;t.update();const i=t.renderLocation,r=t.location.latitude,a=B(this.view,e,r);return this.centerPointAtDistanceToCamera(i,a)}zoomToCamera(e){return this.scaleToCamera(U(this.view,e))}viewpointToCamera(e){const i=k(this.view,e);return t(i)?T(this.view,i):null}setStateCamera(e,t){return!(i(e)||!this.view.state.stopActiveCameraController())&&(this.cameraSetByUser=!0,t.doNotCancelGoToOperation||this.cancelGoToOperation(),this.view.state.updateCamera((i=>{t.positionAndOrientationOnly?(i.eye=e.eye,i.center=e.center,i.up=e.up):i.copyFrom(e),t.applyConstraints&&x(this.view,i)})),t.applyConstraints||(this.view.state.cameraController=new E({view:this.view,desiredCamera:e})),!0)}prepareFrame(){const{container:e,canvas:i}=this.view;if(!e||!i)return;t(this.updateDevicePixelRatio)&&this.updateDevicePixelRatio();const r=this.view.pixelRatio,a=Math.round(e.clientWidth*r),s=Math.round(e.clientHeight*r);if(0!==a&&0!==s&&(i.width===a&&i.height===s||(i.width=a,i.height=s),this.view.state)){const e=this.view.state.camera;e.fullWidth===a&&e.fullHeight===s&&e.pixelRatio===r||(J.copyFrom(e),J.pixelRatio!==r&&(this.paddingToArray(this.padding,r,K),J.padding=K),J.fullWidth=a,J.fullHeight=s,J.pixelRatio=r,this.view.state.camera=J)}}updateElevation(e){const t=this.view.basemapTerrain&&this.view.basemapTerrain.spatialReference,i=this.view.renderCoordsHelper.getAltitude(e.eye),r=t?O(this.view,e.eye):0;e.relativeElevation=i-r}cameraChangedSync(e){e&&this.view._stage&&this.view._stage.setCamera(e)}};e([a({type:d,dependsOn:["view.state.camera","ready"],autoTracked:!1})],G.prototype,"camera",null),e([a({type:h,dependsOn:["view.pointsOfInterest.centerOnContent.location","ready"]})],G.prototype,"center",null),e([a({type:l,dependsOn:["view.state.camera","ready","view.pointsOfInterest.centerOnContent.location"]})],G.prototype,"extent",null),e([a({readOnly:!0,dependsOn:["view.state.camera","ready"]})],G.prototype,"frustum",null),e([a({readOnly:!0,dependsOn:["view.map.initialViewProperties?.viewpoint"]})],G.prototype,"hasInitialView",null),e([a({readOnly:!0,type:Boolean})],G.prototype,"ready",void 0),e([a({dependsOn:["view.pointsOfInterest.centerOnContent.distance","ready"],type:Number})],G.prototype,"scale",null),e([a({dependsOn:["view.state.camera","ready"]})],G.prototype,"padding",null),e([a({readOnly:!0,dependsOn:["view.width","view.height","padding"]})],G.prototype,"screenCenter",null),e([a({constructOnly:!0})],G.prototype,"view",void 0),e([a({type:v,dependsOn:["camera","ready"]})],G.prototype,"viewpoint",null),e([a({type:Number,dependsOn:["scale"]})],G.prototype,"zoom",null),e([a({constructOnly:!0})],G.prototype,"updateDevicePixelRatio",void 0),G=e([s("esri.views.3d.state.ViewStateManager")],G);var F=G;const D=["camera","viewpoint","extent","scale","center","zoom"],L=[{propertyName:"camera",overrides:["viewpoint"]},{propertyName:"viewpoint",overrides:["extent"]},{propertyName:"extent",overrides:["center","scale"]},{propertyName:"center",overrides:[]},{propertyName:"scale",overrides:["zoom"]},{propertyName:"zoom",overrides:[]},{propertyName:"padding",overrides:[]}],W={heading:0,tilt:0},q=new d,J=new S,K=g(),Q="pending-initial-view";export default F;
