/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as e}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import"../../../../core/mathUtils.js";import"../../support/mathUtils.js";import s from"../../../../core/Handles.js";import"../../../../geometry/projectionEllipsoid.js";import"../../support/stack.js";import"../../../../chunks/lineSegment.js";import"../../../../chunks/ray.js";import"../../../../chunks/boundedPlane.js";import"../../../../chunks/clipRay.js";import"../../../../chunks/frustum.js";import"../../../../chunks/sphere.js";import"../../../../chunks/triangle.js";import{eyeWithinExtent as o}from"../../camera/intersectionUtils.js";import{applySurfaceCollisionConstraint as i}from"../../camera/constraintUtils/surfaceCollision.js";import{CameraController as n,State as a}from"./CameraController.js";let p=class extends n{constructor(t){super(t),this.handles=new s}set desiredCamera(t){this._set("desiredCamera",t.clone())}get canStop(){return!0}get constraintEnabled(){return this.view.state.constraints.collision.enabled}onControllerStart(){this.state=a.Running,this.handles.add(this.view.basemapTerrain.on("elevation-change",(t=>this.handleElevationChangeEvent(t)))),this.applyCorrection()}onControllerEnd(){this.handles.removeAll()}stepController(){}handleElevationChangeEvent(t){o(this.view,this.desiredCamera,t.extent,t.spatialReference)&&this.applyCorrection()}applyCorrection(){this.view.state.updateCamera((t=>{t.copyViewFrom(this.desiredCamera),i(this.view,t,1)||this.constraintEnabled||(this.state=a.Stopped)}))}};t([e({constructOnly:!0})],p.prototype,"view",void 0),t([e({constructOnly:!0})],p.prototype,"desiredCamera",null),p=t([r("esri.views.3d.state.controllers.SurfaceCollisionCorrectionController")],p);export{p as SurfaceCollisionCorrectionController};
