/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{neverReached as e}from"../../../../core/compilerUtils.js";import{isSome as i}from"../../../../core/maybe.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as a}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{acosClamped as r,clamp as s,deg2rad as n}from"../../../../core/mathUtils.js";import{c}from"../../../../chunks/vec3f64.js";import{f as l,i as m,b as p,a as h,g as d,p as u,l as f,s as v,n as g,c as w,d as C,k as y}from"../../../../chunks/vec3.js";import{directionFromTo as b}from"../../support/mathUtils.js";import{getReferenceEllipsoid as S}from"../../../../geometry/projectionEllipsoid.js";import{t as O,r as j,i as x}from"../../../../chunks/mat4.js";import{a as M}from"../../../../chunks/mat4f64.js";import{extractTransformation as z,isZeroTransformation as T,extractTransformationKeyboard as k}from"../../../navigation/gamepadAndKeyboardUtils.js";import{TiltDefault as D}from"../Constraints.js";import{sv3d as A}from"../../support/stack.js";import{sphere as E,ray as H}from"../../support/geometryUtils.js";import{viewAngle as R}from"../utils/viewUtils.js";import{applyAll as U}from"../../camera/constraintUtils.js";import V from"../../webgl-engine/lib/Camera.js";import{panMotionToRotationMatrix as F,onSurfaceTiltToEyeTiltGlobal as G,offSurfaceTiltToEyeTiltGlobal as P}from"../utils/navigationUtils.js";import{InteractiveController as I}from"./InteractiveController.js";import{createDirectionUp as B}from"../../support/cameraUtilsInternal.js";import{headingTiltToDirectionUp as L}from"../../support/cameraUtils.js";let q=class extends I{constructor(t){super(t),this.transformation={translation:[0,0,0],heading:0,tilt:0,zoom:0},this.keysButtonState=[0,0,0,0,0,0,0,0,0,0,0,0],this.tmpCamera=new V,this.constraintOptions={selection:15,interactionType:0,interactionStartCamera:new V,interactionFactor:0,interactionDirection:null,tiltMode:1}}handleEventGamepad(t){const e=z(t,this.view.navigation.gamepad,this.transformation);("end"===t.action||T(e))&&this.finishController()}activateDirection(t){this.keysButtonState[t]=1,k(this.keysButtonState,this.transformation)}deactivateDirection(t){this.keysButtonState[t]=0;const e=k(this.keysButtonState,this.transformation);T(e)&&this.finishController()}onControllerStart(t){this.filteredSurfaceElevation=this.view.pointsOfInterest.cameraOnSurface.location.z,this.headingStart=this.view.camera.heading,super.onControllerStart(t)}updateFilteredSurfaceElevation(t){const e=this.view.pointsOfInterest.cameraOnSurface.location.z;this.filteredSurfaceElevation+=1*(e-this.filteredSurfaceElevation)*t}stepController(t,e){this.updateStartHeading(),this.updateFilteredSurfaceElevation(t),this.currentCamera.copyViewFrom(e),this.updateCameraCenter(),this.constraintOptions.interactionStartCamera.copyFrom(this.currentCamera),this.calculateControlTransformation(t,this.currentCamera,W),this.applyDisabledMovementTypes(W),this.applyPan(W.pan),this.applyRotate(W.rotate),this.applyZoom(W.zoom),this.applyAscend(W.ascend),this.constraintOptions.interactionType=0,this.constraintOptions.selection=8,U(this.view,this.currentCamera,this.constraintOptions),super.stepController(t,e)}updateStartHeading(){0!==this.transformation.heading&&(this.headingStart=this.view.camera.heading)}applyRotate(t){if(!t.enabled)return;const e=this.currentCamera,{center:i,up:a,eye:o}=e;l(i,i,o),m(i,i,t.matrix),p(i,i,o),m(a,a,t.matrix),e.markViewDirty(),this.constraintOptions.interactionType=3,this.constraintOptions.selection=7,U(this.view,e,this.constraintOptions)}applyPan(t,e=this.currentCamera){if(!t.enabled)return;const{center:i,eye:a,up:o}=e;m(a,a,t.matrix),m(i,i,t.matrix);this.view.state.isGlobal&&m(o,o,t.matrix),e.markViewDirty(),this.constraintOptions.interactionType=4,this.constraintOptions.selection=15,U(this.view,e,this.constraintOptions)}applyZoom(t){if(!t)return;const{eye:e,viewForward:i}=this.currentCamera;p(e,e,h(A.get(),i,t)),this.currentCamera.markViewDirty(),d(Y,i),u(Y,Y),this.constraintOptions.interactionDirection=Y,this.constraintOptions.interactionType=1,this.constraintOptions.selection=7,U(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null}applyAscend(t){if(!t)return;const{center:e,eye:i}=this.currentCamera,a=this.view.renderCoordsHelper.worldUpAtPosition(i,A.get());this.constraintOptions.interactionDirection=d(Y,a);if(this.view.state.isGlobal){const a=f(i),o=(a+t)/a;h(i,i,o),h(e,e,o)}else{const o=h(A.get(),a,t);p(i,i,o),p(e,e,o)}this.currentCamera.markViewDirty(),this.updateCameraCenter(),this.constraintOptions.interactionType=5,this.constraintOptions.selection=8,U(this.view,this.currentCamera,this.constraintOptions)&&this.updateCameraCenter(),this.constraintOptions.selection=7,U(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null}calculateControlTransformation(t,e,i){!function(t){t.zoom=0,t.ascend=0,t.pan.enabled=!1,x(t.pan.matrix),t.rotate.enabled=!1,x(t.rotate.matrix)}(i);const a=this.computeVelocities(t);this.view.state.isLocal?this.calculateControlTransformationLocal(a,e,i):this.calculateControlTransformationGlobal(a,e,i)}updateCameraCenter(){const{ray:t,center:e}=this.currentCamera,i=this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude;this.view.renderCoordsHelper.intersectManifoldClosestSilhouette(t,i,e),this.currentCamera.markViewDirty()}calculateControlTransformationLocal(t,i,a){const{viewRight:o,viewForward:r}=i,n=this.transformation,c=this.view.navigation.gamepad,l=v(A.get(),r[0],r[1],0);g(l,l);const m=n.translation[0]*t.pan;if(0!==m){const t=h(A.get(),o,m);O(a.pan.matrix,a.pan.matrix,t),a.pan.enabled=!0}switch(c.mode){case"pan":{const e=-n.translation[1]*t.pan;if(0!==e){const t=h(A.get(),l,e);O(a.pan.matrix,a.pan.matrix,t),a.pan.enabled=!0}a.zoom=n.zoom*t.zoom;break}case"zoom":a.zoom=(-n.translation[1]+n.zoom)*t.zoom;break;default:e(c.mode)}const p=n.translation[2]*t.ascend;a.ascend=p;const d=-n.heading*t.rotate;0!==d&&(j(a.rotate.matrix,a.rotate.matrix,d,this.view.renderCoordsHelper.worldUpAtPosition(i.eye,A.get())),a.rotate.enabled=!0);const u=n.tilt*t.rotate,f=R(this.view.renderCoordsHelper,i.center,i.eye),w=s(f+u,D.min,D.max)-f;w&&(j(a.rotate.matrix,a.rotate.matrix,w,o),a.rotate.enabled=!0)}calculateControlTransformationGlobal(t,e,i){const{eye:a,viewRight:o}=e,r=this.transformation,s=this.view.navigation.gamepad,n=w(A.get(),o,a);g(n,n),u(n,n),F(this.beginCamera,e,r,t,this.view.camera.heading,this.headingStart,this.view.camera.tilt,i,s),this.tmpCamera.copyFrom(this.currentCamera),this.applyPan(W.pan,this.tmpCamera);const c=this.view.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude,l=r.translation[2]*t.ascend;i.ascend=l;const m=-r.heading*t.rotate;0!==m&&(j(i.rotate.matrix,i.rotate.matrix,m,this.tmpCamera.eye),i.rotate.enabled=!0);const p=r.tilt*t.rotate,h=this.clampTiltDeltaGlobalToValidRange(p,e.ray,c);0!==h&&(j(i.rotate.matrix,i.rotate.matrix,h,this.tmpCamera.viewRight),i.rotate.enabled=!0),i.zoom=r.zoom*t.zoom}clampTiltDeltaGlobalToValidRange(t,e,i){const a=S(this.view.spatialReference),o=G(D.min,e.origin,i,a);let n=0,c=0;const l=A.get();if(this.view.renderCoordsHelper.intersectManifold(e,i,l)){const t=R(this.view.renderCoordsHelper,l,e.origin);n=G(t,e.origin,i,a),c=G(D.max,e.origin,i,a)}else{E.closestPointOnSilhouette(E.wrap(i+a.radius),e,l);const t=r(-C(e.direction,g(l,l)));n=P(t,e.origin,i,a),c=P(D.max,e.origin,i,a)}return s(n+t,o,c)-n}getPointAbsoluteSurfaceElevation(t,e,i){const{renderCoordsHelper:a}=this.view,o=a.getAltitude(t),r=e+Math.abs(o-e);return d(i,t),a.setAltitude(r,i),r}clampedDistanceToSurface(t,e){const{renderCoordsHelper:i}=this.view,{camera:a}=this.view.state,{direction:o}=L(this.view,e,0,Z,$),r=i.intersectManifoldClosestSilhouette(H.wrap(e,o),t,A.get()),s=y(e,r),n=i.intersectManifoldClosestSilhouette(H.wrap(e,b(A.get(),e,a.center)),t,A.get()),c=y(e,n);return Math.min(s,c)}computeHeadingRotateRadius(t){const{renderCoordsHelper:e,state:i}=this.view,{camera:a,isGlobal:o}=i,s=e.intersectManifoldClosestSilhouette(a.ray,this.filteredSurfaceElevation,A.get());if(o){const e=l(A.get(),t,s),i=f(e);h(e,e,1/i);const a=g(A.get(),t),o=r(C(a,e));return i*Math.sin(Math.min(X,o))}{const i=d(A.get(),t);return e.setAltitude(this.filteredSurfaceElevation,i),y(s,i)}}minimumAscendVelocity(){return this.view.state.constraints.collision.enabled?0:J}computeVelocities(t){const e=this.filteredSurfaceElevation,i=e+S(this.view.spatialReference).radius,{camera:a,isGlobal:o}=this.view.state,r=A.get(),n=this.getPointAbsoluteSurfaceElevation(a.eye,e,r),c=this.clampedDistanceToSurface(e,r),l=a.width/2,m=_*a.width,p=_*a.width,h=c*Math.tan(.5*a.fovX)/l,d=h/i,u=h/this.computeHeadingRotateRadius(r),f=n-e;return{pan:(o?d:h)*m*t,ascend:Math.max(this.minimumAscendVelocity()*t,Math.pow(2,m*t/l)*f-f),zoom:Math.pow(2,m*t/l)*c-c,rotate:s(u*p,N,Q)*t}}applyDisabledMovementTypes(t){!i(this.disableMovements)||void 0!==this.disableMovements.mode&&this.view.state.mode!==this.disableMovements.mode||(t.zoom=this.disableMovements.zoom?0:t.zoom,t.ascend=this.disableMovements.ascend?0:t.ascend,t.pan.enabled=!this.disableMovements.pan,this.disableMovements.pan&&x(t.pan.matrix),t.rotate.enabled=!this.disableMovements.rotate,this.disableMovements.rotate&&x(t.rotate.matrix))}static activatesFor(t,e){const i=z(e,t.navigation.gamepad,K);return!("end"===e.action||T(i))}};t([a({constructOnly:!0})],q.prototype,"view",void 0),t([a({constructOnly:!0})],q.prototype,"gamepadDevice",void 0),t([a({constructOnly:!0})],q.prototype,"disableMovements",void 0),q=t([o("esri.views.3d.state.controllers.GamepadKeyboardController")],q);const K={translation:[0,0,0],heading:0,tilt:0,zoom:0},Z=80,X=n(Z),_=.75,J=5,N=n(30),Q=n(80),W={zoom:0,ascend:0,pan:{enabled:!1,matrix:M()},rotate:{enabled:!1,matrix:M()}},Y=c(),$=B();export{q as GamepadKeyboardController};
