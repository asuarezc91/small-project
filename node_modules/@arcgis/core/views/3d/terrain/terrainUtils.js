/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../core/maybe.js";import t from"../../../layers/ElevationLayer.js";import n from"../../../layers/TileLayer.js";import r from"../../../layers/VectorTileLayer.js";import{ImageWithType as i}from"../support/StreamDataLoader.js";import{VectorTile as a}from"../../2d/engine/vectorTiles/VectorTile.js";import l from"./RasterTile.js";import{t as o}from"../../../chunks/terrainUtilsPlanar.js";import{t as s}from"../../../chunks/terrainUtilsSpherical.js";import f from"./TileTexture.js";const c={planar:o,spherical:s};function u(e,t){e||console.warn("Terrain: "+t)}const m=80/180*Math.PI,y=110/180*Math.PI;function p(e,t,n){const r=c[e.manifold];let i;if(r.isInsideExtent(e,t))i=e.getElevation(t[0],t[1],t[1],e.spatialReference);else{if(!r.isInsideExtent(e,t,1.2))return 0;const n=r.tiltToExtentEdge(e,t);if(n>m&&n<y)return 0;const a=e.elevationBounds;i=.5*(a.min+a.max)}const a=t[2]-i;return Math.abs(a)<n?0:a<0?-1:1}function d(e){return L(e)?{fullExtent:e.fullExtent,minScale:e.layer.minScale,maxScale:e.layer.maxScale,tilemapCache:null}:e.layer}function I(e){return e&&e instanceof r}function T(e){return"imagery-tile"===e.type||"wcs"===e.type}function L(e){return e&&"esri.views.3d.layers.ImageryTileLayerView3D"===e.declaredClass}function E(e){return e&&"esri.views.3d.layers.TileLayerView3D"===e.declaredClass}function x(e){return e&&"esri.views.3d.layers.VectorTileLayerView3D"===e.declaredClass}function h(e){return e&&"esri.views.3d.layers.WMTSLayerView3D"===e.declaredClass}function v(e){return e&&"esri.views.3d.layers.ElevationLayerView3D"===e.declaredClass}function w(e){return e&&(E(e)||L(e)||v(e)||x(e)||h(e))}function g(e){return e&&e.sourceLayerInfo&&e.sourceLayerInfo.data instanceof l}function S(e){return e&&e.sourceLayerInfo&&e.sourceLayerInfo.data instanceof a}function V(e){return e&&e.sourceLayerInfo&&e.sourceLayerInfo.data instanceof f}function j(e){const t=e&&e.sourceLayerInfo&&e.sourceLayerInfo.data;return t instanceof HTMLImageElement||t instanceof i||t instanceof HTMLCanvasElement||t instanceof ImageData}function C(t){return e(t)&&!(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof ImageData)&&t.release(),null}function M(e){return e.fetchTile&&!(e.fetchTile===n.prototype.fetchTile||e.fetchTile===t.prototype.fetchTile)}function D(e,t,n,r){let i;return i=2===r||"planar"===r?"planar":"spherical",c[i].checkIfTileInfoSupportedForViewSR(e,n,t)}function b(e,t,n){let r,i;if("wmts"===e.type){const a=e.activeLayer;if(a){const e=a.tileMatrixSet;if(e)r=e.tileInfo,i=e.fullExtent;else{const e=a.tileMatrixSets;if(e){const r=e.find((e=>null==D(e.tileInfo,e.fullExtent,t,n)));if(r)return{tileInfo:r.tileInfo,fullExtent:r.fullExtent}}}}}else i=T(e)?e.getCompatibleFullExtent(t):e.fullExtent,r="vector-tile"!==e.type||H.force512VTL?T(e)?e.getCompatibleTileInfo(t,i):e.tileInfo:e.compatibleTileInfo256;return r&&i&&null==D(r,i,t,n)?{tileInfo:r,fullExtent:i}:{tileInfo:null,fullExtent:null}}const H={force512VTL:!1};export{D as checkIfTileInfoSupportedForView,p as computeSkirtScale,d as getLayerWithExtentRange,b as getTiledLayerInfo,v as isElevationLayerView,L as isImageryTileLayerView,g as isImageryTileRenderInfo,T as isProjectableRasterLayer,j as isRasterTileRenderInfo,w as isSurfaceLayerView,V as isTextureTileRenderInfo,E as isTileLayerView,I as isVectorTileLayer,x as isVectorTileLayerView,S as isVectorTileRenderInfo,h as isWMTSLayerView,C as releaseTileData,H as test,M as useFetchTileForLayer,u as weakAssert};
