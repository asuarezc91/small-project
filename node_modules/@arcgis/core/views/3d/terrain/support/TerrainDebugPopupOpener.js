/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import o from"../../../../symbols/FillSymbol3DLayer.js";import s from"../../../../symbols/PolygonSymbol3D.js";import"../../../../chunks/symbols.js";import i from"../../../../Graphic.js";import{whenFalse as n}from"../../../../core/watchUtils.js";import{toExtent as a}from"../../../../geometry/support/aaBoundingRect.js";import{HandleOwner as p}from"../../../../core/HandleOwner.js";import l from"../../support/debugFlags.js";import{tile2str as c}from"../tileUtils.js";let h=class extends p{initialize(){this.handles.add(this.surface.view.on("click",this._clickEvent.bind(this))),l.SCENEVIEW_HITTEST_RETURN_INTERSECTOR=!0,this.surface.view.popup.autoOpenEnabled=!1,n(this.surface.view.popup,"visible",(()=>{this._removeTileBoundaryGraphic()}))}destroy(){this.surface.view.popup.autoOpenEnabled=!0}_clickEvent(e){this.surface.view.hitTest(e).then((t=>{const r=t.intersector.results.min;if("TerrainRenderer"===r.intersector){const t=this.surface.getTile(r.name);this.surface.view.popup.actions.removeAll(),this.surface.view.popup.open({title:`Tile ${r.name}`,location:e.mapPoint,content:this._createTileDataTable(t)}),this._removeTileBoundaryGraphic(),this.tileBoundaryGraphic=this._createTileBoundaryGraphic(t),this.surface.view.graphics.add(this.tileBoundaryGraphic)}}))}_createTileDataTable(e){const t=this.surface.test.getTiles(),r=t.indexOf(e),o=document.createElement("table");o.innerHTML=`<tr><th>Position</th><th>${r} of ${t.length}</th></tr>\n      <tr>\n        <th style='text-align:center;font-weight:bold'>type&nbsp;&nbsp;&nbsp;</th>\n        <th style='text-align:center;font-weight:bold'>layer&nbsp;&nbsp;&nbsp;</th>\n        <th style='text-align:center;font-weight:bold'>data from tile&nbsp;&nbsp;&nbsp;</th>\n      </tr>`;for(let t=0;t<e.layerInfo.length;t++){const r=e.layerInfo[t];for(let s=0;s<r.length;s++){const i=r[s],n=document.createElement("tr");let a;a=document.createElement("td"),a.textContent=0===s?u[t]:"",n.appendChild(a),a=document.createElement("td"),a.textContent=s.toString(),n.appendChild(a);const p=i.data?e:i.upsampleInfo?i.upsampleInfo.tile:null;a=document.createElement("td"),a.textContent=p?c(p):"no data",n.appendChild(a),o.appendChild(n)}}return o}_removeTileBoundaryGraphic(){this.tileBoundaryGraphic&&(this.surface.view.graphics.remove(this.tileBoundaryGraphic),this.tileBoundaryGraphic=null)}_createTileBoundaryGraphic(e){const t=a(e.extent,this.surface.spatialReference),r=new s({symbolLayers:[new o({material:{color:"rgba(0, 0, 0, 0)"},outline:{size:"3px",color:"red"}})]});return new i({geometry:t,symbol:r})}};e([t({constructOnly:!0})],h.prototype,"surface",void 0),h=e([r("esri.views.3d.terrain.support.TerrainDebugPopupOpener")],h);const u=["elev","map"];export{h as TerrainDebugPopupOpener};
