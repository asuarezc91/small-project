/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../core/has.js";import"../../../core/mathUtils.js";import"../../../chunks/builtins.js";import{getGpuMemoryUsage as e}from"../../webgl/Util.js";import r from"../../webgl/FramebufferObject.js";import"../../webgl/RenderingContext.js";class t{constructor(e,t,i,s){this._renderTarget=null,this.id=`${t}_${++i}`,this._renderTarget=new r(e,{colorTarget:0,depthStencilTarget:0},{target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9987,hasMipmap:s,maxAnisotropy:8,width:0,height:0})}dispose(){this._renderTarget.dispose(),this._renderTarget=null}getTexture(){return this._renderTarget?this._renderTarget.colorTexture:null}isValid(){return null!==this._renderTarget}resize(e,r){this._renderTarget.resize(e,r)}bind(e){e.bindFramebuffer(this._renderTarget)}generateMipMap(){this._renderTarget.colorTexture.descriptor.hasMipmap&&this._renderTarget.colorTexture.generateMipmap()}disposeRenderTargetMemory(){this._renderTarget&&this._renderTarget.resize(0,0)}getGpuMemoryUsage(){let r=0;return this._renderTarget&&(r+=e(this._renderTarget)),r}}export{t as OverlayRenderTarget};
