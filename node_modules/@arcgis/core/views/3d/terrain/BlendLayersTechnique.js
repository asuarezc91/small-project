/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{ReloadableShaderModule as r}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as o}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as i,parameter as n}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as t}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import s from"../../webgl/Program.js";import{simpleBlendingParams as a,makePipelineState as l,defaultColorWriteParams as c}from"../../webgl/renderState.js";import{B as g}from"../../../chunks/BlendLayers.glsl.js";class m extends o{initializeProgram(e){const r=m.shader.get().build();return new s(e.rctx,r.generateSource("vertex"),r.generateSource("fragment"),t)}initializePipeline(){const e=2===this.configuration.mode?a(1,771):1===this.configuration.mode?a(0,770):null;return l({blending:e,colorWrite:c})}}m.shader=new r(g,(()=>import("../webgl-engine/core/shaderLibrary/util/BlendLayers.glsl.js")));class d extends i{constructor(){super(...arguments),this.mode=0}}e([n({count:3})],d.prototype,"mode",void 0);export{m as BlendLayersTechnique,d as BlendLayersTechniqueConfiguration};
