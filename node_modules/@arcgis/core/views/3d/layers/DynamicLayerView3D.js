/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import t from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{isAbortError as a,eachAlways as s,createAbortController as n,onAbort as o,isAborted as l,createAbortError as h,always as m,throwIfAborted as d}from"../../../core/promiseUtils.js";import c from"../../../geometry/Extent.js";import{forEach as g}from"../../../core/asyncUtils.js";import{whenOnce as u}from"../../../core/watchUtils.js";import{create as p,equals as y,width as x,height as f,set as w,intersection as _}from"../../../geometry/support/aaBoundingRect.js";import{RefreshableLayerView as v}from"../../layers/RefreshableLayerView.js";import S from"../support/debugFlags.js";import R from"../webgl-engine/lib/RenderGeometry.js";import b from"../webgl-engine/lib/Texture.js";import{LayerView3D as E}from"./LayerView3D.js";import j from"../../layers/LayerView.js";import{ImageMaterial as I}from"../webgl-engine/materials/ImageMaterial.js";import{computeImageExportSize as L,createGeometryForExtent as A,createOuterImageGeometry as C}from"./support/overlayImageUtils.js";import{toViewIfLocal as D}from"./support/projectExtentUtils.js";const M=t.getLogger("esri.views.3d.layers.DynamicLayerView3D");let T=class extends(v(E(j))){constructor(){super(...arguments),this.drapeSourceType=0,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlayExtents=new Array,this.updateWhenStationary=!0}initialize(){this.addResolvingPromise(D(this).then((e=>this._set("fullExtentInLocalViewSpatialReference",e)))),this.updatingHandles.add(this,"suspended",(()=>this._suspendedChangeHandler())),this.handles.add(this.view.resourceController.scheduler.registerIdleStateCallbacks((()=>{this._isScaleRangeActive()&&this.notifyChange("suspended")}),(()=>{}))),this._isScaleRangeLayer()&&this.updatingHandles.add(this.layer,"scaleRangeId",(()=>this.notifyChange("suspended"))),"local"===this.view.viewingMode&&this.updatingHandles.add(this.view.basemapTerrain,"extent",(()=>this._overlayExtents.forEach(((e,t)=>this._updateImageExtent(t)))))}destroy(){this.clear()}setDrapingExtent(e,t,i,r,a,s){this._overlayExtents[e]={extent:p(t),spatialReference:i,resolution:r,renderLocalOrigin:a,pixelRatio:s},this._updateImageExtent(e)}_updateImageExtent(e){const t=this._overlayExtents[e],i=this._clippedExtent(t.extent,O),r=L(t.extent,i,t.resolution);let s=t.pixelRatio*this.view.pixelRatio;if("imageMaxWidth"in this.layer||"imageMaxHeight"in this.layer){const e=this.layer.imageMaxWidth,t=this.layer.imageMaxHeight;if(r.width>e){const t=e/r.width;r.height=Math.floor(r.height*t),r.width=e,s*=t}if(r.height>t){const e=t/r.height;r.width=Math.floor(r.width*e),r.height=t,s*=e}}const n=this._extents[e];n&&y(n.extent,i)&&!this._imageSizeDiffers(i,n.imageSize,r)||(this._extents[e]={extent:p(i),spatialReference:t.spatialReference,imageSize:r,pixelRatio:s},this.suspended||this._fetch(e).catch((e=>{a(e)||M.error(e)})))}clear(){for(let e=0;e<this._images.length;e++)this._clearImage(e)}async doRefresh(e){if(this.suspended)return;const t=[];for(let i=0;i<this._extents.length;i++)this._extents[i]&&t.push(this._fetch(i,e));await s(t)}canResume(){if(!super.canResume())return!1;if(this._isScaleRangeLayer()){const{minScale:e,maxScale:t}=this.layer;if(e>0||t>0){const i=this.view.scale;if(i<t||e>0&&i>e)return!1}}return!0}isUpdating(){return this._images.some((e=>!!e.loadingPromise))}async processResult(e,t,i){(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)&&(e.image=t)}findExtentInfoAt(e){for(const t of this._extents){const i=t.extent;if(new c(i[0],i[1],i[2],i[3],t.spatialReference).contains(e))return t}return null}getFetchOptions(){}async redraw(e,t){await g(this._images,(async(i,r)=>{i&&(await e(i,t),this._createStageObjects(r,i.image))}))}_imageSizeDiffers(e,t,i){if(!this.maximumDataResolution)return!0;if(S.TESTS_DISABLE_UPDATE_THRESHOLDS)return!0;const r=x(e)/this.maximumDataResolution.x,a=f(e)/this.maximumDataResolution.y,s=r/t.width,n=a/t.height,o=r/i.width,l=a/i.height,h=Math.abs(s-o),m=Math.abs(n-l);return h>1.5||m>1.5}async _fetch(e,t){if(this.suspended)return;const i=this._overlayExtents[e],r=this._extents[e],s=r.extent,d=new c(s[0],s[1],s[2],s[3],r.spatialReference);this._images[e]||(this._images[e]={texture:null,material:null,rendergeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:p(s)});const g=this._images[e];if(g.loadingAbortController&&(g.loadingAbortController.abort(),g.loadingAbortController=null),0===d.width||0===d.height)return void this._clearImage(e);const u=n();g.loadingAbortController=u,o(t,(()=>u.abort()));const y=u.signal,x=this._waitFetchReady(y).then((()=>{const e={requestAsImageElement:!0,pixelRatio:i.pixelRatio,...this.getFetchOptions(),signal:y},{height:t,width:a}=r.imageSize;return this.layer.fetchImage(d,a,t,e)})).then((e=>{if(l(y))throw M.warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),h();return this.processResult(g,e)}));g.loadingPromise=x,m(x,(()=>{x===g.loadingPromise&&(g.loadingPromise=null,g.loadingAbortController=null)}));const f=x.then((()=>{w(g.renderExtent,s),this._createStageObjects(e,g.image),this.notifyChange("updating")})).catch((e=>{throw e&&!a(e)&&M.error(e),this.notifyChange("updating"),e}));this.notifyChange("updating"),await f}_clearImage(e){const t=this._images[e],i=this.view._stage;t&&(t.rendergeometry&&(this.view.basemapTerrain.overlayManager.renderer.removeGeometries([t.rendergeometry],this,2),t.rendergeometry=null),t.texture&&(i.remove(4,t.texture.id),t.texture=null),t.material&&(i.remove(3,t.material.id),t.material=null),t.loadingAbortController&&(t.loadingAbortController.abort(),t.loadingAbortController=null),t.loadingPromise=null,t.image=null,t.pixelData=null)}_createStageObjects(e,t){const i=this.view._stage,r=this._images[e];r.texture&&(i.remove(4,r.texture.id),r.texture=null),t?(r.texture=new b(t,"dynamicLayer",{width:t.width,height:t.height,preMultiplyAlpha:!0,wrap:{s:33071,t:33071}}),i.add(4,r.texture)):r.material&&(i.remove(3,r.material.id),r.material=null),!r.material&&r.texture?(r.material=new I({transparent:!0,textureId:r.texture.id},"dynamicLayer"),i.add(3,r.material)):r.material&&t&&r.material.setParameterValues({textureId:r.texture.id});const a=this.view.basemapTerrain.overlayManager.renderer;if(r.material){const t=-1;let i;const s=this._overlayExtents[e].renderLocalOrigin;if(0===e)i=A(r.renderExtent,t);else{if(1!==e)return void console.error("DynamicLayerView3D._createStageObjects: Invalid extent idx");{const e=this._images[0].renderExtent;if(!e)return;i=C(e,r.renderExtent,t)}}const n=new R(i);n.material=r.material,n.origin=s,a.addGeometries([n],this,2),r.rendergeometry&&a.removeGeometries([r.rendergeometry],this,2),r.rendergeometry=n}else r.rendergeometry&&(a.removeGeometries([r.rendergeometry],this,2),r.rendergeometry=null)}_isScaleRangeLayer(){return"minScale"in this.layer&&"maxScale"in this.layer}_isScaleRangeActive(){return!!this._isScaleRangeLayer()&&(this.layer.minScale>0||this.layer.maxScale>0)}_clippedExtent(e,t){if("local"!==this.view.viewingMode)return w(t,e);const i=this.view.basemapTerrain,r=i.extent;return i.ready&&r?_(e,r,t):w(t,e)}_suspendedChangeHandler(){this.suspended?this.clear():this.refresh()}async _waitFetchReady(e){this.updateWhenStationary&&await u(this.view,"stationary",e),d(e)}};e([i()],T.prototype,"layer",void 0),e([i({dependsOn:["view.scale","layer.minScale","layer.maxScale"]})],T.prototype,"suspended",void 0),e([i({readOnly:!0})],T.prototype,"fullExtentInLocalViewSpatialReference",void 0),e([i()],T.prototype,"updating",void 0),T=e([r("esri.views.3d.layers.DynamicLayerView3D")],T);const O=p();var H=T;export default H;
