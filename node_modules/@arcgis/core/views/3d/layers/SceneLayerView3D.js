/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as r,isNone as t}from"../../../core/maybe.js";import i from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{eachAlways as n}from"../../../core/promiseUtils.js";import{collectLabelingFields as l,collectFilterFields as a,collectFields as u}from"../../../layers/support/fieldUtils.js";import d from"../../../Graphic.js";import{Task as p}from"../../support/Scheduler.js";import h from"../../../tasks/support/Query.js";import{LayerView3D as c}from"./LayerView3D.js";import{updatingProgress as y}from"./support/layerViewUpdatingProperties.js";import f from"../../layers/support/FeatureFilter.js";import g from"../../layers/SceneLayerView.js";import{getIndexCrs as m}from"./i3s/I3SUtil.js";import{createGetFeatureExtent as F}from"./i3s/I3SGeometryUtil.js";import{I3SMeshView3D as v}from"./I3SMeshView3D.js";import{I3SMeshViewFilter as _}from"./i3s/I3SMeshViewFilter.js";import w from"./i3s/I3SQueryEngine.js";import{I3SQueryFeatureAdapter as j}from"./i3s/I3SQueryFeatureAdapter.js";import b from"./i3s/I3SQueryFeatureStore.js";import{DefinitionExpressionSceneLayerView as S}from"./support/DefinitionExpressionSceneLayerView.js";import{PopupSceneLayerView as E}from"./support/PopupSceneLayerView.js";import{createInteractiveEditSession as I,processAttributeEdits as x}from"./i3s/attributeEditing.js";import{defineFieldProperties as q}from"./support/fieldProperties.js";const Q=i.getLogger("esri.views.3d.layers.SceneLayerView3D"),C=q();let D=class extends(v(S(E(c(g))))){constructor(){super(...arguments),this.requiredFields=new Array,this.lodFactor=1,this.progressiveLoadFactor=1,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!0,this._queryEngine=null}get filter(){return r(this.viewFilter)?this.viewFilter.filter:null}set filter(e){!t(e)&&_.checkSupport(e)?r(this.viewFilter)?this.viewFilter.filter=e:this.viewFilter=new _({filter:e,layerFieldsIndex:this.layer.fieldsIndex,loadAsyncModule:e=>this._loadAsyncModule(e),applyFilters:()=>this._applyFilters(!0),addSqlFilter:(e,r)=>this.addSqlFilter(e,r,this.logError)}):this.viewFilter=null}get lodCrossfadeinDuration(){var e,r;return null!=(e=null==(r=this.view)?void 0:r.qualitySettings.sceneService["3dObject"].lodCrossfadeinDuration)?e:0}get lodCrossfadeoutDuration(){var e,r;return null!=(e=null==(r=this.view)?void 0:r.qualitySettings.sceneService["3dObject"].lodCrossfadeoutDuration)?e:0}get lodCrossfadeUncoveredDuration(){var e,r;return null!=(e=null==(r=this.view)?void 0:r.qualitySettings.sceneService["3dObject"].lodCrossfadeUncoveredDuration)?e:0}initialize(){for(const e of["layer.renderer","layer.labelingInfo","layer.labelsVisible","definitionExpressionFields","filter"])this.updatingHandles.add(this,e,(()=>this.updatingHandles.addPromise(this._updateRequiredFields())));this._updateRequiredFields(),this.updatingHandles.add(this.layer,"rangeInfos",(e=>this._rangeInfosChanged(e)),2),this.updatingHandles.add(this.layer,"renderer",(e=>this.updatingHandles.addPromise(this._rendererChange(e))),2);for(const e of["parsedDefinitionExpression","filter","viewFilter.parsedWhereClause","viewFilter.parsedGeometry","viewFilter.sortedObjectIds"])this.updatingHandles.add(this,e,(()=>this._filterChange()));this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e))))}destroy(){}async _updateRequiredFields(){const{layer:e,layer:{fields:t,renderer:i,labelsVisible:s},definitionExpressionFields:o}=this,d=new Set,p=await n([i?i.collectRequiredFields(d,t):null,s?l(d,e):null,r(this.filter)?a(d,e,this.filter):null]);for(const e of p)e.error&&Q.error(e.error);u(d,t,o),this._set("requiredFields",Array.from(d).sort())}_rangeInfosChanged(e){null!=e&&e.length>0&&Q.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return r(this.filter)?this.filter.createQuery(e):new h(e)}queryExtent(e,r){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),null==r?void 0:r.signal)}queryFeatureCount(e,r){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),null==r?void 0:r.signal)}queryFeatures(e,r){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),null==r?void 0:r.signal).then((e=>{if(null==e||!e.features)return e;const r=this.layer;for(const t of e.features)t.layer=r,t.sourceLayer=r;return e}))}queryObjectIds(e,r){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),null==r?void 0:r.signal)}_ensureQueryEngine(){return this._queryEngine||(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=F(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new w({layerView:this,task:p.FEATURE_QUERY_ENGINE,spatialIndex:new b({featureAdapter:new j({objectIdField:this.layer.objectIdField,attributeStorageInfo:this.layer.attributeStorageInfo,getFeatureExtent:e}),forAllFeatures:(e,r)=>this._forAllFeatures(((r,t,i)=>e({id:r,index:t,meta:i})),r,2),getFeatureExtent:e,sourceSpatialReference:m(this.layer),viewSpatialReference:this.view.spatialReference})})}highlight(e){const r=this._highlights;if(e instanceof h){const{set:t,handle:i}=r.acquireSet();return this.queryObjectIds(e).then((e=>r.setFeatureIds(t,e))),i}return super.highlight(e)}createInteractiveEditSession(e){return I(this.attributeEditingContext,e)}_createLayerGraphic(e){const r=new d(null,null,e);return r.layer=this.layer,r.sourceLayer=this.layer,r}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}getFilters(){const e=super.getFilters();return this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),r(this.viewFilter)&&this.viewFilter.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}_ensureQuery(e){return this._addDefinitionExpressionToQuery(t(e)?this.createQuery():h.from(e))}get attributeEditingContext(){return{fieldsIndex:this.layer.fieldsIndex,objectIdField:this._getObjectIdField(),forEachNode:e=>this._forAllNodes((t=>r(t)?e(t.node,t.featureIds):null)),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this.attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(e,r)=>this.setAttributeData(e,r),clearMemCache:()=>this.clearMemCache()}}_handleEdits(e){x(this.attributeEditingContext,e)}};e([s()],D.prototype,"layer",void 0),e([s({aliasOf:"layer"})],D.prototype,"i3slayer",void 0),e([s({dependsOn:["_controller.rootNodeVisible"]})],D.prototype,"suspended",void 0),e([s(y)],D.prototype,"updatingProgress",void 0),e([s({type:f})],D.prototype,"filter",null),e([s()],D.prototype,"viewFilter",void 0),e([s(C.requiredFields)],D.prototype,"requiredFields",void 0),e([s(C.availableFields)],D.prototype,"availableFields",void 0),e([s({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.3dObject.lodFactor"})],D.prototype,"lodFactor",void 0),e([s({readOnly:!0,aliasOf:"_controller.updatingProgress"})],D.prototype,"updatingProgressValue",void 0),D=e([o("esri.views.3d.layers.SceneLayerView3D")],D);var O=D;export default O;
