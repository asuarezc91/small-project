/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import{subclass as e}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{whenFalseOnce as t}from"../../../core/watchUtils.js";import{mayHaveHeightModelInfo as r,rejectLayerError as i}from"../../../geometry/support/heightModelInfoUtils.js";const p=p=>{let a=class extends p{constructor(){super(...arguments),this.slicePlaneEnabled=!1,this.supportsHeightUnitConversion=!1}postscript(o){super.postscript(o),r(this.layer)&&this.addResolvingPromise(this._validateHeightModelInfo())}async _validateHeightModelInfo(){const o=t(this.view.defaultsFromMap,"isHeightModelInfoSearching");this.handles.add(o),await o;const s=i(this.layer,this.view.heightModelInfo,this.supportsHeightUnitConversion);if(s)throw s}};return o([s()],a.prototype,"view",void 0),o([s()],a.prototype,"slicePlaneEnabled",void 0),a=o([e("esri.views.3d.layers.LayerView3D")],a),a};export{p as LayerView3D};
