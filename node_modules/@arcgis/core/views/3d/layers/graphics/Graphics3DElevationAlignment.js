/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import s from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import a from"../../../../core/Handles.js";import{Task as h}from"../../../support/Scheduler.js";import{someSet as n}from"../../../../core/SetUtils.js";import{ExtentSet as o}from"./ExtentSet.js";let p=class extends s{constructor(){super(...arguments),this.dirtyExtents=new o,this.globalDirty=!1,this.dirtyGraphicsSet=new Set,this.handles=new a,this.updateElevation=!1,this.layerView=null,this.graphicsCore=null,this.events=new r}get updating(){return this.needsUpdate()}setup(e,t,i,s){this.layerView=e,this.queryGraphicUIDsInExtent=t,this.graphicsCore=i,this.elevationProvider=s;const r=this.layerView.view.resourceController.scheduler;this.handles.add([s.on("elevation-change",(e=>this._elevationChanged(e))),this.layerView.watch("suspended",(()=>this.suspendedChange())),r.registerTask(h.ELEVATION_ALIGNMENT,(e=>this.update(e)),(()=>this.needsUpdate()))])}destroy(){this.dirtyGraphicsSet=null,this.handles.destroy(),this.handles=null,this.layerView=null,this.graphicsCore=null,this.queryGraphicUIDsInExtent=null}clear(){this.dirtyGraphicsSet.clear(),this.notifyChange("updating")}suspendedChange(){!0===this.layerView.suspended?this.updateElevation=!1:!1===this.layerView.suspended&&this.updateElevation&&(this.globalDirty=!0,this.notifyChange("updating"))}elevationInfoChange(){this.globalDirty=!0,this.notifyChange("updating")}needsUpdate(){return this.dirtyGraphicsSet&&this.dirtyGraphicsSet.size>0||this.dirtyExtents&&!this.dirtyExtents.empty||this.globalDirty}update(e){for(this.globalDirty&&(this.markAllGraphicsElevationDirty(),this.globalDirty=!1,e.madeProgress()),e.run((()=>this.dirtyExtents.merge(e)));this.needsUpdate()&&!e.done;)this._updateDirtyGraphics(e),this._updateDirtyExtents(e);this.layerView.view.deconflictor.setDirty(),this.notifyChange("updating")}_updateDirtyGraphics(e){const t=this.layerView.view,i=this.graphicsCore.stageLayer.id,s=this.layerView.labeling;for(;this.dirtyGraphicsSet.size>0&&!e.done;){let r=Math.min(this.dirtyGraphicsSet.size,100);n(this.dirtyGraphicsSet,(i=>{const s=this.graphicsCore.getGraphics3DGraphicById(i);return this.dirtyGraphicsSet.delete(i),s&&s.alignWithElevation(this.elevationProvider,t.renderCoordsHelper,this.graphicsCore.asyncUpdates),e.madeProgress(),--r<=0||e.done})),t._stage.processDirtyLayer(i),s&&s.processStageDirty()}}_updateDirtyExtents(e){for(;!this.dirtyExtents.empty&&this.dirtyGraphicsSet.size<100&&!e.done;){const t=this.dirtyExtents.pop(),i=this.elevationProvider.spatialReference;this.events.emit("invalidate-elevation",{extent:t,spatialReference:i}),this.queryGraphicUIDsInExtent(t,i,(e=>{const t=this.graphicsCore.getGraphics3DGraphicById(e);t&&t.needsElevationUpdates()&&this.dirtyGraphicsSet.add(e)})),e.madeProgress()}}markAllGraphicsElevationDirty(){this.dirtyExtents.clear(),this.dirtyGraphicsSet.clear(),this.graphicsCore.graphics3DGraphics.forEach(((e,t)=>this.dirtyGraphicsSet.add(t)))}_elevationChanged(e){if("scene"===e.context&&(!this.graphicsCore.layer.elevationInfo||"relative-to-scene"!==this.graphicsCore.layer.elevationInfo.mode))return;const{extent:t,spatialReference:i}=e;if(this.layerView.suspended){if(!this.updateElevation){const e=this.graphicsCore.computedExtent;e&&t[2]>e.xmin&&t[0]<e.xmax&&t[3]>e.ymin&&t[1]<e.ymax&&(this.updateElevation=!0)}this.events.emit("invalidate-elevation",{extent:t,spatialReference:i})}else t[0]===-1/0?this.globalDirty=!0:this.dirtyExtents.add(t),this.notifyChange("updating")}};e([t({readOnly:!0})],p.prototype,"updating",null),p=e([i("esri.views.3d.layers.graphics.Graphics3DElevationAlignment")],p);var d=p;export default d;
