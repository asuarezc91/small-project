/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{isNone as t,isSome as s}from"../../../../core/maybe.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as e}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import a from"../../../../core/PooledArray.js";import o from"../../../../core/Accessor.js";import{lerp as c}from"../../../../core/mathUtils.js";import{Z as n,c as h}from"../../../../chunks/vec3f64.js";import{i as l,a as p,s as u,g as d}from"../../../../chunks/vec3.js";import{getReferenceEllipsoid as f}from"../../../../geometry/projectionEllipsoid.js";import{a as m}from"../../../../chunks/mat4.js";import{create as g,empty as b,offset as v,width as y,height as G,expand as S,intersects as B}from"../../../../geometry/support/aaBoundingRect.js";import{a as w}from"../../../../chunks/mat4f64.js";import{a as j}from"../../../../chunks/vec2f64.js";import{a as D}from"../../../../chunks/vec4f64.js";import{s as V,t as N,b as _}from"../../../../chunks/vec4.js";import{i as P}from"../../../../chunks/sphere.js";import{sphere as C,ray as I,boundedPlane as x}from"../../support/geometryUtils.js";import{VertexAttrConstants as A}from"../../webgl-engine/lib/Util.js";import M from"../../webgl-engine/lib/Camera.js";import z from"../../support/debugFlags.js";import{drawAccelerationStruct as O,prepare as T,drawPoly as E}from"./deconflictorDebug.js";import{applyPrecomputedScaleFactor as F}from"../../webgl-engine/lib/screenSizePerspectiveUtils.js";import{HUDMaterial as X}from"../../webgl-engine/materials/HUDMaterial.js";const R=h(),Y=D(),U=D(),k=h(),L=w(),W=C.create(),H=I.create(),Z=h(),q=g();class J{constructor(){this.aabr=g(),this.distance=0,this.culled=!1,this.visible=!1}}class K{constructor(i,t,s={}){this.graphics3DGraphic=i,this.slicePlaneEnabled=t,this.info=s}}class Q{constructor(){this.active=new Map,this.visible=new Map}clear(){this.active.clear(),this.visible.clear()}}class ${}class ii{constructor(){this.sortArray=new a({allocator:i=>i||new $})}}class ti{constructor(){this.camera=new M,this.slicePlane=x.create(),this.slicePlaneEnabled=!1}copyFrom(i){this.camera.copyFrom(i.camera),x.copy(i.slicePlane,this.slicePlane),this.slicePlaneEnabled=i.slicePlaneEnabled}}let si=class extends o{constructor(){super(...arguments),this._dirty=!1,this._runningViewState=new ti,this._state=0,this.graphics=new Q,this.iterators=new ii,this.accBinsNumX=15,this.accBinsNumY=20,this.accBinsSizeX=0,this.accBinsSizeY=0,this.accBins=null,this.accNumTests=0}get dirty(){return this._dirty}get state(){return this._state}destroy(){this.graphics.clear(),this.iterators=null}setDirty(){!this._dirty&&this.graphics.active.size>0&&(this._dirty=!0,this.notifyChange("updating"))}get updating(){return 0!==this._state||this._dirty}get updatingProgress(){if(!this.updating)return 1;const i=this._state/4;return this._dirty?.5*i:i}needsUpdate(){return this.view.ready&&null!=this.view.state&&this.updating}update(i){switch(this._state){case 0:this.startUpdate(),i.madeProgress();case 1:if(this._state=1,!this.processActiveGraphics(i))return;case 2:if(this._state=2,!this.sortVisibleGraphics(i))return;case 3:if(this._state=3,!this.deconflictVisibleGraphics(i))return;default:O(this,this.graphics.visible),this._state=0,this.notifyChange("updating")}}modifyGraphics(i,t){t?i.forEach((i=>this.addToActiveGraphics(i))):i.forEach((i=>this.removeFromActiveGraphics(i))),this.setDirty()}layerSupportsDeconfliction(i){if(t(i)||"object3d"!==i.type)return!1;const s=i.stageObject;if(1!==(s?s.getNumGeometryRecords():0))return!1;return s.getGeometryRecord(0).material instanceof X}startUpdate(){T(this.view),this._dirty=!1,this._runningViewState.copyFrom(this.viewState);const{fullWidth:i,fullHeight:t}=this._runningViewState.camera;this.initBins(i,t),this.resetIterators()}addToActiveGraphics(i){i.info[this.visibilityGroup]=new J,this.graphics.active.set(i.graphics3DGraphic.graphic.uid,i),this.setDirty()}removeFromActiveGraphics(i){this.removeFromVisibleGraphics(i),function(i,t){const s=i.graphics3DGraphic;s.destroyed||s.clearVisibilityFlag(3,t)}(i,this.visibilityGroup),delete i.info[this.visibilityGroup],this.graphics.active.delete(i.graphics3DGraphic.graphic.uid),this.setDirty()}addToVisibleGraphics(i){this.graphics.visible.set(i.graphics3DGraphic.graphic.uid,i)}removeFromVisibleGraphics(i){this.graphics.visible.delete(i.graphics3DGraphic.graphic.uid)}processActiveGraphics(i){const t=this.ensureActiveGraphicsIterator(),e=m(L,this._runningViewState.camera.projectionMatrix),r="global"===this.view.viewingMode&&1===this.view.map.ground.opacity&&this._runningViewState.camera.relativeElevation>0?W:null;let a=0;for(s(r)&&(l(r.center,n,this._runningViewState.camera.viewMatrix),r.radius=f(this.view.spatialReference).radius,a=C.distanceToSilhouette(r,n));!i.done;){i.madeProgress();const s=t.next();if(s.done)return this.resetActiveGraphicsIterator(),!0;const o=s.value,c=o&&o.info[this.visibilityGroup];c&&(this.collectGraphics3DGraphics(o,e,r,a),c.culled?this.removeFromVisibleGraphics(o):this.addToVisibleGraphics(o))}return!1}sortVisibleGraphics(i){const t=this.ensureSortGraphicsIterator();for(;!i.done;){const s=t.next();if(i.madeProgress(),s.done)return this.resetSortGraphicsIterator(),!0}return!1}deconflictVisibleGraphics(i){const t=this.ensureVisibleGraphicsIterator(),s=1===this.visibilityGroup;for(;!i.done;){i.madeProgress();const e=t.next();if(e.done)return this.resetVisibleGraphicsIterator(),!0;const r=e.value,a=r.info[this.visibilityGroup];if(!a||a.culled)continue;const o=r.graphics3DGraphic,c=(!s||o.isVisible())&&!this.isConflicted(r);c&&this.addToBins(r),a.visible=c,this.setGraphicVisibility(r,c),E(a,c)}return!1}resetIterators(){this.iterators.active=null,this.iterators.visible=null,this.iterators.sort=null}ensureActiveGraphicsIterator(){return this.iterators.active||(this.iterators.active=ei(this.graphics.active)),this.iterators.active}resetActiveGraphicsIterator(){this.iterators.active=null}ensureVisibleGraphicsIterator(){return this.iterators.visible||(this.iterators.visible=ei(this.graphics.visible)),this.iterators.visible}resetVisibleGraphicsIterator(){this.iterators.visible=null}ensureSortGraphicsIterator(){return this.iterators.sort||(this.iterators.sort=function*(i,t,s){t.clear(),i.forEach(((i,e)=>{const r=t.pushNew();r.id=e,r.prio=i.info?-i.info[s].distance:Number.MAX_VALUE})),yield;const e=t.iterableSort(((i,t)=>t.prio-i.prio));for(let i=e.next();!i.done;i=e.next())yield;t.forAll((t=>{const s=i.get(t.id);s&&(i.delete(t.id),i.set(t.id,s))})),t.clear()}(this.graphics.visible,this.iterators.sortArray,this.visibilityGroup)),this.iterators.sort}resetSortGraphicsIterator(){this.iterators.sort=null}collectGraphics3DGraphics(i,e,r,a){const o=i.graphics3DGraphic;if(o.destroyed)return;const c=i.info[this.visibilityGroup];if(!o.isVisible(0,3))return void(c.culled=!0);const n=this.getGraphicsLayers(o);b(c.aabr);let h=null;for(const o of n){if(!this.layerSupportsDeconfliction(o))continue;const n=o.stageObject.getGeometryRecord(0).material;if(t(h)){if(h=this.getProjectionInfo(o,e,ai),h.isOutsideScreen||this.isCulledBySlice(i,R)||s(r)&&this.isCulledByHorizon(h,r,a))return void(c.culled=!0);!z.DISABLE_DECONFLICTOR_VISIBILITY_OFFSET&&c.visible&&(h.distance*=.7)}this.expandBoundingRect(c,o,n,h)}t(h)?c.culled=!0:(c.distance=h.distance,c.culled=!1)}getProjectionInfo(i,t,s){const e=this._runningViewState.camera,r=i.stageObject,a=r.getGeometryRecord(0),o=a.material,c=r.getCenter();l(R,c,e.viewMatrix);const n=a.geometry.data.getVertexAttr(),h=n[A.NORMAL].data,d=n[A.AUXPOS1].data;return o.applyShaderOffsetsView(R,h,r.objectTransformation,d,e,s.scaleInfo,R),V(Y,R[0],R[1],R[2],1),N(U,Y,e.projectionMatrix),p(s.positionNDC,U,1/U[3]),o.applyShaderOffsetsNDC(s.positionNDC,d,e,s.positionNDC,k),s.distanceWithoutPolygonOffset=e.depthNDCToWorld(k[2]),s.distance=k[2]===s.positionNDC[2]?s.distanceWithoutPolygonOffset:e.depthNDCToWorld(s.positionNDC[2]),V(U,s.positionNDC[0],s.positionNDC[1],s.positionNDC[2],1),N(Y,U,t),_(Y,Y,1/Y[3]),u(s.positionView,R[0],R[1],R[2]),s}isCulledByHorizon(i,t,s){return d(H.direction,i.positionView),u(H.origin,0,0,0),!!P(t,H,Z)&&i.distanceWithoutPolygonOffset>s}isCulledBySlice(i,t){return i.slicePlaneEnabled&&this._runningViewState.slicePlaneEnabled&&x.extrusionContainsPoint(this._runningViewState.slicePlane,t)}expandBoundingRect(i,t,s,{positionNDC:e,scaleInfo:r}){const a=this._runningViewState.camera,o=t.getScreenSize(ri);F(o,r.factor,o),o[0]*=a.pixelRatio,o[1]*=a.pixelRatio;const n=v(s.calculateRelativeScreenBounds(o,r.factorAlignment.scale,q),c(0,a.fullWidth,.5+.5*e[0]),c(0,a.fullHeight,.5+.5*e[1])),h=this.iconMarginFactor;if(0!==h){const i=h*Math.min(y(n),G(n));n[0]-=i,n[1]-=i,n[2]+=i,n[3]+=i}S(i.aabr,n)}isConflicted(i){const t=i.graphics3DGraphic.graphic.uid,s=i.info[this.visibilityGroup];for(let i=Math.floor(s.aabr[0]/this.accBinsSizeX);i<=Math.floor(s.aabr[2]/this.accBinsSizeX);i++)if(!(i<0||i>=this.accBinsNumX))for(let e=Math.floor(s.aabr[1]/this.accBinsSizeY);e<=Math.floor(s.aabr[3]/this.accBinsSizeY);e++){if(e<0||e>=this.accBinsNumY)continue;const r=this.accBins[i][e];for(let i=0;i<r.length;i++){const e=r.data[i],a=e.info[this.visibilityGroup];if(a&&a.visible&&(e.graphics3DGraphic.graphic.uid!==t&&(this.accNumTests++,B(a.aabr,s.aabr))))return!0}}return!1}initBins(i,t){if(null==this.accBins){this.accBins=[];for(let i=0;i<this.accBinsNumX;i++){this.accBins.push([]);const i=this.accBins[this.accBins.length-1];for(let t=0;t<this.accBinsNumY;t++)i.push(new a)}}else for(let i=0;i<this.accBinsNumX;i++)for(let t=0;t<this.accBinsNumY;t++)this.accBins[i][t].clear();this.accBinsSizeX=i/this.accBinsNumX,this.accBinsSizeY=t/this.accBinsNumY,this.accNumTests=0}addToBins(i){const t=i.info[this.visibilityGroup],s=Math.floor(t.aabr[0]/this.accBinsSizeX),e=Math.floor(t.aabr[2]/this.accBinsSizeX),r=Math.floor(t.aabr[1]/this.accBinsSizeY),a=Math.floor(t.aabr[3]/this.accBinsSizeY);for(let t=s;t<=e;t++)if(!(t<0||t>=this.accBinsNumX))for(let s=r;s<=a;s++)s<0||s>=this.accBinsNumY||this.accBins[t][s].push(i)}setGraphicVisibility(i,t){const s=i.graphics3DGraphic;s.destroyed||(s.setVisibilityFlag(3,t,this.visibilityGroup),1===this.visibilityGroup&&this.view.labeler.setLabelGraphicVisibility(s,t))}};function*ei(i){if(Map.prototype.entries){const t=i.entries();for(let i=t.next();!i.done;i=t.next())yield i.value[1]}else yield*i.values()}i([e({constructOnly:!0})],si.prototype,"view",void 0),i([e({type:Boolean,readOnly:!0})],si.prototype,"updating",null),si=i([r("esri.views.3d.layers.graphics.Deconflictor")],si);const ri=j();const ai=new class{constructor(){this.positionView=h(),this.positionNDC=h(),this.distance=0,this.distanceWithoutPolygonOffset=0,this.scaleInfo={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}}}get isOutsideScreen(){const i=this.positionNDC;return i[0]<-1||i[1]<-1||i[2]<-1||i[0]>=1||i[1]>=1}};export{si as Deconflictor,K as DeconflictorGraphic,ti as DeconflictorViewState};
