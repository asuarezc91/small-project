/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{remove as t}from"../../../../core/arrayUtils.js";import{create as r,onAbort as s,createAbortError as i,createAbortController as o}from"../../../../core/promiseUtils.js";import n from"../../../../geometry/Multipoint.js";import"../../../../geometry.js";import{Task as a}from"../../../support/Scheduler.js";class l{constructor(e,t){this.spatialReference=e,this.view=t}getElevation(e,t,r){return this.view.elevationProvider.getElevation(e,t,0,this.spatialReference,r)}async queryElevation(e,t,r,s,i){return this.view.elevationProvider.queryElevation(e,t,0,this.spatialReference,i,r,s)}}class u{constructor(e,t,r,s){this.spatialReference=t,this._getElevationQueryProvider=r,this._queries=new Array,this._queryOptions={...s,ignoreInvisibleLayers:!0},this._frameTask=e.registerTask(a.ELEVATION_QUERY,(()=>this._update()),(()=>this._queries.length>0))}destroy(){this._frameTask.remove()}queryElevation(e,o,n,a=0){return r(((r,l)=>{const u={x:e,y:o,minDemResolution:a,result:{resolve:r,reject:l},signal:n};this._queries.push(u),s(n,(()=>{t(this._queries,u),l(i())}))}))}_update(){const t=this._queries;this._queries=[];const r=this._getElevationQueryProvider();if(!r)return void t.forEach((e=>e.result.reject()));const a=t.map((e=>[e.x,e.y])),l=t.reduce(((e,t)=>Math.min(e,t.minDemResolution)),1/0),u=new n({points:a,spatialReference:this.spatialReference}),c=t.length>1&&t.some((e=>!!e.signal))?o():null,h=e(c)?c.signal:t[0].signal;if(e(c)){let e=0;t.forEach((r=>s(r.signal,(()=>{e++,r.result.reject(i()),e===t.length&&c.abort()}))))}const m={...this._queryOptions,minDemResolution:l,signal:h};r.queryElevation(u,m).then((r=>{t.forEach(((t,s)=>{e(t.signal)&&t.signal.aborted?t.result.reject(i()):t.result.resolve(r.geometry.points[s][2])}))})).catch((e=>{t.forEach((t=>t.result.reject(e)))}))}get test(){const e=this;return{update:()=>e._queries.length>0&&e._update()}}}export{u as ElevationQuery,l as ViewElevationProvider};
