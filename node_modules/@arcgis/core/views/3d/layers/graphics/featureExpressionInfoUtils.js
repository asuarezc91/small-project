/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{loadArcade as t}from"../../../../support/arcadeOnDemand.js";import{hydrateGeometry as r}from"../../../../layers/graphics/hydratedFeatures.js";const n=e.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function c(e){return{cachedResult:e.cachedResult,arcade:e.arcade?{func:e.arcade.func,context:e.arcade.modules.arcadeUtils.createExecContext(null,{sr:e.arcade.context.spatialReference}),modules:e.arcade.modules}:null}}function o(e){const t=e&&e.expression;if("string"==typeof t){const e=p(t);if(null!=e)return{cachedResult:e}}return null}async function a(e,r,n){const c=e&&e.expression;if("string"!=typeof c)return null;const o=p(c);if(null!=o)return{cachedResult:o};const a=await t(),u=a.arcadeUtils,s=u.createSyntaxTree(c);return u.dependsOnView(s)?(null!=n&&n.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:u.createFunction(s),context:u.createExecContext(null,{sr:r}),modules:a}}}function u(e,t,r){return e.arcadeUtils.createFeature(t.attributes,t.geometry,r)}function s(e,t){if(null!=e&&!f(e)){if(!t||!e.arcade)return void n.errorOncePerTick("Arcade support required but not provided");const c=t;c._geometry&&(c._geometry=r(c._geometry)),e.arcade.modules.arcadeUtils.updateExecContext(e.arcade.context,t)}}function l(e){if(null!=e){if(f(e))return e.cachedResult;const t=e.arcade;let r=e.arcade.modules.arcadeUtils.executeFunction(t.func,t.context);return"number"!=typeof r&&(e.cachedResult=0,r=0),r}return 0}function i(e,t=!1){let r=e&&e.featureExpressionInfo;const n=r&&r.expression;return t||"0"===n||(r=null),r}const d={cachedResult:0};function f(e){return null!=e.cachedResult}function p(e){return"0"===e?0:null}export{c as clone,a as createContext,o as createContextWithoutExpressionSupport,u as createFeature,l as execute,i as extractExpressionInfo,s as setContextFeature,d as zeroContext};
