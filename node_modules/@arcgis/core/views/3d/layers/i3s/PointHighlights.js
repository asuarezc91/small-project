/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{makeHandle as t}from"../../../../core/handleUtils.js";import{generateObject3DStateId as i}from"../../webgl-engine/lib/Object3DStateSet.js";class h{constructor(e){this.context=e,this.highlights=new Set}get hasHighlights(){return this.highlights.size>0}destroy(){this.highlights=null}add(e){const i=new s(e);return this.highlights.add(i),this.enableSet(i),t((()=>this.removeSet(i)))}removeSet(e){this.disableSet(e),this.highlights.delete(e)}enableSet(e){e.enabled||(e.enabled=!0,this.context.forEachNode((t=>this.enableSetForNode(e,t))))}enableSetForNode(e,t){if(!e.enabled)return;const i=e.ids.get(t.id);i&&i.forEach((i=>this.context.addHighlight(t,i,e.id)))}disableSet(e){e.enabled&&(e.enabled=!1,this.context.forEachNode((t=>this.disableSetForNode(e,t))))}disableSetForNode(e,t){e.enabled||this.context.removeHighlight(t,e.id)}nodeAdded(e){this.highlights.forEach((t=>this.enableSetForNode(t,e)))}nodeRemoved(e){this.highlights.forEach((t=>this.disableSetForNode(t,e)))}removeAll(){this.highlights.forEach((e=>this.disableSet(e)))}}class s{constructor(t){this.id=i(0),this.ids=new Map,this.enabled=!1;for(const i of t)e(i)&&this.add(i.nodeId,i.pointId)}add(e,t){const i=this.ids.get(e);i?i.add(t):this.ids.set(e,new Set([t]))}}export{h as PointHighlights};
