/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{isSome as t}from"../../../../core/maybe.js";import r from"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import o from"../../../../core/Accessor.js";import n from"../../../../core/Evented.js";import{c as a}from"../../../../chunks/vec3f64.js";import{g as c,i as l}from"../../../../chunks/vec3.js";import{n as p}from"../../../../chunks/mat4.js";import{empty as h,expand as d}from"../../../../geometry/support/aaBoundingRect.js";import{a as m}from"../../../../chunks/mat4f64.js";import{Intersector as f}from"../../webgl-engine/lib/Intersector.js";const u=h(),v=m(),x=a(),y=a(),j=a(),E=r.getLogger("esri.views.3d.layers.i3s.I3SElevationProvider");let g=class extends(n.EventedMixin(o)){constructor(e){super(e),this.tmpEvent={spatialReference:null,extent:u,context:"scene"}}initialize(){this.view=this.layerView.view,this.renderCoordsHelper=this.view.renderCoordsHelper,this.intersector=new f(this.view.state.mode),this.intersector.options.store=0;const e=this.layerView.i3slayer.fullExtent;this.zmin=e.zmin,this.zmax=e.zmax,this.tmpEvent.context=this.intersectionHandler.isGround?"ground":"scene"}getElevation(e,t,r,s){if(x[0]=e,x[1]=t,x[2]=r,!this.renderCoordsHelper.toRenderCoords(x,s,x))return E.error("could not project point to compute elevation"),null;const i=this.layerView.elevationOffset,o=this.zmin+i,n=this.zmax+i;return c(y,x),c(j,x),this.renderCoordsHelper.setAltitude(n,y),this.renderCoordsHelper.setAltitude(o,j),this.intersector.reset(y,j),this.intersectionHandler.intersect(this.intersector,null,y,j),this.intersector.results.min.getIntersectionPoint(x)?this.renderCoordsHelper.getAltitude(x):null}layerChanged(){this.spatialReference&&(this.tmpEvent.extent=this.computeLayerExtent(),this.tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this.tmpEvent))}objectChanged(e){this.spatialReference&&(this.tmpEvent.extent=this.computeObjectExtent(e),this.tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this.tmpEvent))}computeObjectExtent(e){return h(u),this._expandExtent(e,u),u}computeLayerExtent(){h(u);for(const e of this.layerView.getVisibleNodes())this._expandExtent(e,u);return u}_expandExtent(e,r){const s=e.visibilityObb||e.serviceObbInRenderSR;if(t(s)){p(v,s.quaternion),v[12]=s.center[0],v[13]=s.center[1],v[14]=s.center[2];for(let e=0;e<8;++e)x[0]=1&e?s.halfSize[0]:-s.halfSize[0],x[1]=2&e?s.halfSize[1]:-s.halfSize[1],x[2]=4&e?s.halfSize[2]:-s.halfSize[2],l(x,x,v),this.renderCoordsHelper.fromRenderCoords(x,x,this.spatialReference),d(r,x)}else{const t=e.renderMbs[3],s=c(y,e.renderMbs);s[0]-=t,s[1]-=t,s[2]-=t;const i=c(j,e.renderMbs);i[0]+=t,i[1]+=t,i[2]+=t;for(let e=0;e<8;++e)x[0]=1&e?s[0]:i[0],x[1]=2&e?s[1]:i[1],x[2]=4&e?s[2]:i[2],this.renderCoordsHelper.fromRenderCoords(x,x,this.spatialReference),d(r,x)}}};e([s({constructOnly:!0})],g.prototype,"layerView",void 0),e([s({constructOnly:!0})],g.prototype,"intersectionHandler",void 0),e([s()],g.prototype,"view",void 0),e([s({readOnly:!0,aliasOf:"view.elevationProvider.spatialReference"})],g.prototype,"spatialReference",void 0),g=e([i("esri.views.3d.layers.i3s.I3SElevationProvider")],g);var b=g;export default b;
