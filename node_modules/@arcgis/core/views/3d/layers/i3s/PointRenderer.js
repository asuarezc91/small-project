/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as e,unwrap as i,isSome as t}from"../../../../core/maybe.js";import{c as s}from"../../../../chunks/vec3f64.js";import{f as n,l as r,a as o,p as h,d as a,o as l,s as c}from"../../../../chunks/vec3.js";import{i as d,t as u,m}from"../../../../chunks/mat4.js";import{I as p}from"../../../../chunks/mat4f64.js";import{s as f}from"../../../../chunks/vec4.js";import{create as g,POSITIVE_INFINITY as _,offset as x,contains as S,containsPoint as z,equals as b,set as P}from"../../../../geometry/support/aaBoundingBox.js";import{Default3D as w}from"../../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{c as R}from"../../../../chunks/mat4f32.js";import{c as v}from"../../../../chunks/vec3f32.js";import{plane as q,ray as y}from"../../support/geometryUtils.js";import M from"../../../webgl/BufferObject.js";import j from"../../../webgl/VertexArrayObject.js";import{IntersectorResult as F}from"../../webgl-engine/lib/intersectorUtils.js";import{Slice as H}from"../../webgl-engine/core/shaderLibrary/Slice.glsl.js";import{OutputHighlight as U}from"../../webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js";import{minimumDistancePlane as V,maximumDistancePlane as C,intersectLine as E,toAaBoundingBox as A}from"../../support/orientedBoundingBox.js";import{PointHighlights as B}from"./PointHighlights.js";import{PointRendererTechniqueConfiguration as L,PointRendererTechnique as O}from"../../webgl-engine/shaders/PointRendererTechnique.js";const N={positions:[{name:"position",count:3,type:5126,offset:0,stride:12,normalized:!1}],colors:[{name:"color",count:3,type:5121,offset:0,stride:3,normalized:!0}]};class k{constructor(e){this._params=e,this.type="Point",this.isGround=!1,this._bindParameters={inverseViewport:[0,0],highlightDepthTexture:null},this._highlights=new B({forEachNode:e=>this.forEachNode(e),addHighlight:(e,i,t)=>this.addHighlight(e,i,t),removeHighlight:(e,i)=>this.removeHighlight(e,i)}),this.canRender=!0,this.layerUid="",this._useFixedSizes=!1,this._scaleFactor=1,this._minSizePx=0,this._useRealWorldSymbolSizes=!1,this._size=0,this._sizePx=0,this._slicePlaneEnabled=!1,this._clipBox=g(_),this._techniqueConfig=new L,this.tempMatrix4=R(),this.tempVec3=v(),this.nodes=[]}get needsHighlight(){return this._highlights.hasHighlights}initializeRenderContext(e){this._initContext=e,this._techniqueRep=this._initContext.shaderTechniqueRep,e.requestRender()}uninitializeRenderContext(){}intersect(e,i,t,c){const d=s(),u=s(),m=s(),_=s(),b=q.create(),P=e.camera.perScreenPixelRatio/2,w=e.camera.near,R=this._getSizeParams();n(u,c,t);const v=1/r(u);o(u,u,v),h(m,u),f(b,u[0],u[1],u[2],-a(u,t));class M{constructor(){this.node=null,this.pointId=null,this.point=null,this.dist=null,this.normal=null,this.layerUid=""}}const j=new M,H=new M,U=[],B=g(),L=g(this._clipBox);x(L,-t[0],-t[1],-t[2],L);for(const s of this.nodes){const r=s.splatSize*this._scaleFactor;let o=V(s.obb,b),h=C(s.obb,b);o-=W(r,o+w,R,P,s.isLeaf),h-=W(r,h+w,R,P,s.isLeaf);const p=h<0,f=null!=j.dist&&null!=H.dist&&j.dist<o*v&&H.dist>h*v;if(p||f)continue;const g=T(r,h+w,R,P,s.isLeaf);if(!E(s.obb,t,u,g))continue;const q=g*g;A(s.obb,B),x(B,-t[0],-t[1],-t[2],B);const y=!S(L,B);n(_,s.origin,t);const F=s.coordinates.length/3;for(let n=0;n<F;n++){if(d[0]=_[0]+s.coordinates[3*n],d[1]=_[1]+s.coordinates[3*n+1],d[2]=_[2]+s.coordinates[3*n+2],y&&!z(L,d))continue;const o=a(d,u),h=l(d)-o*o;if(h>q)continue;let p=o+w;const f=W(r,p,R,P,s.isLeaf);if(o-f<0)continue;p-=f;const g=T(r,p,R,P,s.isLeaf);if(h>g*g)continue;const x=(o-f)*v,S=e=>{e.point=D(s,n,e.point),e.dist=x,e.normal=m,e.node=s,e.pointId=n,e.layerUid=this.layerUid};if((null==j.dist||x<j.dist)&&(null==i||i(t,c,x))&&S(j),0!==e.options.store&&(null==H.dist||x>H.dist)&&(null==i||i(t,c,x))&&S(H),2===e.options.store&&(null==i||i(t,c,x))){const e=new M;S(e),U.push(e)}}}const O=e=>{const{layerUid:i,node:t,pointId:s}=e;return{type:"external",point:e.point,metadata:{layerUid:i,createGraphic:()=>this._params.createGraphic(t,s,e.point)}}},N=(e,i)=>{const t=O(i),s=`${i.layerUid}/${i.node.id}/${i.pointId}`;e.set(t,s,i.dist,i.normal,p,void 0),e.intersector="PointRenderer"};if(null!=j.dist){const i=e.results.min;(null==i.dist||j.dist<i.dist)&&N(i,j)}if(null!=H.dist&&0!==e.options.store){const i=e.results.max;(null==i.dist||H.dist>i.dist)&&N(i,H)}if(2===e.options.store){const i=y.fromPoints(t,c);for(const t of U){const s=new F(i);N(s,t),e.results.all.push(s)}}}render(e){if(0!==e.pass&&2!==e.pass&&5!==e.pass)return!1;const i=2===e.pass,t=e.rctx;for(const i of this.nodes)null==i.vao&&this._initNode(e,i);const s=this._getSizeParams(),n=this.selectTechnique(e,s),r=n.program;if(null==r||0===this.nodes.length)return!0;const o=this._clipBox,h=!b(o,_,((e,i)=>e===i));h||(c(this.tempVec3,-1/0,-1/0,-1/0),r.setUniform3fv("uClipMin",this.tempVec3),c(this.tempVec3,1/0,1/0,1/0),r.setUniform3fv("uClipMax",this.tempVec3)),t.bindProgram(r),n.bindPipelineState(t),r.setUniformMatrix4fv("uProjectionMatrix",e.camera.projectionMatrix),i&&r.setUniform2f("nearFar",e.camera.near,e.camera.far),e.isHighlightPass&&(this._bindParameters.inverseViewport[0]=1/e.camera.fullViewport[2],this._bindParameters.inverseViewport[1]=1/e.camera.fullViewport[3],this._bindParameters.highlightDepthTexture=e.highlightDepthTexture,U.bindOutputHighlight(t,r,this._bindParameters));const a=e.camera.pixelRatio;s.drawFixedSize&&r.setUniform2f("uPointScale",s.fixedSize*a,e.camera.fullHeight);const l=this._slicePlaneEnabled?e.sliceHelper&&e.sliceHelper.plane:null;for(const i of this.nodes){if(0===i.coordinates.length)continue;if(e.isHighlightPass&&!i.highlights)continue;if(r.setUniform2f("uScreenMinMaxSize",s.screenMinSize*a,I(i.isLeaf)*a),!s.drawFixedSize){const t=i.splatSize*this._scaleFactor;r.setUniform2f("uPointScale",t*a,e.camera.fullHeight/a)}const p=i.origin;h&&(c(this.tempVec3,o[0]-p[0],o[1]-p[1],o[2]-p[2]),r.setUniform3fv("uClipMin",this.tempVec3),c(this.tempVec3,o[3]-p[0],o[4]-p[1],o[5]-p[2]),r.setUniform3fv("uClipMax",this.tempVec3)),d(this.tempMatrix4),u(this.tempMatrix4,this.tempMatrix4,p),m(this.tempMatrix4,e.camera.viewMatrix,this.tempMatrix4),r.setUniformMatrix4fv("uModelViewMatrix",this.tempMatrix4),H.bindUniforms(r,n.configuration,l,p),t.bindVAO(i.vao),e.isHighlightPass?this._renderHighlightFragments(t,i):t.drawArrays(0,0,i.coordinates.length/3)}return!0}_renderHighlightFragments(t,s){const n=s.highlights;if(e(n))return;let r=i(n[0].component),o=r+1;for(let e=1;e<n.length;e++){const s=i(n[e].component);if(s!==o){const e=o-r;e>0&&t.drawArrays(0,r,e),r=s}o=s+1}const h=o-r;h>0&&t.drawArrays(0,r,h)}set useFixedSizes(e){this._useFixedSizes!==e&&(this._useFixedSizes=e,this._requestRender())}get useFixedSizes(){return this._useFixedSizes}set scaleFactor(e){this._scaleFactor!==e&&(this._scaleFactor=e,this._requestRender())}get scaleFactor(){return this._scaleFactor}set minSizePx(e){this._minSizePx!==e&&(this._minSizePx=e,this._requestRender())}get minSizePx(){return this._minSizePx}set useRealWorldSymbolSizes(e){this._useRealWorldSymbolSizes!==e&&(this._useRealWorldSymbolSizes=e,this._requestRender())}get useRealWorldSymbolSizes(){return this._useRealWorldSymbolSizes}set size(e){this._size!==e&&(this._size=e,this._requestRender())}get size(){return this._size}set sizePx(e){this._sizePx!==e&&(this._sizePx=e,this._requestRender())}get sizePx(){return this._sizePx}set clippingBox(e){P(this._clipBox,e||_)}get slicePlane(){return this._slicePlaneEnabled}set slicePlane(e){this._slicePlaneEnabled!==e&&(this._slicePlaneEnabled=e,this._requestRender())}get intersectionHandlerId(){return this.layerUid}addNode(e){this.nodes.push(e),this._highlights.nodeAdded(e),this._requestRender()}removeNode(e){let i=null;return this.nodes=this.nodes.filter((t=>t.id!==e||(i=t,t.vao&&(t.vao.dispose(!0),t.vao=null),this._highlights.nodeRemoved(t),!1))),this._requestRender(),i}forEachNode(e){this.nodes.forEach(e)}removeAll(){this.nodes.forEach((e=>{e.vao&&(e.vao.dispose(!0),e.vao=null)})),this._highlights.removeAll(),this.nodes=[],this._requestRender()}highlight(e){return this._highlights.add(e)}addHighlight(i,t,s){i.highlights=function(i,t,s){e(i)&&(i=[]);const n={component:t,id:s};i.push(n);const r=G(n);let o=i.length-1;for(;o>0&&r<G(i[o-1]);)[i[o-1],i[o]]=[i[o],i[o-1]],--o;return i}(i.highlights,t,s),this._requestRender()}removeHighlight(i,t){i.highlights=function(i,t){if(e(i))return i;const s=i.filter((e=>e.id!==t));if(0===s.length)return null;return s}(i.highlights,t),this._requestRender()}_initNode(e,i){const t=e.rctx;i.vao=new j(t,w,N,{positions:M.createVertex(t,35044,i.coordinates),colors:M.createVertex(t,35044,i.rgb)})}_requestRender(){this._initContext&&this._initContext.requestRender()}_getSizeParams(){const e=this._useFixedSizes,i=e&&!this._useRealWorldSymbolSizes,t=i?this._sizePx:this._size;let s=this._minSizePx;return e&&(s=0),{drawScreenSpace:i,drawFixedSize:e,fixedSize:t,screenMinSize:s}}selectTechnique(e,i){return this._techniqueConfig.drawScreenSize=i.drawScreenSpace,this._techniqueConfig.slicePlaneEnabled=this._slicePlaneEnabled,this._techniqueConfig.sceneHasOcludees=e.hasOccludees,this._techniqueConfig.output=2===e.pass?1:5===e.pass?4:0,this._techniqueRep.acquireAndReleaseExisting(O,this._techniqueConfig,this._technique)}}function I(e){return e?256:64}function T(e,i,t,s,n){if(t.drawScreenSpace)return t.fixedSize*i*s;const r=I(n)*i*s;return t.drawFixedSize?Math.min(t.fixedSize/2,r):t.screenMinSize>0?Math.min(Math.max(t.screenMinSize*i*s,e/2),r):Math.min(e/2,r)}function W(e,i,t,s,n){return t.drawScreenSpace?0:T(e,i,t,s,n)}function D(e,i,t){return null==t&&(t=s()),t[0]=e.origin[0]+e.coordinates[3*i],t[1]=e.origin[1]+e.coordinates[3*i+1],t[2]=e.origin[2]+e.coordinates[3*i+2],t}function G(e){return t(e.component)?e.component:-1}!function(e){e.isInstanceOfNode=function(e){return e.hasOwnProperty("splatSize")}}(k||(k={}));export{k as PointRenderer};
