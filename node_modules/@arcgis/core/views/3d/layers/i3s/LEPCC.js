/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../core/Error.js";const t=0,o=10,r=10,n=12,i=16;function c(e,i,c){return{identifier:String.fromCharCode.apply(null,new Uint8Array(e,c+t,o)),version:i.getUint16(c+r,true),checksum:i.getUint32(c+n,true)}}const s=0,l=4,d=8,a=16,u=24,w=32,h=40,f=48,g=56,p=64,U=72,m=80,M=84,y=88;function z(t){const o=new DataView(t,0);let r=0;const{identifier:n,version:z}=c(t,o,r);if(r+=i,"LEPCC     "!==n)throw new e("lepcc-decode-error","Bad identifier");if(z>1)throw new e("lepcc-decode-error","Unknown version");const B=function(e,t){return{sizeLo:e.getUint32(t+s,!0),sizeHi:e.getUint32(t+l,!0),minX:e.getFloat64(t+d,!0),minY:e.getFloat64(t+a,!0),minZ:e.getFloat64(t+u,!0),maxX:e.getFloat64(t+w,!0),maxY:e.getFloat64(t+h,!0),maxZ:e.getFloat64(t+f,!0),errorX:e.getFloat64(t+g,!0),errorY:e.getFloat64(t+p,!0),errorZ:e.getFloat64(t+U,!0),count:e.getUint32(t+m,!0),reserved:e.getUint32(t+M,!0)}}(o,r);r+=y;if(B.sizeHi*Math.pow(2,32)+B.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const F=new Float64Array(3*B.count),b=[],C=[],A=[],k=[];if(r=L(t,r,b),r=L(t,r,C),r=L(t,r,A),r=L(t,r,k),r!==t.byteLength)throw new e("lepcc-decode-error","Bad length");let v=0,X=0;for(let e=0;e<b.length;e++){X+=b[e];let t=0;for(let o=0;o<C[e];o++){t+=A[v];const e=k[v];F[3*v]=Math.min(B.maxX,B.minX+2*B.errorX*t),F[3*v+1]=Math.min(B.maxY,B.minY+2*B.errorY*X),F[3*v+2]=Math.min(B.maxZ,B.minZ+2*B.errorZ*e),v++}}return{errorX:B.errorX,errorY:B.errorY,errorZ:B.errorZ,result:F}}function L(e,t,o){const r=[];t=B(e,t,r);const n=[];for(let i=0;i<r.length;i++){n.length=0,t=B(e,t,n);for(let e=0;e<n.length;e++)o.push(n[e]+r[i])}return t}function B(t,o,r){const n=new DataView(t,o),i=n.getUint8(0),c=31&i,s=!!(32&i),l=(192&i)>>6;let d=0;if(0===l)d=n.getUint32(1,true),o+=5;else if(1===l)d=n.getUint16(1,true),o+=3;else{if(2!==l)throw new e("lepcc-decode-error","Bad count type");d=n.getUint8(1),o+=2}if(s)throw new e("lepcc-decode-error","LUT not implemented");const a=Math.ceil(d*c/8),u=new Uint8Array(t,o,a);let w=0,h=0,f=0;const g=-1>>>32-c;for(let e=0;e<d;e++){for(;h<c;)w|=u[f]<<h,h+=8,f+=1;r[e]=w&g,w>>>=c,h-=c,h+c>32&&(w|=u[f-1]>>8-h)}return o+f}const F=0,b=4,C=8,A=12,k=14,v=15,X=16;function Y(t){const o=new DataView(t,0);let r=0;const{identifier:n,version:s}=c(t,o,r);if(r+=i,"ClusterRGB"!==n)throw new e("lepcc-decode-error","Bad identifier");if(s>1)throw new e("lepcc-decode-error","Unknown version");const l=function(e,t){return{sizeLo:e.getUint32(t+F,!0),sizeHi:e.getUint32(t+b,!0),count:e.getUint32(t+C,!0),colorMapCount:e.getUint16(t+A,!0),lookupMethod:e.getUint8(t+k),compressionMethod:e.getUint8(t+v)}}(o,r);r+=X;if(l.sizeHi*Math.pow(2,32)+l.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");if((2===l.lookupMethod||1===l.lookupMethod)&&0===l.compressionMethod){if(3*l.colorMapCount+l.count+r!==t.byteLength||l.colorMapCount>256)throw new e("lepcc-decode-error","Bad count");const o=new Uint8Array(t,r,3*l.colorMapCount),n=new Uint8Array(t,r+3*l.colorMapCount,l.count),i=new Uint8Array(3*l.count);for(let e=0;e<l.count;e++){const t=n[e];i[3*e]=o[3*t],i[3*e+1]=o[3*t+1],i[3*e+2]=o[3*t+2]}return i}if(0===l.lookupMethod&&0===l.compressionMethod){if(3*l.count+r!==t.byteLength||0!==l.colorMapCount)throw new e("lepcc-decode-error","Bad count");return new Uint8Array(t,r).slice()}if(l.lookupMethod<=2&&1===l.compressionMethod){if(r+3!==t.byteLength||1!==l.colorMapCount)throw new e("lepcc-decode-error","Bad count");const n=o.getUint8(r),i=o.getUint8(r+1),c=o.getUint8(r+2),s=new Uint8Array(3*l.count);for(let e=0;e<l.count;e++)s[3*e]=n,s[3*e+1]=i,s[3*e+2]=c;return s}throw new e("lepcc-decode-error","Bad method "+l.lookupMethod+","+l.compressionMethod)}const Z=0,x=4,P=8,H=12,D=14,V=15,E=16;function j(t){const o=new DataView(t,0);let r=0;const{identifier:n,version:s}=c(t,o,r);if(r+=i,"Intensity "!==n)throw new e("lepcc-decode-error","Bad identifier");if(s>1)throw new e("lepcc-decode-error","Unknown version");const l=function(e,t){return{sizeLo:e.getUint32(t+Z,!0),sizeHi:e.getUint32(t+x,!0),count:e.getUint32(t+P,!0),scaleFactor:e.getUint16(t+H,!0),bitsPerPoint:e.getUint8(t+D),reserved:e.getUint8(t+V)}}(o,r);r+=E;if(l.sizeHi*Math.pow(2,32)+l.sizeLo!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const d=new Uint16Array(l.count);if(8===l.bitsPerPoint){if(l.count+r!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const o=new Uint8Array(t,r,l.count);for(let e=0;e<l.count;e++)d[e]=o[e]*l.scaleFactor}else if(16===l.bitsPerPoint){if(2*l.count+r!==t.byteLength)throw new e("lepcc-decode-error","Bad size");const o=new Uint16Array(t,r,l.count);for(let e=0;e<l.count;e++)d[e]=o[e]*l.scaleFactor}else{const o=[];if(B(t,r,o)!==t.byteLength)throw new e("lepcc-decode-error","Bad size");for(let e=0;e<l.count;e++)d[e]=o[e]*l.scaleFactor}return d}export{j as decodeIntensity,Y as decodeRGB,z as decodeXYZ};
