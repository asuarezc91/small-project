/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import s from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{reject as i}from"../../../core/promiseUtils.js";import{LayerView3D as t}from"./LayerView3D.js";import{TiledLayerView3D as a}from"./TiledLayerView3D.js";import l from"../../layers/LayerView.js";let p=class extends(a(t(l))){initialize(){const e=this.get("view.map.allLayers"),r=e&&e.includes(this.layer),o=this.get("view.map.ground.layers"),t=o&&o.includes(this.layer);if(r&&!t){const e=new s("layerview:elevation-layer-only","3D elevation layer '"+this.layer.id+"' can only be added in the map ground");this.addResolvingPromise(i(e))}this._addTilingSchemeMatchPromise()}};e([r({readOnly:!0,aliasOf:"layer.fullExtent"})],p.prototype,"fullExtent",void 0),e([r()],p.prototype,"layer",void 0),e([r({readOnly:!0,aliasOf:"layer.tileInfo"})],p.prototype,"tileInfo",void 0),p=e([o("esri.views.3d.layers.ElevationLayerView3D")],p);var m=p;export default m;
