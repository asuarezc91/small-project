/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{destroyMaybe as t,isNone as r,isSome as i,unwrap as s}from"../../../core/maybe.js";import o from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{reject as d,resolve as l}from"../../../core/promiseUtils.js";import{extentContainsCoords3D as h}from"../../../geometry/support/contains.js";import{collectLabelingFields as u,collectFilterFields as c,collectFields as p}from"../../../layers/support/fieldUtils.js";import g from"../../../Graphic.js";import{f as m,c as y}from"../../../chunks/vec3f64.js";import{b as f}from"../../../chunks/vec3.js";import{init as _}from"../../../core/watchUtils.js";import{create as b}from"../../../geometry/support/aaBoundingRect.js";import{projectBuffer as v,projectVectorToVector as E,projectBoundingRect as x}from"../../../geometry/projection.js";import{Task as I}from"../../support/Scheduler.js";import{getGeometryZScaler as w}from"../../../tasks/operations/zscale.js";import S from"../../../tasks/support/Query.js";import{estimateSize as D,makeDehydratedPoint as F}from"../../../layers/graphics/dehydratedFeatures.js";import C from"../support/debugFlags.js";import{hydrateGraphic as O}from"../../../layers/graphics/hydratedFeatures.js";import{getRenderingInfo as A,getRenderingInfoAsync as j}from"../../../renderers/support/renderingInfoUtils.js";import{LayerView3D as N}from"./LayerView3D.js";import{updatingProgress as T}from"./support/layerViewUpdatingProperties.js";import{compute as V}from"../support/orientedBoundingBox.js";import G from"../../layers/support/FeatureFilter.js";import R from"../../layers/SceneLayerView.js";import{checkSpatialReferences as M,containsDraco as U,whenGraphicAttributes as L,getCachedAttributeValue as q}from"./i3s/I3SUtil.js";import k from"../../../layers/graphics/controllers/I3SOnDemandController.js";import{GraphicsMap as P}from"../support/GraphicsMap.js";import{I3SAttributeOverrides as Q}from"./i3s/I3SAttributeOverrides.js";import{DefinitionExpressionSceneLayerView as H}from"./support/DefinitionExpressionSceneLayerView.js";import B from"./graphics/QueryEngine.js";import z from"./graphics/Graphics3DFeatureLikeLayerView.js";import{I3SPointsWorkerHandle as W}from"./I3SPointsWorkerHandle.js";import{PopupSceneLayerView as K}from"./support/PopupSceneLayerView.js";import{createInteractiveEditSession as Z,processAttributeEdits as J}from"./i3s/attributeEditing.js";import{defineFieldProperties as Y}from"./support/fieldProperties.js";const $=o.getLogger("esri.views.3d.layers.SceneLayerGraphicsView3D"),X=Y();let ee=class extends(H(K(N(R)))){constructor(){super(...arguments),this._nodesAddedToStage=new Map,this.drapeSourceType=1,this._queryEngine=null,this._memCache=null,this.loadedGraphics=new P,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}initialize(){var e;const t=this.layer;this._attributeOverrides=new Q(this.layer,null==(e=this.view.resourceController)?void 0:e.memoryController),M(t,this.view.spatialReference,this.view.viewingMode);for(const e of["layer.renderer","layer.labelingInfo","layer.labelsVisible","definitionExpressionFields","filter"])this.updatingHandles.add(this,e,(()=>this._updateRequiredFields()));this.updatingHandles.add(t,"rangeInfos",(e=>this._rangeInfosChanged(e)),2),this.updatingHandles.add(t,"renderer",((e,t)=>this._rendererChange(e,t))),this.updatingHandles.add(this,"parsedDefinitionExpression",(()=>this._filterChange())),this.handles.add(_(C,"I3S_TREE_SHOW_TILES",(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import("./support/I3STreeDebugger.js").then((({I3STreeDebugger:t})=>{!this._treeDebugger&&C.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||!this._treeDebugger||C.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}))),this._updateRequiredFields(),this._set("graphics3d",new z({owner:this,layer:t,preferredUpdatePolicy:1,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentVisibilityEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,suspendResumeExtentMode:"data",dataExtent:t.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.graphics3d.elevationAlignment&&this.graphics3d.elevationAlignment.events.on("invalidate-elevation",(e=>this._invalidateElevation(e))),this.supportsHeightUnitConversion&&(this._verticalScale=w("point",t.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.graphics3d.setup()),this._memCache=this.view.resourceController.memoryController.getMemCache(t.uid),this._controller=new k({layerView:this,scaleVisibilityEnabled:!1}),U(this.layer.geometryDefinitions)&&(this._worker=new W(this.view.resourceController.scheduler)),this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e)))),this.when((()=>{this._queryEngine=new B({layerView:this,task:I.FEATURE_QUERY_ENGINE}),this.updatingHandles.add(this,"maximumNumberOfFeatures",(e=>this._controller.featureTarget=e),2),this.updatingHandles.add(this,"suspended",(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=t(this._treeDebugger),this._attributeOverrides=t(this._attributeOverrides),this._set("graphics3d",t(this.graphics3d)),this._controller=t(this._controller),this._queryEngine=t(this._queryEngine),this._worker=t(this._worker),this._memCache=t(this._memCache),this._nodesAddedToStage.clear()}get maximumNumberOfFeatures(){const e=this.graphics3d&&this.graphics3d.graphicsCore&&this.graphics3d.graphicsCore.displayFeatureLimit;return e?e.maximumNumberOfFeatures:0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&(!!this._controller&&!this._controller.leavesReached)}get hasM(){return!1}get hasZ(){return!0}notifyGraphicUpdate(e,t){this.graphics3d.graphicsCore.notifyGraphicUpdate(e,t)}async whenGraphicAttributes(e,t){return L(this.layer,e,this._getObjectIdField(),t,(()=>[...this._nodesAddedToStage.values()]),{populateObjectId:!0})}getGraphicFromGraphicUid(e){if(!this.loadedGraphics)return null;const t=O(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t&&t.attributes&&t.attributes[r]?(t.layer=this.layer,t.sourceLayer=this.layer,t):null}whenGraphicBounds(e,t){return this.graphics3d.graphicsCore.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphics3d.graphicsCore.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){return!!(this._controller&&this._controller.updating||this.graphics3d&&this.graphics3d.updating)}getRenderingInfo(e,t,r){const i=A(e,{renderer:t,arcade:r});if(i&&i.color){const e=i.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return i}async getRenderingInfoAsync(e,t,r,i){return j(e,{renderer:t,arcade:r,...i})}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}highlight(e){return this.graphics3d.highlight(e,this.layer.objectIdField)}createInteractiveEditSession(e){return Z(this.attributeEditingContext,e)}async extractBinaryPointData(e,t){const s={geometryBuffer:e.geometryBuffer};return r(this._worker)&&(this._worker=new W(this.view.resourceController.scheduler)),this._worker.invoke(s,t).then((e=>{if(i(e)){return{positionData:e.positions,featureIds:e.featureIds}}throw new Error("Failed to decompress Draco point data")}))}checkExtent(e,t){e&&!h(e,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&$.error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&$.error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++)}async addNode(e,t,r){if(!ie(t)&&!re(t))return d();if(this._nodesAddedToStage.has(e.index))return void $.error("I3S node "+e.id+" already added");const i=this.layer.fullExtent&&function(e,t){e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t);e.hasM&&(e.mmin-=t,e.mmax+=t);return e}(this.layer.fullExtent.clone(),.5),s=this._controller.crsVertex,o=[],a={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(ie(t)?await this._addNodeBinaryPointData(e,a,t,i,o,r):re(t)&&this._addNodeLegacyPointData(e,a,t,i,o),await this._attributeOverrides.apply(a.featureIds,t.attributeDataInfo,r),e.numFeatures=a.graphics.length,this._updateNodeMemory(e),se(a),o.length>0&&(this.computeObb(e,o,s),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return this._cacheNodeData(a),l();if(this._verticalScale)for(const e of a.graphics)this._verticalScale(e.geometry);return this._nodesAddedToStage.set(e.index,a),this.loadedGraphics.addMany(a.graphics),this._filterNode(a),this._treeDebugger&&this._treeDebugger.update(),l()}computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;v(t,r,0,t,s,0,t.length/3);const o={data:t,size:3,offsetIdx:0,strideIdx:3};e.serviceObb=V(o),i.isGeographic&&E(e.serviceObb.center,s,e.serviceObb.center,i)}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return!1}updateNodeState(){}async _addNodeBinaryPointData(e,t,r,o,a,n){const l=await this.extractBinaryPointData(r,n);if(null==l)return d();const h=this._getObjectIdField(),u=this._controller.crsVertex,c=this.view.spatialReference,p=this.graphics3d.graphicsCore,{positionData:y,featureIds:_}=l,b=y.length/3,E=new Array;for(let t=0;t<b;t++){const r=i(e.serviceObb)?e.serviceObb.center:[0,0,0],n=3*t,d=m(y[n+0],y[n+1],y[n+2]);f(d,d,r),e.serviceObb||a.push(d[0],d[1],d[2]),o&&this.checkExtent(o,d);const l=_[t],b={};null!=l&&(b[h]=l);const x=null==l?g.generateUID():l;v(d,u,0,ae,c,0,1);const I=F(ae[0],ae[1],ae[2],c),w=this.loadedGraphics.get(x);if(i(w))w.level<e.level&&(ne.property="geometry",ne.graphic=w,ne.oldValue=s(w.geometry),ne.newValue=I,w.geometry=I,p.graphicUpdateHandler(ne)),E.push(w);else{const t=g.generateUID();E.push({objectId:x,uid:t,geometry:I,attributes:b,visible:!0,level:e.level})}}t.graphics=E,t.featureIds=_}_addNodeLegacyPointData(e,t,r,s,o){const a=this._getObjectIdField(),n=this._controller.crsVertex,d=this.view.spatialReference,l=[0,0,0],h=new Array,u=new Array;for(const t of r.pointData){const r=t.featureDataPosition,c=r.length,p=t.geometries&&t.geometries[0]||oe[c],m=t.featureIds[0];if("points"!==p.params.type)continue;s&&this.checkExtent(s,r);const y={};null!=m&&(y[a]=m);const f=null==m?g.generateUID():m;let _;"Embedded"===p.type&&(_=p.params.vertexAttributes.position);for(let t=0;t<_.length;t+=c){for(let e=0;e<c;e++)l[e]=r[e]+_[t+e];const s=3===c;e.serviceObb||o.push(l[0],l[1],s?l[2]:0),v(l,n,0,ae,d,0,1);const a=F(ae[0],ae[1],s?ae[2]:void 0,d),h=this.loadedGraphics.get(f);i(h)?u.push(h):u.push({objectId:f,uid:g.generateUID(),geometry:a,attributes:y,visible:!0})}h.push(m)}t.graphics=u,t.featureIds=h}_updateNodeMemory(e){e.memory=4096+(i(e.numFeatures)?e.numFeatures*this.graphics3d.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>D(t)+e),512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach((e=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}})),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){if(!this._nodesAddedToStage.has(e.index))return this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._updateNodeMemory(e),await this.updateAttributes(e.index,r,i),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update(),l();$.error("I3S node "+e.id+" already added")}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&i(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&i(t.attributeInfo))return t.attributeInfo.attributeData}setAttributeData(e,t){const i=this._nodesAddedToStage.get(e);i&&!r(i.attributeInfo)&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,r){const i=this._nodesAddedToStage.get(e);i&&(await this._attributeOverrides.apply(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i))}_attributeValuesChanged(e){if(se(e),this._filterNode(e),this.graphics3d.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.graphics3d.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||"OBJECTID"}async _rendererChange(e,t){const{layer:{fields:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every(((e,t)=>s[t]===o[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&$.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this._nodesAddedToStage.forEach((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression;for(const r of e.graphics){const e=r.visible;r.visible=!t||this._evaluateClause(t,r),e!==r.visible&&(ne.graphic=r,ne.property="visible",ne.oldValue=e,ne.newValue=r.visible,this.graphics3d.graphicsCore.graphicUpdateHandler(ne))}}async _updateRequiredFields(){const{layer:e,layer:{fields:t,renderer:r,labelsVisible:s},filter:o,definitionExpressionFields:a}=this,n=new Set;r&&await r.collectRequiredFields(n,t),s&&await u(n,e),i(o)&&await c(n,e,o),p(n,t,a),this._set("requiredFields",Array.from(n).sort())}_invalidateElevation(e){const t=this._controller.crsIndex;x(e.extent,e.spatialReference,de,t),this._controller.updateElevationChanged(de,t)}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return i(this.filter)?this.filter.createQuery(e):new S(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),null==t?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),null==t?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),null==t?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),null==t?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(r(e)?this.createQuery():S.from(e))}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return e?e.usedMemory:0}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return.8*((this._controller?this._controller.unloadedMemoryEstimate:0)+(e?e.unprocessedMemoryEstimate:0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){J(this.attributeEditingContext,e)}get attributeEditingContext(){const e=this._getObjectIdField();return{fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:e=>this._nodesAddedToStage.forEach((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this._attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,s)=>{this.setAttributeData(t,r);const o=this._nodesAddedToStage.get(t);if(i(s)){const t=this.loadedGraphics.get(s.attributes[e]);i(t)&&this.graphics3d.graphicsCore.recreateGraphics([t])}else i(o)&&this.graphics3d.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.graphics3d.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this._nodesAddedToStage.size,numFeatures:this.loadedGraphics.length}}};e([a()],ee.prototype,"graphics3d",void 0),e([a({type:G})],ee.prototype,"filter",void 0),e([a()],ee.prototype,"loadedGraphics",void 0),e([a()],ee.prototype,"layer",void 0),e([a({aliasOf:"layer"})],ee.prototype,"i3slayer",void 0),e([a()],ee.prototype,"_controller",void 0),e([a({dependsOn:["_controller.updating","graphics3d.updating"]})],ee.prototype,"updating",void 0),e([a({dependsOn:["_controller.rootNodeVisible"]})],ee.prototype,"suspended",void 0),e([a()],ee.prototype,"holeFilling",void 0),e([a(T)],ee.prototype,"updatingProgress",void 0),e([a({aliasOf:"_controller.updatingProgress"})],ee.prototype,"updatingProgressValue",void 0),e([a(X.requiredFields)],ee.prototype,"requiredFields",void 0),e([a(X.availableFields)],ee.prototype,"availableFields",void 0),e([a({type:Number,dependsOn:["graphics3d.graphicsCore.displayFeatureLimit"]})],ee.prototype,"maximumNumberOfFeatures",null),e([a({readOnly:!0,dependsOn:["suspended","_controller.leavesReached"]})],ee.prototype,"maximumNumberOfFeaturesExceeded",null),e([a({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.point.lodFactor"})],ee.prototype,"lodFactor",void 0),e([a({readOnly:!0})],ee.prototype,"hasM",null),e([a({readOnly:!0})],ee.prototype,"hasZ",null),ee=e([n("esri.views.3d.layers.SceneLayerGraphicsView3D")],ee);var te=ee;function re(e){return"pointData"in e}function ie(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function se(e){const t=e.attributeInfo;for(let r=0;r<e.graphics.length;r++){const s=e.graphics[r];if(s.attributes||(s.attributes={}),i(t)&&i(t.loadedAttributes))for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(s.attributes[e]=q(t.attributeData[e],r))}}const oe={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},ae=y(),ne={graphic:null,property:null,oldValue:null,newValue:null},de=b();export default te;
