/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import o from"../../../core/Accessor.js";import n from"../../../core/Handles.js";import{init as i}from"../../../core/watchUtils.js";import{InputManager as a,ViewEventPriorities as s}from"../../input/InputManager.js";import{BrowserEventSource as p}from"../../input/BrowserEventSource.js";import{PreventContextMenu as m}from"../../input/handlers/PreventContextMenu.js";import{SingleAndDoubleClick as d}from"../../input/recognizers/SingleAndDoubleClick.js";import{Drag as c}from"../../input/recognizers/Drag.js";import{ImmediateDoubleClick as g}from"../../input/recognizers/ImmediateDoubleClick.js";import{PointerClickHoldAndDrag as h}from"../../input/recognizers/PointerClickHoldAndDrag.js";import{DoubleClickZoom as l}from"./handlers/DoubleClickZoom.js";import{DragRotate as u}from"./handlers/DragRotate.js";import{DragZoom as w}from"./handlers/DragZoom.js";import{GamepadNavigation as y}from"./handlers/GamepadNavigation.js";import{KeyboardNavigation as _}from"./handlers/KeyboardNavigation.js";import{MouseWheelZoom as f}from"./handlers/MouseWheelZoom.js";import{PinchAndPanNavigation as D}from"./handlers/PinchAndPanNavigation.js";import{PointerDownCancelAnimation as j}from"./handlers/PointerDownCancelAnimation.js";import{SingleKeyResetHeading as v}from"./handlers/SingleKeyResetHeading.js";import{SingleKeyResetTilt as A}from"./handlers/SingleKeyResetTilt.js";import{TwoFingerTilt as M}from"./handlers/TwoFingerTilt.js";import{VerticalTwoFingerDrag as P}from"../../input/recognizers/VerticalTwoFingerDrag.js";let z=class extends o{constructor(){super(...arguments),this._handles=new n}destroy(){this._handles&&(this._handles.removeAll(),this._handles=null),this.disconnect()}get primaryDragAction(){return this._get("primaryDragAction")}set primaryDragAction(e){"pan"!==e&&"rotate"!==e||e===this._get("primaryDragAction")||(this._set("primaryDragAction",e),this._updateMode())}get mode(){return this._get("mode")}set mode(e){"default"!==e&&"pro"!==e||e===this._get("mode")||(this._set("mode",e),this._updateMode())}disconnect(){this.view.viewEvents.disconnect(),this._inputManager&&(this._inputManager.destroy(),this._inputManager=null),this._source&&(this._source.destroy(),this._source=null)}connect(){const e=this.view;this._source=new p(this.view.surface,e.input);const t=[new g,new h,new d,new c(this.view.navigation),new P],r=new a({eventSource:this._source,recognizers:t});this._inputManager=r,r.installHandlers("prevent-context-menu",[new m],s.INTERNAL),this._modeDragPan=new D(e,"primary"),this._modeDragRotate=new u(e,"secondary","center"),this._modeDragZoom=new w(e,"tertiary");const o="b",n={left:"ArrowLeft",right:"ArrowRight",forward:"ArrowUp",backward:"ArrowDown",up:"u",down:"j",headingLeft:"a",headingRight:"d",tiltUp:"w",tiltDown:"s",zoomIn:"+",zoomOut:"-"},z="n",R="p";r.installHandlers("navigation",[new j(e),new l(e),new y(e),new _(e,n),new f(e),new A(e,R),new v(e,z),new u(e,"primary","eye",[o]),new u(e,"secondary","center",[o]),new D(e,"tertiary",[o]),this._modeDragRotate,this._modeDragZoom,this._modeDragPan,new M(e)],s.INTERNAL),this.view.viewEvents.connect(r),this._updateMode(),i(this.view.navigation,"browserTouchPanEnabled",(e=>{this._source.browserTouchPanningEnabled=!e}))}_updateMode(){const e=this.mode,t=this.primaryDragAction,r=R.get(e).get(t);this._modeDragPan&&(this._modeDragPan.pointerAction=r.pan),this._modeDragRotate&&(this._modeDragRotate.pointerAction=r.rotate),this._modeDragZoom&&(this._modeDragZoom.pointerAction=r.zoom)}get test(){return{inputManager:this._inputManager,modeDragPan:this._modeDragPan,modeDragRotate:this._modeDragRotate,modeDragZoom:this._modeDragZoom}}};e([t()],z.prototype,"view",void 0),e([t({value:"pan"})],z.prototype,"primaryDragAction",null),e([t({value:"default"})],z.prototype,"mode",null),e([t({readOnly:!0,aliasOf:"_inputManager.hasPendingInputs"})],z.prototype,"hasPendingInputs",void 0),e([t({readOnly:!0,aliasOf:"_inputManager.latestPointerType"})],z.prototype,"latestPointerType",void 0),e([t()],z.prototype,"_inputManager",void 0),z=e([r("esri.views.3d.input.SceneInputManager")],z);const R=new Map,b=new Map,T=new Map;b.set("pan",{pan:"primary",rotate:"secondary",zoom:"tertiary"}),b.set("rotate",{pan:"secondary",rotate:"primary",zoom:"tertiary"}),T.set("pan",{pan:"primary",rotate:"tertiary",zoom:"secondary"}),T.set("rotate",{pan:"tertiary",rotate:"primary",zoom:"secondary"}),R.set("default",b),R.set("pro",T);var S=z;export default S;
