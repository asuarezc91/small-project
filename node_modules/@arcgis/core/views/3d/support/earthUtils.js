/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../../../geometry/Point.js";import{rad2deg as n,asinClamped as o,deg2rad as r}from"../../../core/mathUtils.js";import{getReferenceEllipsoid as e}from"../../../geometry/projectionEllipsoid.js";function s(t,n,o){return u(t,n.longitude,n.latitude,o.longitude,o.latitude)}function u(t,n,e,s,u){const i=r(e),c=r(u),a=i-c,h=r(n)-r(s),m=Math.sin(a/2),M=Math.sin(h/2),d=2*o(Math.sqrt(m*m+Math.cos(i)*Math.cos(c)*M*M))*t;return Math.round(1e4*d)/1e4}function i(n,o,r){const u=o.spatialReference,i=e(u),c=new t(o.x,n.y,u),a=new t(r.x,n.y,u),h=new t(n.x,o.y,u),m=new t(n.x,r.y,u);return{lon:s(i.radius,c,a),lat:s(i.radius,h,m)}}function c(t,e,s){const u=e/s,i=r(t),c=Math.sin(u/2),a=Math.cos(i),h=2*o(Math.sqrt(c*c/(a*a)));return n(h)}function a(t,o){return n(t/o)}function h(t,n){const o=r(t/2);return(1-Math.sin(o))*n/Math.sin(o)}function m(t,n){let o=t/15;return n||(o=Math.round(o)),o}function M(t,n){n||(n={hours:0,minutes:0,seconds:0}),n.hours=m(t[0],!0);const o=n.hours%1;n.hours-=o,n.minutes=60*o;const r=n.minutes%1;return n.minutes-=r,n.seconds=Math.round(60*r),n}export{u as getGreatCircleDistance,s as getGreatCircleDistanceFromPoints,i as getGreatCircleSpanAt,a as getLatDeltaForDistance,c as getLonDeltaForDistance,h as getMaxCameraAltitude,m as longitudeToTimezone,M as positionToTimezone};
