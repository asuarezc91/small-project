/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{resolve as e}from"../../../core/promiseUtils.js";import r from"../../../geometry/SpatialReference.js";import t from"../../../Graphic.js";import s from"../../../layers/support/Field.js";import{Task as o}from"../../support/Scheduler.js";import{WorkerHandle as i}from"./WorkerHandle.js";class a{constructor(e){this._handle=new f(e),this._frameTask=e.registerTask(o.REMOTE_CLIENT,(()=>{}),(()=>!1))}destroy(){this._frameTask.remove(),this._handle.destroy()}invoke(o,i){return o.buffer&&0!==o.buffer.byteLength?(o.options.sourceSpatialReference&&o.options.sourceSpatialReference instanceof r&&(o.options={...o.options,sourceSpatialReference:o.options.sourceSpatialReference.toJSON()}),this._handle.invoke(o,i).then((e=>this._frameTask.schedule((()=>{if(e.spatialReference=r.fromJSON(e.spatialReference),e.fields)for(let r=0;r<e.fields.length;r++)e.fields[r]=s.fromJSON(e.fields[r]);const o=e.spatialReference;for(const r of e.features)r.uid=t.generateUID(),r.geometry&&(r.geometry.spatialReference=o);return e}))))):e(null)}}class f extends i{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",e)}getTransferList(e){return[e.buffer]}}export{a as PBFDecoder};
