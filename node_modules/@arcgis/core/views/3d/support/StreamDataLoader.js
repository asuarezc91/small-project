/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{clone as t}from"../../../core/lang.js";import{isSome as s}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import a from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{removeUnordered as n}from"../../../core/arrayUtils.js";import{createResolver as i,onAbort as u,createAbortError as l,throwIfAborted as d,isAbortError as c,createAbortController as h}from"../../../core/promiseUtils.js";import p from"../../../core/Accessor.js";import m from"../../../request.js";import{Task as g}from"../../support/Scheduler.js";import{assert as k}from"../webgl-engine/lib/Util.js";import{AsyncWorkerQueue as f}from"./AsyncWorkerQueue.js";import b from"./StreamDataLoaderTask.js";let y=class extends p{constructor(){super(...arguments),this.tasks=new Map,this.onLoadQueue=new Array,this.doneQueue=new Array,this.updating=!1}setup(e,t,s){this.loadQueue=new f(((e,t)=>this.startLoading(e,t)),((e,t)=>this.doneLoadingCallback(e,t)),e,t),s&&(this.taskHandle=s.registerTask(g.STREAM_DATA_LOADER,(e=>this.update(e)),(()=>this.doneQueue.length>0||this.onLoadQueue.length>0)))}destroy(){this.taskHandle&&(this.taskHandle.remove(),this.taskHandle=null),this.tasks.forEach((e=>{e.abortController&&e.abortController.abort()})),this.loadQueue.destroy(),this.loadQueue=null,this.onLoadQueue=null,this.doneQueue=null,this.tasks=null}hasDownloadSlots(e){return this.loadQueue.hasQuota(e)}request(e,t,r,o={}){const a=i();a.__signal=s(o)?o.signal:null;const n=this.createOrUpdateTask(e,t,r,o,a);return u(o,(()=>this.cancelRequest(n,a))),a.promise}createTask(e,t,s,r,o,a){const n=new b(e,t,s,r,o);return this.updateTask(n,a),this.tasks.set(o,n),1===this.tasks.size&&this._set("updating",!0),this.loadQueue.push(n),n}cancelRequest(e,t){n(e.resolvers,t),t.reject(l()),0===e.resolvers.length&&(2===e.status&&(e.status=4,this.loadQueue.cancel(e),e.abortController.abort(),e.request=null,e.abortController=null),e.status=4,this.tasks.delete(e.key),0===this.tasks.size&&this._set("updating",!1))}taskKey(e,t,s){return`${e}:${t}:${s}`}updateTask(e,t){e.resolvers.push(t)}createOrUpdateTask(e,t,r,o,a){const n=s(o)&&o.uid||e,i=this.taskKey(n,t,r),u=this.tasks.get(i);return u?(this.updateTask(u,a),u):this.createTask(e,o,t,r,i,a)}doneLoadingCallback(e,t){this.loadQueue&&(k(2===e.status),e.status=3,this.taskHandle?this.doneQueue.push({task:e,err:t}):this.doneLoading(e,t))}update(e){for(;!e.done&&this.onLoadQueue.length>0;){const t=this.onLoadQueue.shift();d(t.task.abortController),t.task.abortController=null,t.callback(t.task),e.madeProgress()}for(;!e.done&&this.doneQueue.length>0;){const t=this.doneQueue.shift();3!==t.task.status&&(t.err=t.err||l()),this.doneLoading(t.task,t.err),e.madeProgress()}}doneLoading(e,s){let r=e.result instanceof HTMLImageElement?0:e.resolvers.length;for(const o of e.resolvers)if(s)c(s)?o.reject(s):o.reject(new a("stream-data-loader:request-error",`Failed to request resource at '${e.url}'. ${s}`,{url:e.url,error:s}));else{--r;const s=r<=0?e.result:t(e.result);o.resolve(s)}this.tasks.delete(e.key),0===this.tasks.size&&this._set("updating",!1)}startLoading(e,t){if(4===e.status)return!1;let s,r;switch(e.startTime=performance.now(),e.status=2,e.docType){case"binary":r="array-buffer",s=0;break;case"image":r="image";break;case"image+type":r="array-buffer";break;default:r="json"}e.abortController=h();const o=e.abortController.signal;e.request=m(e.url,{...e.options,responseType:r,timeout:s,signal:o});let a=()=>{};const n=s=>{e.duration=performance.now()-e.startTime,e.size=s instanceof ArrayBuffer?s.byteLength:e.size||0,e.result=s,this.taskHandle?this.onLoadQueue.push({callback:t,task:e}):(e.abortController=null,t(e))},i=s=>{2===e.status&&t(e,s),a()};return"image+type"!==e.docType?(e.request.then((e=>n(e.data)),i),!0):(e.request.then((t=>{const u=t.data,l=function(e){if(e.byteLength<2)return"unknown";const t=new Uint8Array(e,0,e.byteLength);if(137===t[0]&&80===t[1])return"image/png";if(71===t[0]&&73===t[1])return"image/gif";if(66===t[0]&&77===t[1])return"image/bmp";if(255===t[0]&&216===t[1])return"image/jpeg";return"unknown"}(u);if(r="image",e.size=u.byteLength,"unknown"===l)return e.request=m(e.url,{responseType:r,timeout:s,signal:o}),void e.request.then((e=>n(e.data)),i);const d=new Blob([u],{type:l}),c=window.URL.createObjectURL(d);a=()=>window.URL.revokeObjectURL(c),e.request=m(c,{responseType:r,timeout:s,signal:o}),e.request.then((e=>n(new j(e.data,l,a))),i)}),i),!0)}get test(){return{loadQueue:this.loadQueue}}};e([r({readOnly:!0})],y.prototype,"updating",void 0),y=e([o("esri.views.3d.support.StreamDataLoader")],y);class j{constructor(e,t,s){this.image=e,this.type=t,this.release=s}get isOpaque(){return"image/jpeg"===this.type}}var L=y;export default L;export{j as ImageWithType,y as StreamDataLoader};
