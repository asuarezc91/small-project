/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{isNone as t}from"../../../../core/maybe.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import s from"../../../../core/Accessor.js";import{c as i}from"../../../../chunks/vec3f64.js";import{b as o,m as a,g as c}from"../../../../chunks/vec3.js";import u from"../../../../core/Handles.js";import{Task as d}from"../../../support/Scheduler.js";import{c as p}from"../../../../chunks/ray.js";import{TERRAIN_ID as f}from"../../webgl-engine/lib/intersectorUtils.js";import{Intersector as h}from"../../webgl-engine/lib/Intersector.js";import{PropertiesPool as l}from"../PropertiesPool.js";import{disposeMembers as m}from"./disposeMembers.js";import O from"./CameraOnSurface.js";import C from"./CenterOnSurface.js";import{ContentGeometryUpdates as A}from"./ContentGeometryUpdates.js";import y,{setupFocusDebugGraphic as S}from"./Focus.js";import w from"./StableSurfaceCenter.js";import I from"./SurfaceGeometryUpdates.js";let g=class extends s{constructor(e){super(e),this.handles=new u,this.surfaceAltitudeAtCenter=0,this.surfaceAltitudeAtCenterDirty=!0,this.surfaceAltitudeAtCenterWithContent=0,this.surfaceAltitudeAtCenterWithContentDirty=!0,this.propertiesPool=new l({renderPointOfView:v},this),this.renderPointOfView=i()}initialize(){const{state:e,basemapTerrain:t,renderCoordsHelper:r,map:n}=this.view;this.surfaceIntersector=new h(e.mode),e.isGlobal?this.surfaceIntersector.options.backfacesTerrain=!1:this.surfaceIntersector.options.backfacesTerrain=!0,this.surfaceIntersector.options.invisibleTerrain=!1,this.contentIntersector=new h(e.mode),this.contentIntersectorOptions={exclude:new Set([f])};const s=()=>this.estimateSurfaceAltitudeAtCenter(),i={state:e,scheduler:this.view.resourceController.scheduler,surface:t,renderCoordsHelper:r};this._set("centerOnSurfaceInfrequent",new C({...i,task:d.POINT_OF_INTEREST_INFREQUENT,estimateSurfaceAltitudeAtCenter:s})),this._set("centerOnSurfaceFrequent",new C({...i,task:d.POINT_OF_INTEREST_FREQUENT,estimateSurfaceAltitudeAtCenter:s})),this._set("centerOnContent",new C({...i,task:d.POINT_OF_INTEREST_FREQUENT,estimateSurfaceAltitudeAtCenter:()=>this.estimateSurfaceAltitudeAtCenterWithContent()})),this._set("cameraOnSurface",new O({...i,task:d.POINT_OF_INTEREST_INFREQUENT,map:n})),this._set("surfaceGeometryUpdates",new I({...i,centerOnSurfaces:[this.centerOnSurfaceFrequent,this.centerOnContent,this.centerOnSurfaceInfrequent]})),this._set("contentGeometryUpdates",new A({contentLayerViews:this.view.allLayerViews,renderCoordsHelper:r})),this._set("surfaceOrigin",new w({view:this.view})),this._set("focus",new y({state:e,surface:t,renderCoordsHelper:r,centerOnSurface:this.centerOnSurfaceFrequent})),S(this.view.graphics),this.handles.add([e.watch("camera",(e=>this.cameraChanged(e)),!0),t.watch("extent",(()=>this.updateCenterPointsOfInterest())),this.surfaceGeometryUpdates.events.on("request-update",(()=>this.updateCenterPointsOfInterest())),this.contentGeometryUpdates.events.on("request-update",(()=>this.updateCenterOnContent()))]),this.cameraChanged(this.view.state.camera),this.centerOnContent.update(),this.centerOnSurfaceFrequent.update(),this.centerOnSurfaceInfrequent.update(),this.cameraOnSurface.update()}destroy(){m(this,"handles","centerOnSurfaceInfrequent","centerOnSurfaceFrequent","cameraOnSurface","centerOnContent","surfaceOrigin","focus","propertiesPool")}get updating(){var e,t,r,n,s,i;return!!(null!=(e=this.surfaceGeometryUpdates)&&e.updating||null!=(t=this.centerOnContent)&&t.updating||null!=(r=this.centerOnSurfaceInfrequent)&&r.updating||null!=(n=this.centerOnSurfaceFrequent)&&n.updating||null!=(s=this.cameraOnSurface)&&s.updating||null!=(i=this.focus)&&i.updating)}estimateSurfaceAltitudeAtCenterWithContent(){if(!this.surfaceAltitudeAtCenterWithContentDirty)return this.surfaceAltitudeAtCenterWithContent;this.surfaceAltitudeAtCenterWithContentDirty=!1;const e=this.view.state.camera,r=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e,T);return t(r)||(this.view.sceneIntersectionHelper.intersectRay(r,this.contentIntersector,j,this.contentIntersectorOptions)?this.surfaceAltitudeAtCenterWithContent=this.view.renderCoordsHelper.getAltitude(j):this.surfaceAltitudeAtCenterWithContent=this.estimateSurfaceAltitudeAtCenter(r)),this.surfaceAltitudeAtCenterWithContent}estimateSurfaceAltitudeAtCenter(e=null){if(!this.view.basemapTerrain)return 0;if(!this.surfaceAltitudeAtCenterDirty)return this.surfaceAltitudeAtCenter;this.surfaceAltitudeAtCenterDirty=!1;const r=this.view.state.camera;if(t(e)&&(e=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(r,T),t(e)))return this.surfaceAltitudeAtCenter;const n=e.origin,s=o(j,e.origin,e.direction);return this.surfaceIntersector.resetWithRay(e),this.surfaceIntersector.intersect(null,null,r),this.view.basemapTerrain.intersect(this.surfaceIntersector,null,n,s),this.surfaceIntersector.results.min.getIntersectionPoint(j)&&(this.surfaceAltitudeAtCenter=this.view.renderCoordsHelper.getAltitude(j)),this.surfaceAltitudeAtCenter}cameraChanged(e){this.updateCenterPointsOfInterest();const t=e.eye;a(this.renderPointOfView,t)||this._set("renderPointOfView",c(this.propertiesPool.get("renderPointOfView"),t))}updateCenterPointsOfInterest(){this.surfaceAltitudeAtCenterDirty=!0,this.surfaceAltitudeAtCenterWithContentDirty=!0,this.centerOnSurfaceFrequent.updateRenderLocation(),this.centerOnSurfaceInfrequent.updateRenderLocation(),this.cameraOnSurface.updateRenderLocation(),this.focus.updateRenderLocation(),this.centerOnContent.updateRenderLocation()}updateCenterOnContent(){this.surfaceAltitudeAtCenterWithContentDirty=!0,this.centerOnContent.updateRenderLocation()}get test(){return{update:()=>{this.surfaceGeometryUpdates.update(),this.centerOnSurfaceFrequent.update(),this.centerOnSurfaceInfrequent.update()},surfaceGeometryUpdates:this.surfaceGeometryUpdates}}};e([r({readOnly:!0})],g.prototype,"centerOnContent",void 0),e([r({readOnly:!0})],g.prototype,"centerOnSurfaceFrequent",void 0),e([r({readOnly:!0})],g.prototype,"centerOnSurfaceInfrequent",void 0),e([r({readOnly:!0})],g.prototype,"cameraOnSurface",void 0),e([r({readOnly:!0})],g.prototype,"focus",void 0),e([r({readOnly:!0})],g.prototype,"renderPointOfView",void 0),e([r({readOnly:!0})],g.prototype,"surfaceOrigin",void 0),e([r({readOnly:!0})],g.prototype,"contentGeometryUpdates",void 0),e([r({readOnly:!0})],g.prototype,"surfaceGeometryUpdates",void 0),e([r({constructOnly:!0})],g.prototype,"view",void 0),e([r({readOnly:!0,dependsOn:["surfaceGeometryUpdates.updating","centerOnContent.updating","centerOnSurfaceInfrequent.updating","centerOnSurfaceFrequent.updating","cameraOnSurface.updating","focus.updating"]})],g.prototype,"updating",null),g=e([n("esri.views.3d.support.PointsOfInterest")],g);const v=Array,j=i(),T=p();var _=g;export default _;export{g as PointsOfInterest};
