/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as e}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{createAbortController as i,isAbortError as o}from"../../../../core/promiseUtils.js";import s from"../../../../geometry/Point.js";import{c as n}from"../../../../chunks/vec3f64.js";import{g as a,m as d}from"../../../../chunks/vec3.js";import{on as l}from"../../../../core/watchUtils.js";import{PropertiesPool as u}from"../PropertiesPool.js";import{PointOfInterest as p}from"./PointOfInterest.js";const c=Array;let h=class extends p{constructor(t){super(t),this._dirty=!1,this._propertiesPool=new u({location:s,renderLocation:c},this),this._estimatedSurfaceAltitude=0,this._pendingElevationQueryController=null,this.renderLocation=n()}initialize(){if(this.scheduler&&this.handles.add(this.scheduler.registerTask(this.task,(()=>this._measureSurfaceAltitude()),(()=>this._needsUpdate()))),this._measureSurfaceAltitude(),this.map){const t=()=>this._setDirty();this.handles.add([l(this.map,"ground.layers","change",t,t,t)])}}destroy(){this._cancelPendingRequest(),this._propertiesPool.destroy(),this._propertiesPool=null}get location(){const t=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,t,this.state.spatialReference),t}get updating(){return this._dirty||null!=this._pendingElevationQueryController}updateRenderLocation(){this._setDirty(),this._updateRenderLocation()}update(){this._measureSurfaceAltitude(),this._updateRenderLocation()}_setDirty(){this._dirty||(this._dirty=!0,this.notifyChange("updating"))}_needsUpdate(){return!this._pendingElevationQueryController&&this._dirty}_cancelPendingRequest(){const t=this._pendingElevationQueryController;t&&(this._pendingElevationQueryController=null,t.abort(),this.notifyChange("updating"))}_measureSurfaceAltitude(){if(this._cancelPendingRequest(),this._dirty=!1,this.notifyChange("updating"),!this.map||!this.map.ground)return void this._updateSurfaceAltitude(0);this.renderCoordsHelper.fromRenderCoords(this.state.camera.eye,_,this.state.spatialReference);let t=i();this.map.ground.queryElevation(_,{signal:t.signal}).then((t=>this._updateSurfaceAltitude(t.geometry.z))).catch((t=>{o(t)||this._updateSurfaceAltitude(0)})).catch((()=>{})).then((()=>{this._pendingElevationQueryController===t&&(this._pendingElevationQueryController=null,this.notifyChange("updating")),t=null})),this._pendingElevationQueryController=t}_updateSurfaceAltitude(t){this._estimatedSurfaceAltitude!==t&&(this._estimatedSurfaceAltitude=t,this._updateRenderLocation())}_updateRenderLocation(){a(m,this.state.camera.eye),this.renderCoordsHelper.setAltitude(this._estimatedSurfaceAltitude,m),d(this._get("renderLocation"),m)||this._set("renderLocation",a(this._propertiesPool.get("renderLocation"),m))}};t([e({constructOnly:!0})],h.prototype,"scheduler",void 0),t([e({constructOnly:!0})],h.prototype,"task",void 0),t([e({readOnly:!0,dependsOn:["renderLocation"]})],h.prototype,"location",null),t([e({constructOnly:!0})],h.prototype,"map",void 0),t([e({readOnly:!0})],h.prototype,"renderLocation",void 0),t([e({readOnly:!0})],h.prototype,"updating",null),h=t([r("esri.views.3d.support.CameraOnSurface")],h);const m=n(),_=new s;var y=h;export default y;export{h as CameraOnSurface};
