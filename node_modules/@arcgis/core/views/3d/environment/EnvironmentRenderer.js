/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as t,destroyMaybe as s,isNone as i}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import o from"../../../core/Accessor.js";import{isMoon as h,isMars as a}from"../../../geometry/support/spatialReferenceUtils.js";import p from"../../../core/Handles.js";import{when as m,init as d}from"../../../core/watchUtils.js";import _ from"./PanoramicAtmosphere.js";import{RealisticAtmosphere as l}from"./RealisticAtmosphere.js";import u from"./SimpleAtmosphere.js";import{Stars as c}from"./Stars.js";const v=[14,15];let g=class extends o{constructor(){super(...arguments),this._handles=new p,this._initContext=null,this._pendingAtmosphere=null,this._atmosphere=null,this._stars=null}get canRender(){return!(!this.view.basemapTerrain||!this.view.basemapTerrain.renderer.canRender)||"global"!==this.view.viewingMode}get updating(){return t(this._pendingAtmosphere)||t(this._stars)&&this._stars.updating}initialize(){this.view._stage.addRenderPlugin(v,this)}destroy(){this._pendingAtmosphere=s(this._pendingAtmosphere),this._atmosphere=s(this._atmosphere),this._stars=s(this._stars),this._handles=s(this._handles),this.view&&(this.view._stage.removeRenderPlugin(this),this._set("view",null))}initializeRenderContext(e){this._initContext=e,this._techniqueRepository=this._initContext.shaderTechniqueRep,this.setup()}setup(){this._handles.add(m(this.view,"basemapTerrain",(()=>this._updateBasemapTerrain()),!0)),this._handles.add([d(this.view,["viewingMode","environment.atmosphereEnabled","environment.atmosphere.quality"],(()=>this._updateAtmosphere()),!0),d(this.view,"environment.starsEnabled",(()=>this._updateStars()),!0)])}uninitializeRenderContext(){t(this._stars)&&(this._stars.uninitializeRenderContext(),this._stars.destroy(),this._stars=null),t(this._atmosphere)&&(this._atmosphere.uninitializeRenderContext(),this._atmosphere.destroy(),this._atmosphere=null)}render(e){let s=!0;return t(this._stars)&&this._stars.canRender&&(s=this._stars.render(e)&&s),t(this._atmosphere)&&this._atmosphere.canRender&&(s=this._atmosphere.render(e)&&s),s}_setNeedsRender(){this._initContext&&this._initContext.requestRender()}_updateStars(){var e,s,r;const n=null!=(e=null==(s=this.view)||null==(r=s.environment)?void 0:r.starsEnabled)&&e;n&&i(this._stars)?(this._stars=new c({view:this.view}),this._stars.initializeRenderContext(this._initContext),this._setNeedsRender()):!n&&t(this._stars)&&(this._stars.destroy(),this._stars=null,this._setNeedsRender())}_updateAtmosphere(){const e=this._getAtmosphereType();if(this.atmosphereType===e)return;this.atmosphereType=e,t(this._pendingAtmosphere)&&(this._pendingAtmosphere!==this._atmosphere&&this._pendingAtmosphere.destroy(),this._pendingAtmosphere=null);const s=this._getAtmosphereClass();if(!s)return t(this._atmosphere)&&(this._atmosphere.destroy(),this._atmosphere=null,this._setNeedsRender()),void this._updateBasemapTerrain();const r=new s(this.view,this._techniqueRepository);r.initializeRenderContext(this._initContext),i(this._atmosphere)&&(this._atmosphere=r,this._setNeedsRender()),this._pendingAtmosphere=r,r.when().then((()=>{t(this._atmosphere)&&this._pendingAtmosphere!==this._atmosphere&&(this._atmosphere.destroy(),this._atmosphere=this._pendingAtmosphere),this._pendingAtmosphere=null,this._setNeedsRender(),this._updateBasemapTerrain()})).catch((()=>{this._pendingAtmosphere===r&&(this._pendingAtmosphere=null)}))}_getAtmosphereClass(){const e=this._getAtmosphereType();if(this.atmosphereClassFromType)return this.atmosphereClassFromType(e);switch(e){case"none":return null;case"realistic":return l;case"panoramic":return _;case"simple":return u;default:return}}_getAtmosphereType(){const e=this.view.get("environment.atmosphereEnabled"),t=this.view.get("environment.atmosphere.quality"),s=this.view.viewingMode;return!e||null==t||h(this.view.spatialReference)?"none":"local"===s?"panoramic":"high"===t&&l.isSupported(this._initContext)&&!a(this.view.spatialReference)?"realistic":"simple"}_updateBasemapTerrain(){const e=this.view.basemapTerrain;e&&(e.velvetOverground=null!=this._atmosphere&&"simple"===this.atmosphereType)}get test(){return{atmosphere:this._atmosphere}}};e([r({constructOnly:!0})],g.prototype,"view",void 0),e([r({constructOnly:!0})],g.prototype,"atmosphereClassFromType",void 0),e([r({dependsOn:["_pendingAtmosphere","_stars.updating"]})],g.prototype,"updating",null),e([r()],g.prototype,"_pendingAtmosphere",void 0),e([r()],g.prototype,"_stars",void 0),g=e([n("esri.views.3d.environment.EnvironmentRenderer")],g);var w=g;export default w;
