/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as r}from"../../../core/maybe.js";import e from"../../../core/Error.js";import{isDataProtocol as o,dataToArrayBuffer as s}from"../../../core/urlUtils.js";import{throwIfAborted as t,throwIfAbortError as a}from"../../../core/promiseUtils.js";import i from"../../../request.js";import{result as m}from"../../../core/asyncUtils.js";class n{constructor(r){this.streamDataRequester=r}async loadJSON(r,e){return this.load("json",r,e)}async loadBinary(r,e){return o(r)?(t(e),s(r)):this.load("binary",r,e)}async loadImage(r,e){return this.load("image",r,e)}async load(o,s,t){if(r(this.streamDataRequester))return(await i(s,{responseType:c[o]})).data;const n=await m(this.streamDataRequester.request(s,o,t));if(!0===n.ok)return n.value;throw a(n.error),new e("",`Request for resource failed: ${n.error}`)}}const c={image:"image",binary:"array-buffer",json:"json"};export{n as DefaultLoadingContext};
