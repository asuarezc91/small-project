/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{c as t}from"../../../../chunks/vec3f64.js";import{f as i,l as e,g as r}from"../../../../chunks/vec3.js";import n from"./Camera.js";import a from"../../webgl-engine/lib/Camera.js";import{Animation as m}from"../../../animation/pointToPoint/Animation.js";const o=t();class s{constructor(t){this.currentTime=0,this.animation=new m((()=>new n(t))),this._current=new n(t)}get finished(){return this.currentTime>=this.animation.time}get time(){return this.animation.time}update(t,n,a){const m=this.animation.definition.source,s=this.animation.definition.target,c=i(o,n.center,t.center),h=e(c);h>=1e-5?(c[0]/=h,c[1]/=h,c[2]/=h):(c[0]=0,c[1]=1,c[0]=0),r(m.lookAtDirection,c),r(s.lookAtDirection,c),m.copyFromRenderCamera(t),s.copyFromRenderCamera(n),this._current.copyFrom(m),this.animation.update(m,s,a),this.currentTime=0,t.almostEquals(n)&&(this.currentTime=this.animation.time)}cameraAt(t,i){return this.animation.cameraAt(t,this._current),i=i||new a,this._current.copyToRenderCamera(i),i}step(t,i){return this.finished||(this.currentTime+=t,this.currentTime>=this.time&&(this.currentTime=this.time)),this.cameraAt(this.currentTime/this.time,i)}}export default s;export{s as Animation};
