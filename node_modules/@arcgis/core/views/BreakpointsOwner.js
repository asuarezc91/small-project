/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import t from"../core/ArrayPool.js";import r from"../core/Handles.js";import{init as a}from"../core/watchUtils.js";const l={widthBreakpoint:{getValue(e){const i=e.viewSize[0],s=e.breakpoints,t=this.values;return i<=s.xsmall?t.xsmall:i<=s.small?t.small:i<=s.medium?t.medium:i<=s.large?t.large:t.xlarge},values:{xsmall:"xsmall",small:"small",medium:"medium",large:"large",xlarge:"xlarge"},valueToClassName:{xsmall:"esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge",small:"esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge",medium:"esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge",large:"esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge",xlarge:"esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large"}},heightBreakpoint:{getValue(e){const i=e.viewSize[1],s=e.breakpoints,t=this.values;return i<=s.xsmall?t.xsmall:i<=s.small?t.small:i<=s.medium?t.medium:i<=s.large?t.large:t.xlarge},values:{xsmall:"xsmall",small:"small",medium:"medium",large:"large",xlarge:"xlarge"},valueToClassName:{xsmall:"esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge",small:"esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge",medium:"esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge",large:"esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge",xlarge:"esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large"}},orientation:{getValue(e){const i=e.viewSize,s=i[0],t=i[1],r=this.values;return t>=s?r.portrait:r.landscape},values:{portrait:"portrait",landscape:"landscape"},valueToClassName:{portrait:"esri-view-orientation-portrait",landscape:"esri-view-orientation-landscape"}}},h={xsmall:544,small:768,medium:992,large:1200};function n(e,i){return i?l[e].valueToClassName[i].split(" "):[]}const o=o=>{let m=class extends o{constructor(...e){super(...e),this._breakpointsHandles=new r,this.orientation=null,this.widthBreakpoint=null,this.heightBreakpoint=null,this.breakpoints=h}initialize(){this._breakpointsHandles.add(a(this,["breakpoints","size"],this._updateClassNames))}destroy(){this.destroyed||(this._removeActiveClassNames(),this._breakpointsHandles.destroy(),this._breakpointsHandles=null)}set breakpoints(e){if(e===this._get("breakpoints"))return;const i=function(e){const i=e;return i&&i.xsmall<i.small&&i.small<i.medium&&i.medium<i.large}(e);if(!i){const e=JSON.stringify(h,null,2);console.warn("provided breakpoints are not valid, using defaults:"+e)}e=i?e:h,this._set("breakpoints",{...e})}_updateClassNames(){if(!this.container)return;const e=t.acquire(),i=t.acquire();let s,r=!1;for(s in l){const t=this[s],a=l[s].getValue({viewSize:this.size,breakpoints:this.breakpoints});t!==a&&(r=!0,this[s]=a,n(s,t).forEach((e=>i.push(e))),n(s,a).forEach((i=>e.push(i))))}r&&(this._applyClassNameChanges(e,i),t.release(e),t.release(i))}_applyClassNameChanges(e,i){const s=this.container;s&&(i.forEach((e=>s.classList.remove(e))),e.forEach((e=>s.classList.add(e))))}_removeActiveClassNames(){const e=this.container;if(!e)return;let i;for(i in l)n(i,this[i]).forEach((i=>e.classList.remove(i)))}};return e([i()],m.prototype,"breakpoints",null),e([i()],m.prototype,"orientation",void 0),e([i()],m.prototype,"widthBreakpoint",void 0),e([i()],m.prototype,"heightBreakpoint",void 0),m=e([s("esri.views.BreakpointsOwner")],m),m};export{o as BreakpointsOwner};
