/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
class t{constructor(t){t&&this.update(t)}update(t){t&&(this.definition?this.definition.copyFrom(t):this.definition=t.clone()),this._updatePrecomputedVariables(),this._updatePixelFlow()}_updatePrecomputedVariables(){const t=this.definition,i=t.compared,o=i.sourceZoom,e=i.targetZoom;this._zoomSign=o>e?1:-1,this._panPixelsAtSource=i.pan*t.source.pixelsPerPanAtZoom(o);const n=(t.source.pixelsPerRotateAtZoom(o)+t.target.pixelsPerRotateAtZoom(e))/2;this._rotatePixels=i.rotate*n}_updatePixelFlow(){const t=this.definition.compared.sourceZoom,i=this.definition.compared.targetZoom,{hasZoom:o,hasPan:e,hasRotate:n}=this.definition;let s=0,a=0;o&&(e&&(s=(i/t-1)/(-1/(this._zoomSign*this.definition.halfWindowSize)*Math.LN2*this._panPixelsAtSource)),n&&(a=this._zoomSign*(Math.log(t/i)/Math.LN2)*this.definition.halfWindowSize/this._rotatePixels)),this._zoomPixelFlow=0,this._panPixelFlow=0,this._rotatePixelFlow=0;const h=this.definition.desiredPixelFlow;if(o&&e&&n){const t=s+a+s*a;this._zoomPixelFlow=s*a/t*h,this._panPixelFlow=a/t*h,this._rotatePixelFlow=s/t*h}else if(o&&e){const t=1+s;this._zoomPixelFlow=s/t*h,this._panPixelFlow=1/t*h}else if(o&&n){const t=1+a;this._zoomPixelFlow=a/t*h,this._rotatePixelFlow=1/t*h}else if(e&&n){const t=this._panPixelsAtSource/this._rotatePixels,i=1+t;this._panPixelFlow=t/i*h,this._rotatePixelFlow=1/i*h}else e?this._panPixelFlow=h:o?this._zoomPixelFlow=h:n&&(this._rotatePixelFlow=h);this.time=n?this.rotateTime:o?this.zoomTime:e?this.panTime:0}get zoomTime(){return this.definition.hasZoom?this._zoomSign*(Math.log(this.definition.compared.sourceZoom/this.definition.compared.targetZoom)/Math.LN2)*this.definition.halfWindowSize/this._zoomPixelFlow:0}get panTime(){if(this.definition.hasPan){if(this.definition.hasZoom){const t=-1/(this._zoomSign*this.definition.halfWindowSize)*Math.LN2,i=t*this._panPixelsAtSource;return Math.log(i*(this._zoomPixelFlow/this._panPixelFlow)+1)/(t*this._zoomPixelFlow)}return this._panPixelsAtSource/this._panPixelFlow}return 0}get rotateTime(){return this.definition.hasRotate?this._rotatePixels/this._rotatePixelFlow:0}_interpolateComponentsZoom(t){if(0===t||1===t)return t;if(this.definition.hasZoom){const i=this.definition.compared.sourceZoom,o=this.definition.compared.targetZoom;return(i*Math.pow(i/o,-t)-i)/(o-i)}return t}_interpolateComponentsPan(t){if(0===t||1===t)return t;if(this.definition.hasPan&&this.definition.hasZoom){const i=-1/(this._zoomSign*this.definition.halfWindowSize)*this._zoomPixelFlow;return 1/this._panPixelsAtSource*(this._panPixelFlow*(Math.pow(2,i*t*this.time)-1))/(i*Math.LN2)}return t}_interpolateComponentsRotate(t){return t}interpolateComponentsAt(t,i){t=Math.min(Math.max(t,0),1);const o=this._interpolateComponentsZoom(t),e=this._interpolateComponentsPan(t),n=this._interpolateComponentsRotate(t);return i?(i.zoom=o,i.pan=e,i.rotate=n):i={zoom:o,pan:e,rotate:n},i}}export default t;export{t as Segment};
