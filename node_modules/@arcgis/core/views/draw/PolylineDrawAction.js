/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as t,destroyMaybe as i,isNone as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import n from"../../core/Handles.js";import{ViewEventPriorities as d}from"../input/InputManager.js";import{createScreenPointFromEvent as h}from"../support/screenUtils.js";import a from"./DrawAction.js";import{VertexAddEvent as p,VertexRemoveEvent as l,VertexUpdateEvent as c,CursorUpdateEvent as v,DrawCompleteEvent as u}from"./input/DrawEvents.js";import{KEYS as _}from"./input/Keys.js";import{defaultDrawingMode as w,drawingModes as m}from"./DrawingMode.js";import{DrawTool as x}from"../3d/interactive/editingTools/draw/DrawTool.js";let V=class extends a{constructor(e){super(e),this._cursorScreenPoint=null,this._panEnabled=!1,this._cursorVertexAdded=!1,this._popVertexOnPointerMove=!1,this._addVertexOnPointerUp=!1,this._activePointerId=null,this._viewHandles=new n,this.mode=w,this.vertices=[]}initialize(){"2d"===this.view.type?this._addViewHandles():this._addDrawTool(this.view)}destroy(){"2d"===this.view.type?(this._removeViewHandles(),this._viewHandles.destroy()):this._removeDrawTool(),this.emit("destroy")}get _clickEnabled(){return"click"===this.mode||"hybrid"===this.mode}get _dragEnabled(){return"freehand"===this.mode||"hybrid"===this.mode}addVertex(e,t){this.vertices.splice(t,0,e);const i={vertex:e,vertexIndex:t,undo:()=>this._undoVertexAdd(null,t),redo:()=>this._redoVertexAdd(null,e,t)};this.history.push(i),this._set("redoHistory",[]);const r=new p(this.view,null,t,this.vertices);this.emit("vertex-add",r),r.defaultPrevented&&(this._popVertexOnPointerMove=!0,this.history.pop())}removeVertex(e){const t=this.vertices.splice(e,1)[0],i={vertex:t,vertexIndex:e,undo:()=>this._undoVertexRemove(null,t,e),redo:()=>this._redoVertexRemove(null,e)};this.history.push(i),this._set("redoHistory",[]),this.emit("vertex-remove",new l(this.view,null,e,this.vertices))}updateVertex(e,t){const i=this.vertices[t];this.vertices[t]=e;const r={vertex:e,vertexIndex:t,undo:()=>this._undoVertexUpdate(null,i,t),redo:()=>this._redoVertexUpdate(null,e,t)};this.history.push(r),this._set("redoHistory",[]),this.emit("vertex-update",new c(this.view,null,t,this.vertices))}complete(){"2d"===this.view.type?this._completeDrawing():this._drawTool.completeCreateOperation()}_addViewHandles(){this._removeViewHandles(),this._viewHandles.add([this.view.on("click",(e=>{e.stopPropagation()}),d.TOOL),this.view.on("pointer-down",(e=>{this._shouldHandlePointerEvent(e)&&(this._panEnabled||(this._activePointerId=e.pointerId,this._addVertexOnPointerUp=!0,this._cursorScreenPoint=h(e),"touch"===e.pointerType&&this._updateCursor(e.native)))}),d.TOOL),this.view.on("pointer-move",(e=>{this._popVertexOnPointerMove&&(this.vertices.pop(),this._popVertexOnPointerMove=!1),this._cursorScreenPoint=h(e),"touch"!==e.pointerType&&this._updateCursor(e.native)}),d.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._cursorScreenPoint=h(e),this._dragEnabled&&!this._panEnabled?this._vertexAddHandler(e):this._addVertexOnPointerUp=!1)}),d.TOOL),this.view.on("pointer-up",(e=>{if(this._shouldHandlePointerEvent(e))if(this._activePointerId=null,this._addVertexOnPointerUp){if(!this._clickEnabled)return 1===this.vertices.length&&this.vertices.pop(),void this._drawCompleteHandler(e);this._vertexAddHandler(e)}else{const t="touch"===e.pointerType;this._updateCursor(e.native,t)}}),d.TOOL),this.view.on("drag",(e=>{this._dragEnabled&&t(this._activePointerId)&&!this._panEnabled&&e.stopPropagation()}),d.TOOL),this.view.on("drag",["Shift"],(e=>{e.stopPropagation()}),d.TOOL),this.view.on("double-click",(e=>{e.stopPropagation(),this._drawCompleteHandler(e)}),d.TOOL),this.view.on("double-click",["Control"],(e=>{e.stopPropagation(),this._drawCompleteHandler(e)}),d.TOOL),this.view.on("key-down",(e=>{const{key:t,repeat:i}=e;t===_.vertexAddKey&&!i&&this._cursorScreenPoint?(e.stopPropagation(),this._vertexAddHandler(e)):t===_.drawCompleteKey&&!i&&this._cursorScreenPoint&&this.vertices.length>1?(e.stopPropagation(),this._vertexAddHandler(e),this._drawCompleteHandler(e)):t!==_.undoKey||this.interactiveUndoDisabled||i?t!==_.redoKey||this.interactiveUndoDisabled||i?t!==_.panKey||i||(e.stopPropagation(),this._panEnabled=!0):(e.stopPropagation(),this.redo()):(e.stopPropagation(),this.undo())}),d.TOOL),this.view.on("key-up",(e=>{e.key===_.panKey&&(e.stopPropagation(),this._panEnabled=!1)}),d.TOOL)])}_removeViewHandles(){this._viewHandles.removeAll()}_addDrawTool(e){this._drawTool=new x({view:e,elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"polyline",mode:this.mode}),this.view.toolViewManager.tools.push(this._drawTool),this.view.activeTool=this._drawTool,this._drawTool.on("vertex-add",(e=>{1===e.vertices.length&&this.emit("vertex-add",new p(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("cursor-update",(e=>{1===e.vertices.length&&this.emit("cursor-update",new v(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("complete",(e=>{this.emit("draw-complete",new u(null,this._drawTool.getVertexCoords())),this._removeDrawTool()}))}_removeDrawTool(){t(this._drawTool)&&(this.view.tools.remove(this._drawTool),this._drawTool=i(this._drawTool))}_addVertex(e,t){if(this._popCursorVertex(),this.isDuplicateVertex(this.vertices,e))return;this.vertices.push(e);const i=this.vertices.length-1,r={vertex:e,vertexIndex:i,undo:()=>this._undoVertexAdd(t,i),redo:()=>this._redoVertexAdd(t,e,i)};this.history.push(r),this._set("redoHistory",[]);const s=new p(this.view,t,i,this.vertices);this.emit("vertex-add",s),s.defaultPrevented&&(this._popVertexOnPointerMove=!0,this.history.pop())}_updateCursor(e,i=!1){if(this._popCursorVertex(),!this._cursorScreenPoint)return;let r=null,s=null;const o=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);t(o)&&(r=o.mapPoint,i||(s=this._pushCursorVertex(o.vertex)));const n=new v(this.view,e,s,this.vertices,r);this.emit("cursor-update",n)}_completeDrawing(e){if(this._activePointerId=null,this._popCursorVertex(),this.vertices.length<2)return;const t=new u(e,this.vertices);this.emit("draw-complete",t),t.defaultPrevented||this._removeViewHandles()}_undoVertexAdd(e,t){this.vertices.splice(t,1),this.emit("undo",new l(this.view,e,t,this.vertices))}_redoVertexAdd(e,t,i){this.vertices.splice(i,0,t),this.emit("redo",new p(this.view,e,i,this.vertices))}_undoVertexRemove(e,t,i){this.vertices.splice(i,0,t),this.emit("undo",new p(this.view,e,i,this.vertices))}_redoVertexRemove(e,t){this.vertices.splice(t,1),this.emit("redo",new l(this.view,e,t,this.vertices))}_undoVertexUpdate(e,t,i){this.vertices[i]=t,this.emit("undo",new c(this.view,e,i,this.vertices))}_redoVertexUpdate(e,t,i){this.vertices[i]=t,this.emit("redo",new c(this.view,e,i,this.vertices))}_pushCursorVertex(e){return this._popCursorVertex(),this.vertices.push(e),this._cursorVertexAdded=!0,this.vertices.length-1}_popCursorVertex(){this._cursorVertexAdded&&(this.vertices.pop(),this._cursorVertexAdded=!1)}_shouldHandlePointerEvent(e){return function(e){return"mouse"!==e.pointerType||0===e.button}(e)&&(r(this._activePointerId)||this._activePointerId===e.pointerId)}_vertexAddHandler(e){if(this._cursorVertexAdded){const t=this.vertices[this.vertices.length-1];this._addVertex(t,e.native)}else{const i=this.getCoordsFromScreenPoint(this._cursorScreenPoint);t(i)&&this._addVertex(i,e.native)}}_drawCompleteHandler(e){this._completeDrawing(e.native)}};e([s({dependsOn:["mode"]})],V.prototype,"_clickEnabled",null),e([s({dependsOn:["mode"]})],V.prototype,"_dragEnabled",null),e([s({type:m})],V.prototype,"mode",void 0),e([s({readOnly:!0})],V.prototype,"vertices",void 0),V=e([o("esri.views.draw.PolylineDrawAction")],V);export{V as PolylineDrawAction};
