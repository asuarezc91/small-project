/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as t,isNone as i}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import o from"../../core/Handles.js";import{ViewEventPriorities as n}from"../input/InputManager.js";import{createScreenPointFromEvent as d}from"../support/screenUtils.js";import h from"./DrawAction.js";import{VertexAddEvent as a,CursorUpdateEvent as l,DrawCompleteEvent as p}from"./input/DrawEvents.js";import{KEYS as c}from"./input/Keys.js";import{DrawTool as _}from"../3d/interactive/editingTools/draw/DrawTool.js";import{createViewAlignedCoordinateSystem as v}from"./support/createUtils.js";let u=class extends h{constructor(e){super(e),this._isDragging=!1,this._panEnabled=!1,this._cursorScreenPoint=null,this._viewHandles=new o,this._cursorVertexAdded=!1,this._activePointerId=null,this.viewAlignedCoordinateSystem=null,this.mode="freehand",this.vertices=[]}initialize(){"2d"===this.view.type?this._addViewHandles():this._addDrawTool(this.view)}destroy(){"2d"===this.view.type?(this._removeViewHandles(),this._viewHandles.destroy()):this._removeDrawTool(),this.emit("destroy")}complete(){"2d"===this.view.type?this._completeDrawing():this._drawTool.completeCreateOperation()}getGeometryZValue(){return this.vertices.length>0&&this.vertices[0].length>2?this.vertices[0][2]:this._get("defaultZ")}_addViewHandles(){this._removeViewHandles(),"click"===this.mode?this._viewHandles.add(this._getClickModeViewHandles()):this._viewHandles.add(this._getDragModeViewHandles())}_getDragModeViewHandles(){return[this.view.on("immediate-click",(e=>{if(e.stopPropagation(),e.mapPoint&&!this._panEnabled){const i=this.getCoordsFromScreenPoint(d(e));t(i)&&(this._set("vertices",[i]),this._drawCompleteHandler(e))}}),n.TOOL),this.view.on("pointer-down",(e=>{this._shouldHandlePointerEvent(e)&&(this._panEnabled||(this._cursorScreenPoint=d(e),this._set("vertices",[]),this._activePointerId=e.pointerId,this._vertexAddHandler(e),this._isDragging=!1,"touch"===e.pointerType&&this._cursorUpdateHandler(e)))}),n.TOOL),this.view.on("pointer-move",(e=>{this._cursorScreenPoint=d(e),i(this._activePointerId)&&"touch"!==e.pointerType&&0===this.vertices.length&&this._cursorUpdateHandler(e)}),n.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._isDragging=!0,this._cursorScreenPoint=d(e),this._cursorUpdateHandler(e))}),n.TOOL),this.view.on("pointer-up",(e=>{this._shouldHandlePointerEvent(e)&&(this._activePointerId=null,this._popCursorVertex(),this._isDragging&&!this._panEnabled&&(this._vertexAddHandler(e),this._drawCompleteHandler(e)),this._isDragging=!1)}),n.TOOL),this.view.on("key-down",(e=>{e.key===c.drawCompleteKey&&this._cursorScreenPoint?this._drawCompleteHandler(e):e.key===c.panKey&&(this._panEnabled=!0)}),n.TOOL),this.view.on("key-up",(e=>{e.key===c.panKey&&(this._panEnabled=!1)}),n.TOOL),this.view.on("drag",(e=>{t(this._activePointerId)&&e.stopPropagation()}),n.TOOL),this.view.on("drag",["Shift"],(e=>{e.stopPropagation()}),n.TOOL)]}_getClickModeViewHandles(){return[this.view.on("immediate-click",(e=>{e.stopPropagation()}),n.TOOL),this.view.on("pointer-down",(e=>{this._cursorScreenPoint=d(e),this._activePointerId=e.pointerId,this._isDragging=!1,"touch"===e.pointerType&&this._cursorUpdateHandler(e)}),n.TOOL),this.view.on("pointer-move",(e=>{this._cursorScreenPoint=d(e),i(this._activePointerId)&&"touch"!==e.pointerType&&this._cursorUpdateHandler(e)}),n.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._isDragging=!0)}),n.TOOL),this.view.on("pointer-up",(e=>{this._shouldHandlePointerEvent(e)&&(this._activePointerId=null,this._isDragging||this._vertexAddHandler(e),2!==this.vertices.length||this._isDragging||this._drawCompleteHandler(e),this._isDragging=!1)}),n.TOOL),this.view.on("key-down",(e=>{e.key===c.vertexAddKey&&this._cursorScreenPoint&&(this._vertexAddHandler(e),2===this.vertices.length&&this._drawCompleteHandler(e)),e.key===c.drawCompleteKey&&this._cursorScreenPoint&&2===this.vertices.length&&this._drawCompleteHandler(e)}),n.TOOL)]}_removeViewHandles(){this._viewHandles.removeAll()}_addDrawTool(e){this._drawTool=new _({view:e,elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"segment",mode:this.mode}),this.view.toolViewManager.tools.push(this._drawTool),this.view.activeTool=this._drawTool,this._drawTool.on("vertex-add",(e=>{1===e.vertices.length&&this.emit("vertex-add",new a(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("cursor-update",(e=>{1===e.vertices.length&&this.emit("cursor-update",new l(this.view,null,e.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))})),this._drawTool.on("complete",(e=>{this.emit("draw-complete",new p(null,this._drawTool.getVertexCoords())),this._removeDrawTool()}))}_removeDrawTool(){t(this._drawTool)&&(this.view.tools.remove(this._drawTool),this._drawTool.destroy(),this._drawTool=null)}_addVertex(e,t){if(this._popCursorVertex(),this.isDuplicateVertex(this.vertices,e))return;this.vertices.push(e),1===this.vertices.length&&(this.viewAlignedCoordinateSystem=v(this.view,this.vertices[0]));const i=this.vertices.indexOf(e),r=new a(this.view,t,i,this.vertices);this.emit("vertex-add",r)}_updateCursor(e,i){let r=null;t(e)&&(r=this._pushCursorVertex(e));const s=new l(this.view,i,r,this.vertices);this.emit("cursor-update",s)}_completeDrawing(e){if(this._activePointerId=null,this._popCursorVertex(),this._isDragging=!1,this._cursorScreenPoint=null,this.vertices.length<1)return;const t=new p(e,this.vertices);this.emit("draw-complete",t),t.defaultPrevented||this._removeViewHandles()}_pushCursorVertex(e){return this._popCursorVertex(),this.vertices.push(e),this._cursorVertexAdded=!0,this.vertices.length-1}_popCursorVertex(){this._cursorVertexAdded&&(this.vertices.pop(),this._cursorVertexAdded=!1)}_shouldHandlePointerEvent(e){return function(e){return"mouse"!==e.pointerType||0===e.button}(e)&&(i(this._activePointerId)||this._activePointerId===e.pointerId)}_vertexAddHandler(e){const i=this.getCoordsFromScreenPoint(this._cursorScreenPoint);t(i)&&this._addVertex(i,e.native)}_cursorUpdateHandler(e){const t=this.getCoordsFromScreenPoint(this._cursorScreenPoint);this._updateCursor(t,e.native)}_drawCompleteHandler(e){this._completeDrawing(e.native)}};e([r({type:["freehand","click"]})],u.prototype,"mode",void 0),e([r({readOnly:!0})],u.prototype,"vertices",void 0),u=e([s("esri/views/2d/engine/markup/SegmentDrawAction")],u);export{u as SegmentDrawAction};
