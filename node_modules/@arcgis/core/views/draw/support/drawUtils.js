/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{geometryToCoordinates as t}from"../../../geometry/support/coordsUtils.js";import{getRingsOrPathsBounds as n}from"../../../geometry/support/boundsUtils.js";import{create as e}from"../../../geometry/support/aaBoundingRect.js";function o(n,e,o,r){if(null==r||n.hasZ||(r=void 0),"point"===n.type)return n.x+=e,n.y+=o,n.hasZ&&null!=r&&(n.z+=r),n;if("multipoint"===n.type){const t=n.points;for(let n=0;n<t.length;n++)t[n]=m(t[n],e,o,r);return n}if("extent"===n.type)return n.xmin+=e,n.xmax+=e,n.ymin+=o,n.ymax+=o,null!=r&&(n.zmin+=r,n.zmax+=r),n;const i=t(n),s="polyline"===n.type?n.paths:n.rings;for(let t=0;t<i.length;t++){const n=i[t];for(let t=0;t<n.length;t++)n[t]=m(n[t],e,o,r)}return"paths"in n?n.paths=s:n.rings=s,n}function r(n,e,r,i,s){const a=n.clone(),m=i.resolution;if("point"===a.type){if(s)o(a,e*m,-r*m);else{const t=i.state.transform,n=i.state.inverseTransform,o=t[0]*a.x+t[2]*a.y+t[4],s=t[1]*a.x+t[3]*a.y+t[5];a.x=n[0]*(o+e)+n[2]*(s+r)+n[4],a.y=n[1]*(o+e)+n[3]*(s+r)+n[5]}return a}if("multipoint"===a.type){if(s)o(a,e*m,-r*m);else{const t=a.points,n=i.state.transform,o=i.state.inverseTransform;for(let i=0;i<t.length;i++){const s=t[i],a=n[0]*s[0]+n[2]*s[1]+n[4],m=n[1]*s[0]+n[3]*s[1]+n[5],x=o[0]*(a+e)+o[2]*(m+r)+o[4],p=o[1]*(a+e)+o[3]*(m+r)+o[5];t[i]=l(s,x,p,void 0)}}return a}if("extent"===a.type){if(s)o(a,e*m,-r*m);else{const t=i.state.transform,n=i.state.inverseTransform,o=t[0]*a.xmin+t[2]*a.ymin+t[4],s=t[1]*a.xmin+t[3]*a.ymin+t[5],m=t[0]*a.xmax+t[2]*a.ymax+t[4],l=t[1]*a.xmax+t[3]*a.ymax+t[5];a.xmin=n[0]*(o+e)+n[2]*(s+r)+n[4],a.ymin=n[1]*(o+e)+n[3]*(s+r)+n[5],a.xmax=n[0]*(m+e)+n[2]*(l+r)+n[4],a.ymax=n[1]*(m+e)+n[3]*(l+r)+n[5]}return a}if(s)o(a,e*m,-r*m);else{const n=t(a),o="polyline"===a.type?a.paths:a.rings,s=i.state.transform,m=i.state.inverseTransform;for(let t=0;t<n.length;t++){const o=n[t];for(let t=0;t<o.length;t++){const n=o[t],i=s[0]*n[0]+s[2]*n[1]+s[4],a=s[1]*n[0]+s[3]*n[1]+s[5],x=m[0]*(i+e)+m[2]*(a+r)+m[4],p=m[1]*(i+e)+m[3]*(a+r)+m[5];o[t]=l(n,x,p,void 0)}}"paths"in a?a.paths=o:a.rings=o}return a}function i(o,r,i,s){if("point"===o.type){const{x:t,y:n}=o,e=s?s[0]:t,a=s?s[1]:n,m=o.clone(),l=(t-e)*r+e,x=(n-a)*i+a;return m.x=l,m.y=x,m}if("multipoint"===o.type){const a=t(o),m=e(),[x,p,f,y]=n(m,[a]),u=s?s[0]:(x+f)/2,c=s?s[1]:(y+p)/2,h=o.clone(),g=h.points;for(let t=0;t<g.length;t++){const n=g[t],[e,o]=n,s=(e-u)*r+u,a=(o-c)*i+c;g[t]=l(n,s,a,void 0)}return h}if("extent"===o.type){const{xmin:t,xmax:n,ymin:e,ymax:a}=o,m=s?s[0]:(t+n)/2,l=s?s[1]:(a+e)/2,x=o.clone();if(x.xmin=(t-m)*r+m,x.ymax=(a-l)*i+l,x.xmax=(n-m)*r+m,x.ymin=(e-l)*i+l,x.xmin>x.xmax){const t=x.xmin,n=x.xmax;x.xmin=n,x.xmax=t}if(x.ymin>x.ymax){const t=x.ymin,n=x.ymax;x.ymin=n,x.ymax=t}return x}const a=t(o),m=e(),[x,p,f,y]=n(m,a),u=s?s[0]:(x+f)/2,c=s?s[1]:(y+p)/2,h=o.clone(),g="polyline"===h.type?h.paths:h.rings;for(let t=0;t<a.length;t++){const n=a[t];for(let e=0;e<n.length;e++){const o=n[e],[s,a]=o,m=(s-u)*r+u,x=(a-c)*i+c;g[t][e]=l(o,m,x,void 0)}}return"paths"in h?h.paths=g:h.rings=g,h}function s(t,n,e,o,r,i){const s=Math.sqrt((e-t)*(e-t)+(o-n)*(o-n));return Math.sqrt((r-t)*(r-t)+(i-n)*(i-n))/s}function a(t,n,e,o,r,i){const s=180*Math.atan2(n-o,t-e)/Math.PI;return 180*Math.atan2(n-i,t-r)/Math.PI-s}function m(t,n,e,o){return l(t,t[0]+n,t[1]+e,null!=t[2]&&null!=o?t[2]+o:void 0)}function l(t,n,e,o){const r=[n,e];return t.length>2&&r.push(null!=o?o:t[2]),t.length>3&&r.push(t[3]),r}export{r as cloneMove,a as getRotationAngle,s as getScaleRatio,o as move,i as scale};
