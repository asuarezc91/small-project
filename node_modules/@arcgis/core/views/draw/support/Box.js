/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as e}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import r from"../../../geometry/Point.js";import{geometryToCoordinates as a}from"../../../geometry/support/coordsUtils.js";import{getRingsOrPathsBounds as o}from"../../../geometry/support/boundsUtils.js";import h from"../../../geometry/Polygon.js";import c from"../../../geometry/Polyline.js";import"../../../geometry.js";import n from"../../../core/Evented.js";import l from"../../../symbols/SimpleLineSymbol.js";import p from"../../../symbols/SimpleFillSymbol.js";import d from"../../../symbols/SimpleMarkerSymbol.js";import m from"../../../Graphic.js";import u from"../../../core/Handles.js";import{whenOnce as g,pausable as _}from"../../../core/watchUtils.js";import{create as v}from"../../../geometry/support/aaBoundingRect.js";import{cloneMove as G,scale as y,getScaleRatio as f,getRotationAngle as b}from"./drawUtils.js";import{addUniqueLayer as S}from"./layerUtils.js";import w from"../../../geometry/support/rotate.js";import k from"./GraphicMover.js";import{settings as x}from"./settings.js";class R{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class M{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class I{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class C{constructor(t,e,i){this.graphics=t,this.mover=e,this.angle=i,this.type="rotate-start"}}class E{constructor(t,e,i){this.graphics=t,this.mover=e,this.angle=i,this.type="rotate"}}class O{constructor(t,e,i){this.graphics=t,this.mover=e,this.angle=i,this.type="rotate-stop"}}class j{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.xScale=i,this.yScale=s,this.type="scale-start"}}class L{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.xScale=i,this.yScale=s,this.type="scale"}}class z{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.xScale=i,this.yScale=s,this.type="scale-stop"}}const B=x.transformGraphics,Y={centerIndicator:new d({style:"cross",size:B.center.size,color:B.center.color}),fill:{default:new p({color:B.fill.color,outline:{color:B.fill.outlineColor,join:"round",width:1}}),active:new p({color:B.fill.stagedColor,outline:{color:B.fill.outlineColor,join:"round",style:"dash",width:1}})},handles:{default:new d({style:"square",size:B.vertex.size,color:B.vertex.color,outline:{color:B.vertex.outlineColor,width:1}}),hover:new d({style:"square",size:B.vertex.hoverSize,color:B.vertex.hoverColor,outline:{color:B.vertex.hoverOutlineColor,width:1}})},rotator:{default:new d({style:"circle",size:B.vertex.size,color:B.vertex.color,outline:{color:B.vertex.outlineColor,width:1}}),hover:new d({style:"circle",size:B.vertex.hoverSize,color:B.vertex.hoverColor,outline:{color:B.vertex.hoverOutlineColor,width:1}})},rotatorLine:new l({color:B.line.color,width:1})};let N=class extends n.EventedAccessor{constructor(t){super(t),this._activeHandleGraphic=null,this._graphicAttributes={esriSketchTool:"box"},this._handles=new u,this._mover=null,this._rotateGraphicOffset=20,this._angleOfRotation=0,this._rotateLineGraphic=null,this._startInfo=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this.type="box",this.callbacks={onMoveStart(){},onMove(){},onMoveStop(){},onScaleStart(){},onScale(){},onScaleStop(){},onRotateStart(){},onRotate(){},onRotateStop(){},onGraphicClick(){}},this.centerGraphic=null,this.backgroundGraphic=null,this.enableMovement=!0,this.enableRotation=!0,this.enableScaling=!0,this.graphics=[],this.handleGraphics=[],this.layer=null,this.preserveAspectRatio=!1,this.rotateGraphic=null,this.showCenterGraphic=!0,this.view=null,this._getBounds=(()=>{const t=v();return(e,i)=>{e[0]=Number.POSITIVE_INFINITY,e[1]=Number.POSITIVE_INFINITY,e[2]=Number.NEGATIVE_INFINITY,e[3]=Number.NEGATIVE_INFINITY;for(const s of i){if(!s)continue;let i,r,h,c;if("point"===s.type)i=h=s.x,r=c=s.y;else if("multipoint"===s.type){const e=a(s);[i,r,h,c]=o(t,[e])}else if("extent"===s.type)[i,r,h,c]=[s.xmin,s.ymin,s.xmax,s.ymax];else{const e=a(s);[i,r,h,c]=o(t,e)}e[0]=Math.min(i,e[0]),e[1]=Math.min(r,e[1]),e[2]=Math.max(h,e[2]),e[3]=Math.max(c,e[3])}return e}})()}initialize(){this._setup(),this._handles.add([g(this,"view.ready",(()=>{const{layer:t,view:e}=this;S(e,t)})),_(this,"preserveAspectRatio",(()=>{this._activeHandleGraphic&&(this._scaleGraphic(this._activeHandleGraphic),this._updateGraphics())})),_(this,"view.scale",(()=>{this._updateRotateGraphic(),this._updateRotateLineGraphic()})),_(this,"graphics",(()=>this.refresh())),_(this,"layer",((t,e)=>{e&&this._resetGraphics(e),this.refresh()}))])}destroy(){this._reset(),this._handles&&(this._handles.removeAll(),this._handles=null)}get state(){const t=!!this.get("view.ready"),e=!(!this.get("graphics.length")||!this.get("layer"));return t&&e?"active":t?"ready":"disabled"}set symbols(t){const{centerIndicator:e=Y.centerIndicator,fill:i=Y.fill,handles:s=Y.handles,rotator:r=Y.rotator,rotatorLine:a=Y.rotatorLine}=t||{};this._set("symbols",{centerIndicator:e,fill:i,handles:s,rotator:r,rotatorLine:a})}isUIGraphic(t){let e=[];return this.handleGraphics.length&&(e=e.concat(this.handleGraphics)),this.backgroundGraphic&&e.push(this.backgroundGraphic),this.centerGraphic&&e.push(this.centerGraphic),this.rotateGraphic&&e.push(this.rotateGraphic),this._rotateLineGraphic&&e.push(this._rotateLineGraphic),e.length&&e.includes(t)}move(t,e){if(this._mover&&this.graphics.length){for(const i of this.graphics){const s=i.geometry,r=G(s,t,e,this.view);i.geometry=r}this.refresh(),this._emitMoveStopEvent(t,e,null)}}scale(t,e){if(this._mover&&this.graphics.length){for(const i of this.graphics){const s=i.geometry,r=y(s,t,e);i.geometry=r}this.refresh(),this._emitScaleStopEvent(t,e,null)}}rotate(t,e){if(this._mover&&this.graphics.length){if(!e){const t=this.handleGraphics[1].geometry.x,i=this.handleGraphics[3].geometry.y;e=new r(t,i,this.view.spatialReference)}for(const i of this.graphics){const s=i.geometry,r=w(s,t,e);i.geometry=r}this.refresh(),this._emitRotateStopEvent(t,null)}}refresh(){this._reset(),this._setup()}reset(){this.graphics=[]}_setup(){"active"===this.state&&(this._setupGraphics(),this._setupMover(),this._updateGraphics())}_reset(){this._resetGraphicStateVars(),this._resetGraphics(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetGraphicStateVars(){this._startInfo=null,this._activeHandleGraphic=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this._angleOfRotation=0}_resetGraphics(t){const e=t||this.layer;e&&(e.removeMany(this.handleGraphics),e.remove(this.backgroundGraphic),e.remove(this.centerGraphic),e.remove(this.rotateGraphic),e.remove(this._rotateLineGraphic));for(const t of this.handleGraphics)t.destroy();this._set("handleGraphics",[]),this.backgroundGraphic&&(this.backgroundGraphic.destroy(),this._set("backgroundGraphic",null)),this.centerGraphic&&(this.centerGraphic.destroy(),this._set("centerGraphic",null)),this.rotateGraphic&&(this.rotateGraphic.destroy(),this._set("rotateGraphic",null)),this._rotateLineGraphic&&(this._rotateLineGraphic.destroy(),this._rotateLineGraphic=null)}_setupMover(){let t=[].concat(this.handleGraphics);this.enableMovement&&(t=t.concat(this.graphics,this.backgroundGraphic)),this.enableRotation&&t.push(this.rotateGraphic),this.showCenterGraphic&&t.push(this.centerGraphic),this._mover=new k({enableMoveAllGraphics:!1,view:this.view,graphics:t,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_getStartInfo(t){const[e,i,s,r]=this._getBoxBounds(v()),a=Math.abs(s-e),o=Math.abs(r-i),h=(s+e)/2,c=(r+i)/2,{x:n,y:l}=t.geometry;return{width:a,height:o,centerX:h,centerY:c,startX:n,startY:l,graphicInfos:this._getGraphicInfos(),box:this.backgroundGraphic.geometry,rotate:this.rotateGraphic.geometry}}_getGraphicInfos(){return this.graphics.map((t=>this._getGraphicInfo(t)))}_getGraphicInfo(t){const e=t.geometry,[i,s,r,a]=this._getBounds(v(),[e]);return{width:Math.abs(r-i),height:Math.abs(a-s),centerX:(r+i)/2,centerY:(a+s)/2,geometry:e}}_onGraphicClickCallback(t){t.viewEvent.stopPropagation(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t)}_onGraphicMoveStartCallback(t){const{_angleOfRotation:e,_xScale:i,_yScale:s,backgroundGraphic:r,handleGraphics:a,rotateGraphic:o,symbols:h}=this,c=t.graphic;this._resetGraphicStateVars(),this._hideGraphicsBeforeUpdate(),r.symbol=h.fill.active,this._startInfo=this._getStartInfo(c),c===o?(this.view.cursor="grabbing",this._emitRotateStartEvent(e,c)):a.includes(c)?(this._activeHandleGraphic=c,this._emitScaleStartEvent(i,s,c)):this._emitMoveStartEvent(t.dx,t.dy,c)}_onGraphicMoveCallback(t){const e=t.graphic;if(this._startInfo)if(this.handleGraphics.includes(e))this._scaleGraphic(e),this._emitScaleEvent(this._xScale,this._yScale,e);else if(e===this.rotateGraphic)this._rotateGraphic(e),this._emitRotateEvent(this._angleOfRotation,e);else{const i=t.dx,s=t.dy;this._totalDx+=i,this._totalDy+=s,this._moveGraphic(e,i,s),this._emitMoveEvent(i,s,e)}}_onGraphicMoveStopCallback(t){const e=t.graphic;if(!this._startInfo)return void this.refresh();const{_angleOfRotation:i,_totalDx:s,_totalDy:r,_xScale:a,_yScale:o,backgroundGraphic:h,handleGraphics:c,rotateGraphic:n,symbols:l}=this;this._updateGraphics(),this._showGraphicsAfterUpdate(),h.symbol=l.fill.default,e===n?(this.view.cursor="pointer",this._emitRotateStopEvent(i,e)):c.includes(e)?this._emitScaleStopEvent(a,o,e):this._emitMoveStopEvent(s,r,e),this._resetGraphicStateVars()}_onGraphicPointerOverCallback(t){const{backgroundGraphic:e,handleGraphics:i,graphics:s,rotateGraphic:r,symbols:a,view:o}=this,h=t.graphic;if(h===r)return r.symbol=a.rotator.hover,void(o.cursor="pointer");if(s.includes(h)||h===e)return void(o.cursor="move");if(!i.includes(h))return void(o.cursor="pointer");t.graphic.symbol=a.handles.hover;const c=o.rotation;let n,l=t.index;switch(l<8&&(c>=0&&c<45?l%=8:l=c>=45&&c<90?(l+1)%8:c>=90&&c<135?(l+2)%8:c>=135&&c<180?(l+3)%8:c>=180&&c<225?(l+4)%8:c>=225&&c<270?(l+5)%8:c>=270&&c<315?(l+6)%8:(l+7)%8),l){case 0:n="nwse-resize";break;case 1:n="ns-resize";break;case 2:n="nesw-resize";break;case 3:n="ew-resize";break;case 4:n="nwse-resize";break;case 5:n="ns-resize";break;case 6:n="nesw-resize";break;case 7:n="ew-resize";break;default:n="pointer"}o.cursor=n}_onGraphicPointerOutCallback(t){const{handleGraphics:e,rotateGraphic:i,symbols:s,view:r}=this;t.graphic===i?i.symbol=s.rotator.default:e.includes(t.graphic)&&(t.graphic.symbol=s.handles.default),r.cursor="default"}_scaleGraphic(t){const{_startInfo:e,handleGraphics:i,preserveAspectRatio:s,view:a}=this,{centerX:o,centerY:h,startX:c,startY:n}=e,{resolution:l,transform:p}=a.state,d=i.indexOf(t);1!==d&&5!==d||this._updateX(t,o),3!==d&&7!==d||this._updateY(t,h);const{x:m,y:u}=t.geometry,g=p[0]*m+p[2]*u+p[4],_=p[1]*m+p[3]*u+p[5],v=e.graphicInfos.map((t=>t.geometry));if(s){const t=p[0]*o+p[2]*h+p[4],e=p[1]*o+p[3]*h+p[5],i=p[0]*c+p[2]*n+p[4],s=p[1]*c+p[3]*n+p[5];this._xScale=this._yScale=f(t,e,i,s,g,_);for(const t of v){const e=v.indexOf(t);this.graphics[e].geometry=y(t,this._xScale,this._yScale,[o,h])}this._updateBackgroundGraphic()}else{const{width:t,height:i}=e;let s=m-c,p=n-u;if(1===d||5===d?s=0:3!==d&&7!==d||(p=0),0===s&&0===p)return;const g=t+(c>o?s:-1*s),_=i+(n<h?p:-1*p),f=o+s/2,b=h+p/2;this._xScale=g/t||1,this._yScale=_/i||1,1===d||5===d?this._xScale=1:3!==d&&7!==d||(this._yScale=1);const S=(f-o)/l,w=(b-h)/l,k=y(e.box,this._xScale,this._yScale);this.backgroundGraphic.geometry=G(k,S,w,a,!0);const{centerX:x,centerY:R}=this._getGraphicInfo(this.backgroundGraphic),M=(x-o)/l,I=-1*(R-h)/l;for(const t of v){const e=v.indexOf(t),i=y(t,this._xScale,this._yScale,[o,h]);this.graphics[e].geometry=G(i,M,I,a,!0)}this.centerGraphic.geometry=new r(x,R,a.spatialReference)}}_rotateGraphic(t){const{centerX:e,centerY:i,startX:s,startY:a,box:o,rotate:h}=this._startInfo,{x:c,y:n}=t.geometry,l=new r(e,i,this.view.spatialReference);this._angleOfRotation=b(e,i,s,a,c,n);const p=this._startInfo.graphicInfos.map((t=>t.geometry));for(const t of p){const e=p.indexOf(t),i=w(t,this._angleOfRotation,l);this.graphics[e].geometry=i}this.backgroundGraphic.geometry=w(o,this._angleOfRotation,l),this.rotateGraphic.geometry=w(h,this._angleOfRotation,l)}_moveGraphic(t,e,i){if(this.graphics.includes(t)){const s=this.backgroundGraphic.geometry;this.backgroundGraphic.geometry=G(s,e,i,this.view);for(const s of this.graphics)s!==t&&(s.geometry=G(s.geometry,e,i,this.view))}else if(t===this.centerGraphic){const t=this.backgroundGraphic.geometry;this.backgroundGraphic.geometry=G(t,e,i,this.view)}if(t===this.backgroundGraphic||t===this.centerGraphic)for(const t of this.graphics)t.geometry=G(t.geometry,e,i,this.view)}_setupGraphics(){const{_graphicAttributes:t,symbols:e}=this;this._set("centerGraphic",new m(null,e.centerIndicator,t)),this.showCenterGraphic&&this.layer.add(this.centerGraphic),this._set("backgroundGraphic",new m(null,e.fill.default,t)),this.layer.add(this.backgroundGraphic),this._rotateLineGraphic=new m(null,e.rotatorLine,t),this._set("rotateGraphic",new m(null,e.rotator.default,t)),this.enableRotation&&!this._hasExtentGraphic()&&(this.layer.add(this._rotateLineGraphic),this.layer.add(this.rotateGraphic));for(let i=0;i<8;i++)this.handleGraphics.push(new m(null,e.handles.default,t));this.enableScaling&&this.layer.addMany(this.handleGraphics)}_updateGraphics(){this._updateBackgroundGraphic(),this._updateHandleGraphics(),this._updateCenterGraphic(),this._updateRotateGraphic(),this._updateRotateLineGraphic()}_hideGraphicsBeforeUpdate(){this.centerGraphic.visible=!1,this.rotateGraphic.visible=!1,this._rotateLineGraphic.visible=!1,this.handleGraphics.forEach((t=>t.visible=!1))}_showGraphicsAfterUpdate(){this.enableRotation&&(this._rotateLineGraphic.visible=!0,this.rotateGraphic.visible=!0),this.showCenterGraphic&&(this.centerGraphic.visible=!0),this.enableScaling&&this.handleGraphics.forEach((t=>t.visible=!0))}_updateHandleGraphics(){const t=this._getCoordinates(!0);this.handleGraphics.forEach(((e,i)=>{const[s,r]=t[i];this._updateXY(e,s,r)}))}_updateBackgroundGraphic(){const t=this._getCoordinates();this.backgroundGraphic.geometry=new h({rings:t,spatialReference:this.view.spatialReference})}_updateCenterGraphic(){const[t,e,i,s]=this._getBoxBounds(v()),a=(i+t)/2,o=(s+e)/2;this.centerGraphic.geometry=new r(a,o,this.view.spatialReference)}_updateRotateGraphic(){if(!this.handleGraphics.length)return;const{x:t,y:e}=this.handleGraphics[1].geometry,i=e+this.view.state.resolution*this._rotateGraphicOffset;this.rotateGraphic.geometry=new r(t,i,this.view.spatialReference)}_updateRotateLineGraphic(){if(!this.handleGraphics.length||!this.rotateGraphic||!this.rotateGraphic.geometry)return;const t=this.handleGraphics[1].geometry,e=this.rotateGraphic.geometry;this._rotateLineGraphic.geometry=new c({paths:[[t.x,t.y],[e.x,e.y]],spatialReference:this.view.spatialReference})}_updateXY(t,e,i){t.geometry=new r(e,i,this.view.spatialReference)}_updateX(t,e){const i=t.geometry.y;t.geometry=new r(e,i,this.view.spatialReference)}_updateY(t,e){const i=t.geometry.x;t.geometry=new r(i,e,this.view.spatialReference)}_hasExtentGraphic(){return this.graphics.some((t=>t&&e(t.geometry)&&"extent"===t.geometry.type))}_getBoxBounds(t){const e=this.graphics.map((t=>t.geometry));return this._getBounds(t,e)}_getCoordinates(t){const[e,i,s,r]=this._getBoxBounds(v());if(t){const t=(e+s)/2,a=(r+i)/2;return[[e,r],[t,r],[s,r],[s,a],[s,i],[t,i],[e,i],[e,a]]}return[[e,r],[s,r],[s,i],[e,i]]}_emitMoveStartEvent(t,e,i){const s=new R(this.graphics,i,t,e);this.emit("move-start",s),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(s)}_emitMoveEvent(t,e,i){const s=new M(this.graphics,i,t,e);this.emit("move",s),this.callbacks.onMove&&this.callbacks.onMove(s)}_emitMoveStopEvent(t,e,i){const s=new I(this.graphics,i,t,e);this.emit("move-stop",s),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(s)}_emitRotateStartEvent(t,e){const i=new C(this.graphics,e,t);this.emit("rotate-start",i),this.callbacks.onRotateStart&&this.callbacks.onRotateStart(i)}_emitRotateEvent(t,e){const i=new E(this.graphics,e,t);this.emit("rotate",i),this.callbacks.onRotate&&this.callbacks.onRotate(i)}_emitRotateStopEvent(t,e){const i=new O(this.graphics,e,t);this.emit("rotate-stop",i),this.callbacks.onRotateStop&&this.callbacks.onRotateStop(i)}_emitScaleStartEvent(t,e,i){const s=new j(this.graphics,i,t,e);this.emit("scale-start",s),this.callbacks.onScaleStart&&this.callbacks.onScaleStart(s)}_emitScaleEvent(t,e,i){const s=new L(this.graphics,i,t,e);this.emit("scale",s),this.callbacks.onScale&&this.callbacks.onScale(s)}_emitScaleStopEvent(t,e,i){const s=new z(this.graphics,i,t,e);this.emit("scale-stop",s),this.callbacks.onScaleStop&&this.callbacks.onScaleStop(s)}};t([i()],N.prototype,"_rotateLineGraphic",void 0),t([i({readOnly:!0})],N.prototype,"type",void 0),t([i()],N.prototype,"callbacks",void 0),t([i({readOnly:!0})],N.prototype,"centerGraphic",void 0),t([i({readOnly:!0})],N.prototype,"backgroundGraphic",void 0),t([i()],N.prototype,"enableMovement",void 0),t([i()],N.prototype,"enableRotation",void 0),t([i()],N.prototype,"enableScaling",void 0),t([i()],N.prototype,"graphics",void 0),t([i({readOnly:!0})],N.prototype,"handleGraphics",void 0),t([i()],N.prototype,"layer",void 0),t([i()],N.prototype,"preserveAspectRatio",void 0),t([i({readOnly:!0})],N.prototype,"rotateGraphic",void 0),t([i()],N.prototype,"showCenterGraphic",void 0),t([i({dependsOn:["view.ready","graphics.length","layer"],readOnly:!0})],N.prototype,"state",null),t([i({value:Y})],N.prototype,"symbols",null),t([i()],N.prototype,"view",void 0),N=t([s("esri.views.draw.support.Box")],N);var A=N;export default A;
