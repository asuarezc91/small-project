/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as i}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{clone as t}from"../../../core/lang.js";import{isSome as e}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import a from"../../../core/Evented.js";import o from"../../../core/Handles.js";import{watch as h,whenOnce as c}from"../../../core/watchUtils.js";import{ViewEventPriorities as n}from"../../input/InputManager.js";import{createScreenPointFromEvent as p}from"../../support/screenUtils.js";import{cloneMove as l}from"./drawUtils.js";import{GraphicManipulator as v}from"../../interactive/GraphicManipulator.js";import{GraphicClickEvent as d,GraphicDoubleClickEvent as g,GraphicPointerDownEvent as _,GraphicPointerUpEvent as G,GraphicPointerOutEvent as m,GraphicMoveStartEvent as u,GraphicMoveEvent as y,GraphicMoveStopEvent as f,GraphicPointerOverEvent as w}from"./input/GraphicMoverEvents.js";let k=class extends a.EventedAccessor{constructor(i){super(i),this._activeGraphic=null,this._dragEvent=null,this._handles=new o,this._hoverGraphic=null,this._initialDragGeometry=null,this._viewHandles=new o,this._manipulators=[],this.type="graphic-mover",this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},this.enableMoveAllGraphics=!1,this.graphics=[],this.view=null}initialize(){this._setUpManipulators(),this._handles.add([h(this,["graphics","graphics.length"],(()=>{this._setUpManipulators()})),c(this,"view.ready",(()=>{this._viewHandles.add([this.view.on("immediate-click",(i=>this._clickHandler(i)),n.TOOL),this.view.on("double-click",(i=>this._doubleClickHandler(i)),n.TOOL),this.view.on("pointer-down",(i=>this._pointerDownHandler(i)),n.TOOL),this.view.on("pointer-move",(i=>this._pointerMoveHandler(i)),n.TOOL),this.view.on("pointer-up",(i=>this._pointerUpHandler(i)),n.TOOL),this.view.on("drag",(i=>this._dragHandler(i)),n.TOOL),this.view.on("key-down",(i=>this._keyDownHandler(i)),n.TOOL)])}))])}destroy(){this.reset(),this._manipulators.forEach((i=>i.destroy())),this._manipulators=null,this._viewHandles.removeAll(),this._handles.removeAll()}get state(){const i=!!this.get("view.ready"),t=!!this.get("graphics.length"),e=this._activeGraphic;return i&&t?e?"moving":"active":i?"ready":"disabled"}reset(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null}updateGeometry(i,t){const e=this.graphics[i];e&&e.set("geometry",t)}_clickHandler(i){const t=this._findTargetGraphic(p(i));if(t){const e=new d(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e)}}_doubleClickHandler(i){const t=this._findTargetGraphic(p(i));if(t){const e=new g(t,this.graphics.indexOf(t),i.x,i.y,i);this.emit("graphic-double-click",e),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(e)}}_pointerDownHandler(i){const t=this._findTargetGraphic(p(i));if(t){this._activeGraphic=t;const{x:e,y:r}=i,s=new _(t,this.graphics.indexOf(t),e,r,i);this.emit("graphic-pointer-down",s),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(s)}else this._activeGraphic=null}_pointerUpHandler(i){if(this._activeGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._activeGraphic),s=new G(this._activeGraphic,r,t,e,i);this.emit("graphic-pointer-up",s),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(s)}}_pointerMoveHandler(i){if(this._dragEvent)return;const t=this._findTargetGraphic(p(i));if(t){const{x:e,y:r}=i;if(this._hoverGraphic){if(this._hoverGraphic===t)return;const s=this.graphics.indexOf(this._hoverGraphic),a=new m(this.graphics[s],s,e,r,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",a),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(a)}const s=this.graphics.indexOf(t),a=new w(t,s,e,r,i);return this._hoverGraphic=t,this.emit("graphic-pointer-over",a),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(a))}if(this._hoverGraphic){const{x:t,y:e}=i,r=this.graphics.indexOf(this._hoverGraphic),s=new m(this.graphics[r],r,t,e,i);this._hoverGraphic=null,this.emit("graphic-pointer-out",s),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(s)}}_dragHandler(i){if("start"!==i.action&&!this._dragEvent||!this._activeGraphic||!this._activeGraphic.geometry)return;i.stopPropagation();const{action:e,x:r,y:s}=i,a=this.graphics.indexOf(this._activeGraphic),o=this._activeGraphic.geometry,h=this._dragEvent?r-this._dragEvent.x:0,c=this._dragEvent?s-this._dragEvent.y:0,n=r-i.origin.x,p=s-i.origin.y;if(this._activeGraphic.geometry=l(o,h,c,this.view),this.enableMoveAllGraphics&&this.graphics.forEach((i=>{i!==this._activeGraphic&&(i.geometry=l(i.geometry,h,c,this.view))})),this._dragEvent=i,"start"===e){this._initialDragGeometry=t(o);const e=new u(this._activeGraphic,this.graphics,a,r,s,h,c,n,p,i);this.emit("graphic-move-start",e),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(e),e.defaultPrevented&&this._activeGraphic.set("geometry",o)}else if("update"===e){const t=new y(this._activeGraphic,this.graphics,a,r,s,h,c,n,p,i);this.emit("graphic-move",t),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(t),t.defaultPrevented&&this._activeGraphic.set("geometry",o)}else{const t=new f(this._activeGraphic,this.graphics,a,r,s,h,c,n,p,i);this._dragEvent=null,this._activeGraphic=null,this.emit("graphic-move-stop",t),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(t),t.defaultPrevented&&this.graphics[a].set("geometry",this._initialDragGeometry),this._initialDragGeometry=null}}_keyDownHandler(i){"a"!==i.key&&"d"!==i.key&&"n"!==i.key||"moving"!==this.state||i.stopPropagation()}_findTargetGraphic(i){let t=null,r=Number.MAX_VALUE;return this._manipulators.forEach((s=>{const a=s.intersectionDistance(i);e(a)&&a<r&&(r=a,t=s.graphic)})),t}_setUpManipulators(){const{graphics:i,view:t}=this;this._manipulators.forEach((i=>i.destroy())),this._manipulators=null!=i&&i.length?i.map((i=>new v({graphic:i,view:t}))):[]}};i([r()],k.prototype,"_activeGraphic",void 0),i([r({readOnly:!0})],k.prototype,"type",void 0),i([r()],k.prototype,"callbacks",void 0),i([r()],k.prototype,"enableMoveAllGraphics",void 0),i([r()],k.prototype,"graphics",void 0),i([r({dependsOn:["view.ready","graphics.length","_activeGraphic"],readOnly:!0})],k.prototype,"state",null),i([r()],k.prototype,"view",void 0),k=i([s("esri.views.draw.support.GraphicMover")],k);var b=k;export default b;
