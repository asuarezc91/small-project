/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{isNone as r,isSome as i,removeMaybe as t}from"../core/maybe.js";import a from"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import l from"../core/Error.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{createDeferred as n,reject as h,isAbortError as y,createAbortController as p,onAbort as w,throwIfAborted as c}from"../core/promiseUtils.js";import{schedule as d}from"../core/scheduling.js";import m from"../core/CollectionFlattener.js";import{on as u,init as f}from"../core/watchUtils.js";import{WatchUpdatingTracking as v}from"./support/WatchUpdatingTracking.js";import{HandleOwner as _}from"../core/HandleOwner.js";import{someMap as V}from"../core/MapUtils.js";const g=a.getLogger("esri.views.LayerViewManager");class L{constructor(e,r,i){this.layer=e,this.view=r,this.layerViewImporter=i,this._controller=p(),this._deferred=n(),this._started=!1,this.done=!1,w(this._controller.signal,(()=>{const r=new l("cancelled:layerview-create","layerview creation cancelled",{layer:e});this._deferred.reject(r)}))}get promise(){return this._deferred.promise}destroy(){this._controller.abort();const{layerView:e}=this;if(!e)return;const{layer:r,view:i}=this;r.emit("layerview-destroy",{view:i,layerView:e}),i.emit("layerview-destroy",{layer:r,layerView:e}),this.done=!0,this.layer=null,this.layerView=null,this.view=null,this.layerViewImporter=null}async start(){if(this._started)return;this._started=!0;const{_controller:{signal:e},layer:r,view:i}=this;this._map=i.map;try{var a,s;let o,n;if(await r.load({signal:e}),"prefetchResources"in r&&await r.prefetchResources({signal:e}),r.createLayerView)o=await r.createLayerView(i,{signal:e});else{if(!this.layerViewImporter.hasLayerViewModule(r))throw new l("layer:view-not-supported","No layerview implementation was found");const t=await this.layerViewImporter.importLayerView(r);c(e),o="default"in t?new t.default({layer:r,view:i}):new t({layer:r,view:i})}const h=()=>{n=t(n),o.destroy(),o.layer=null,o.parent=null,o.view=null,this.done=!0};n=w(e,h),c(e);try{await o.when()}catch(e){throw h(),e}if(!(null==(a=this._map)||null==(s=a.allLayers)?void 0:s.includes(r)))return h(),void this._deferred.reject(new l("view:no-layerview-for-layer","The layer has been removed from the map",{layer:r}));this.layerView=o,r.emit("layerview-create",{view:i,layerView:o}),i.emit("layerview-create",{layer:r,layerView:o}),this.done=!0,this._deferred.resolve(o)}catch(e){r.emit("layerview-create-error",{view:i,error:e}),i.emit("layerview-create-error",{layer:r,error:e}),this.done=!0,this._deferred.reject(new l("layerview:create-error","layerview creation failed",{layer:r,error:e}))}}}let M=class extends _{constructor(e){super(e),this._layerLayerViewInfoMap=new Map,this._watchUpdatingTracking=new v,this.supportsGround=!0,this._preloadLayerViewModules=()=>{var e;const r=null==(e=this.view.map)?void 0:e.allLayers;if(r)for(const e of r)this.layerViewImporter.hasLayerViewModule(e)&&this.layerViewImporter.importLayerView(e)},this._reschedule=()=>(r(this._workPromise)&&(this._workPromise=n()),this.handles.remove("reschedule"),this.handles.add(d(this._doWork),"reschedule"),this._workPromise.promise),this._doWork=()=>{var e,i,t;const a=this.view.map;if(this._map!==a&&(this.clear(),this._map=a),r(this._workPromise))return void this.notifyChange("updating");this.handles.remove("reschedule"),this.handles.remove("collection-change");const s=new m({root:this,rootCollectionNames:this._rootCollectionNames,getChildrenFunction:e=>e.layers});if(!s)return this._workPromise.resolve(),void(this._workPromise=null);for(const e of s)this._createLayerView(e);this._refreshCollections();for(const[e,r]of this._layerLayerViewInfoMap)s.includes(e)||(this._layerLayerViewInfoMap.delete(r.layer),r.destroy());const o=s.filter((e=>"group"===e.type)).map((e=>e.layers)),l=[null==a||null==(e=a.ground)?void 0:e.layers,null==a||null==(i=a.basemap)?void 0:i.baseLayers,null==a||null==(t=a.basemap)?void 0:t.referenceLayers,null==a?void 0:a.layers,...o].filter((e=>!!e));this.handles.add(l.map((e=>this._watchUpdatingTracking.addOnCollectionChange(e,this._reschedule))),"collection-change"),this._workPromise.resolve(),this._workPromise=null}}initialize(){this.handles.add([u(this,"view.map.allLayers","change",this._preloadLayerViewModules,this._preloadLayerViewModules),f(this.view,["map.basemap","map.ground","map.layers","ready"],this._reschedule,!0)]),this._preloadLayerViewModules(),this._reschedule()}destroy(){this.clear(),this._watchUpdatingTracking.destroy(),this._map=null}get _layersToLayerViews(){const e=[["view.map.basemap.baseLayers","view.basemapView.baseLayerViews"],["view.map.layers","view.layerViews"],["view.map.basemap.referenceLayers","view.basemapView.referenceLayerViews"]];return this.supportsGround&&e.push(["view.map.ground.layers","view.groundView.layerViews"]),new Map(e)}get _rootCollectionNames(){return Array.from(this._layersToLayerViews.keys())}get updating(){return!(!i(this._workPromise)&&!this._watchUpdatingTracking.updating)||V(this._layerLayerViewInfoMap,(e=>!e.done))}clear(){if(!this.destroyed){for(const e of this._layerLayerViewInfoMap.values())e.destroy();this._layerLayerViewInfoMap.clear(),this._refreshCollections()}}async whenLayerView(e){return await this._reschedule(),this._layerLayerViewInfoMap.has(e)?this._layerLayerViewInfoMap.get(e).promise:h(new l("view:no-layerview-for-layer","No layerview has been found for the layer",{layer:e}))}_refreshCollections(){for(const[e,r]of this._layersToLayerViews)this._populateLayerViewsOwners(this.get(e),this.get(r),this.view);this.notifyChange("updating")}_populateLayerViewsOwners(e,r,i){if(!e||!r)return void(r&&r.removeAll());let t=0;for(const a of e){const e=this._layerLayerViewInfoMap.get(a);if(!e||!e.layerView)continue;const s=e.layerView;s.layer=a,s.parent=i,r.getItemAt(t)!==s&&r.splice(t,0,s),a.layers&&this._populateLayerViewsOwners(a.layers,s.layerViews,s),t+=1}t<r.length&&r.splice(t,r.length)}_createLayerView(e){if(this._layerLayerViewInfoMap.has(e))return this.view.ready&&this._layerLayerViewInfoMap.get(e).start(),void this.notifyChange("updating");e.load().catch((()=>{})),this.layerViewImporter.hasLayerViewModule(e)&&this.layerViewImporter.importLayerView(e);const r=new L(e,this.view,this.layerViewImporter);r.promise.then((()=>this._refreshCollections()),(r=>{var i,t;r&&(y(r)||"cancelled:layerview-create"===r.name)||g.error(`Failed to create layerview for layer title:'${null!=(i=e.title)?i:"no title"}', id:'${null!=(t=e.id)?t:"no id"}' of type '${e.type}'.`,{layer:e,error:r});this._refreshCollections()})),this._layerLayerViewInfoMap.set(e,r),this.view.ready&&r.start(),this.notifyChange("updating")}};e([s()],M.prototype,"_workPromise",void 0),e([s({readOnly:!0})],M.prototype,"_watchUpdatingTracking",void 0),e([s({dependsOn:["supportsGround"],readOnly:!0})],M.prototype,"_layersToLayerViews",null),e([s({dependsOn:["_layersToLayerViews"],readOnly:!0})],M.prototype,"_rootCollectionNames",null),e([s()],M.prototype,"layerViewImporter",void 0),e([s()],M.prototype,"supportsGround",void 0),e([s({readOnly:!0,dependsOn:["_workPromise","_watchUpdatingTracking.updating"]})],M.prototype,"updating",null),e([s({constructOnly:!0})],M.prototype,"view",void 0),M=e([o("esri.views.LayerViewManager")],M);var I=M;export default I;
