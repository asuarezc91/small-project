/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../../../core/clock.js";import{createScreenPoint as e}from"../../../core/screenUtils.js";import{someMap as i}from"../../../core/MapUtils.js";import{InputHandler as a}from"../InputHandler.js";import{DragEventSeparator as o}from"../DragEventSeparator.js";import{manhattanDistance as r}from"./support.js";import{DefaultParameters as n}from"./SingleAndDoubleClick.js";class s extends a{constructor(i=n.maximumDoubleClickDelay,a=n.maximumDoubleClickDistance,r=n.maximumDoubleTouchDelay,s=n.maximumDoubleTouchDistance,u=t){super(!1),this.maximumDoubleClickDelay=i,this.maximumDoubleClickDistance=a,this.maximumDoubleTouchDelay=r,this.maximumDoubleTouchDistance=s,this._clock=u,this._doubleTapDragReady=!1,this._doubleTapDragActive=!1,this._dragStartCenter=e(0,0),this._pointerState=new Map,this._doubleTapDrag=this.registerOutgoing("double-tap-drag"),this._dragEventSeparator=new o({start:(t,e)=>this._dragStart(t,e),update:(t,e)=>this._dragUpdate(e),end:(t,e)=>this._dragEnd(e)}),this.registerIncoming("drag",(t=>this._dragEventSeparator.handle(t))),this.registerIncoming("pointer-down",(t=>this._handlePointerDown(t))),this.registerIncoming("pointer-up",(()=>this._handlePointerUp()))}onUninstall(){this._pointerState.forEach((t=>{null!=t.doubleTapTimeout&&(t.doubleTapTimeout.remove(),t.doubleTapTimeout=null)}))}get hasPendingInputs(){return i(this._pointerState,(t=>null!=t.doubleTapTimeout))}_clearPointerDown(t){const e=this._pointerState.get(t);e&&(e.doubleTapTimeout.remove(),e.doubleTapTimeout=null,this._pointerState.delete(t),this.refreshHasPendingInputs())}_createDoubleTapDragData(t,e,i){const{button:a,buttons:o,pointer:r,pointers:n,pointerType:s,timestamp:u}=i;return{action:t,delta:e,button:a,buttons:o,pointer:r,pointers:n,pointerType:s,timestamp:u}}_dragStart(t,i){if(!this._doubleTapDragReady||1!==t)return;this._doubleTapDragReady=!1,this._doubleTapDragActive=!0;const{data:a,modifiers:o}=i,{center:r}=a;this._dragStartCenter=r;const n=this._createDoubleTapDragData("begin",e(0,0),a);this._doubleTapDrag.emit(n,void 0,o),i.stopPropagation()}_dragUpdate(t){if(!this._doubleTapDragActive)return;const{data:i,modifiers:a}=t,{center:o}=i,r=e(o.x-this._dragStartCenter.x,o.y-this._dragStartCenter.y),n=this._createDoubleTapDragData("update",r,i);this._doubleTapDrag.emit(n,void 0,a),t.stopPropagation()}_dragEnd(t){if(!this._doubleTapDragActive)return;const{data:i,modifiers:a}=t,{center:o}=i,r=e(o.x-this._dragStartCenter.x,o.y-this._dragStartCenter.y),n=this._createDoubleTapDragData("end",r,i);this._doubleTapDrag.emit(n,void 0,a),this._doubleTapDragActive=!1,t.stopPropagation()}_handlePointerDown(t){const{data:e}=t,i=this._pointerId(e),a=this._pointerState.get(i),{pointerType:o}=e.native;if(a){const n="touch"===o?this.maximumDoubleTouchDistance:this.maximumDoubleClickDistance;this._clearPointerDown(i),r(a.event.data,e)>n?this._storePointerDown(t):this._doubleTapDragReady=!0}else this._storePointerDown(t)}_handlePointerUp(){this._doubleTapDragReady=!1}_pointerId(t){const{native:e}=t,{pointerId:i,button:a,pointerType:o}=e;return"mouse"===o?`${i}:${a}`:`${o}`}_storePointerDown(t){const{data:e}=t,{pointerType:i}=e.native,a=this._pointerId(e),o="touch"===i?this.maximumDoubleTouchDelay:this.maximumDoubleClickDelay,r=this._clock.setTimeout((()=>this._clearPointerDown(a)),o);this._pointerState.set(a,{event:t,doubleTapTimeout:r}),this.refreshHasPendingInputs()}}export{s as DoubleTapDrag};
