/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import o from"../../../core/Accessor.js";let s=class extends o{constructor(e){super(),this.nativeIndex=null,this._detectedDeviceType="unknown","standard"===e.mapping?this._detectedDeviceType="standard":p.test(e.id)?this._detectedDeviceType="spacemouse":this._detectedDeviceType="unknown",this.nativeIndex=e.index}get native(){return(navigator.getGamepads?navigator.getGamepads():[])[this.nativeIndex]}get deviceType(){return this._detectedDeviceType}get axisThreshold(){return i[this.deviceType]}};e([t({nonNullable:!0,readOnly:!0})],s.prototype,"nativeIndex",void 0),e([t({type:String,readOnly:!0})],s.prototype,"deviceType",null),e([t({type:Number,readOnly:!0})],s.prototype,"axisThreshold",null),s=e([r("esri.views.input.gamepad.GamepadInputDevice")],s);const p=new RegExp("^(3dconnexion|space(mouse|navigator|pilot|explorer))","i"),i={standard:.15,spacemouse:.025,unknown:0};var n=s;export default n;
