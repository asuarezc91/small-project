/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../../core/Logger.js";import{clamp as t}from"../../../../../core/mathUtils.js";import{pt2px as r}from"../../../../../core/screenUtils.js";import{getSizeForValueSimple as o}from"./visualVariableSimpleUtils.js";const i=(e,t)=>e.order-t.order,n=(e,t)=>e.index-t.index,l=e.getLogger("esri/views/2d/engine/webgl/collisions/CollisionEngine");function s(e,r){const o=!!e.minScale,i=!!e.maxScale,n=o&&r.scaleToZoom(e.minScale)||0,l=i&&r.scaleToZoom(e.maxScale)||255;return{deconflictionStrategy:e.deconflictionStrategy,minZoom:t(Math.floor(10*n),0,255),maxZoom:t(Math.floor(10*l),0,255)}}function a(e){return t=>r(o(t,e))}function c(e){if(!e)return null;for(const t of e)if("size"===t.type)return a(t);return null}class d{constructor(e,t,r,o){this._vvHandle=null;const i=e.layer,{geometryType:n,labelingInfo:l,renderer:a}=i;a&&(this.vvEval=c("visualVariables"in a&&a.visualVariables)),this._vvHandle=i.watch("renderer",(e=>{e&&(this.vvEval=c("visualVariables"in e&&e.visualVariables))}));const d=i.featureReduction,f=d&&"cluster"===d.type&&d.labelingInfo,m=(l||[]).map((e=>s(e,o))),u=(f||[]).map((e=>s(e,o)));this.layerView=e,this.geometryType=n,this.index=t,this.order=r,this.zoomRanges=[...m,...u],this.layerView=e}hasVV(){return!!this.vvEval}allOrNothing(){return!("polyline"===this.geometryType)}destroy(){this._vvHandle.remove()}static create(e,t,r,o){const n=r.sort(i);let l=!1,s=-1;for(const e of n)!l&&e.order>t&&(s=e.index,l=!0),l&&e.index++;return l||(s=n.length),new d(e,s,t,o)}static delete(e,t){const r=t.sort(n);for(let o=e+1;o<r.length;o++)t[o].index--;t[e].destroy(),t.splice(e,1)}static find(e,t){for(const r of t)if(r.index===e)return r;return l.error("Tried to get a LayerCollisionInfo for an index that doesn't exist!"),null}}export default d;export{c as createLabelVVEvaluator};
