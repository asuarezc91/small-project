/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import e from"../../../../core/Logger.js";import r from"../../../../core/Error.js";import{isPowerOfTwo as t}from"../../../../core/mathUtils.js";import{pt2px as n}from"../../../../core/screenUtils.js";import"../../../../chunks/builtins.js";import o from"../../../webgl/Texture.js";import"../../../webgl/FramebufferObject.js";import"../../../webgl/RenderingContext.js";import{WGLGeometryType as s,VVType as i}from"./enums.js";import{copyAndPremultiply as a}from"./color.js";import{TextProperties as c}from"./SymbolProperties.js";const u=e.getLogger("esri.views.2d.engine.webgl.Utils"),f="geometry",l="per_instance",m="per_instance_vv",d=[{name:"geometry",strideInBytes:32,divisor:0}],p=[{name:"geometry",strideInBytes:32,divisor:0}],y=[{name:"geometry",strideInBytes:12,divisor:0}],g=[{name:"geometry",strideInBytes:36,divisor:0}],h=[{name:"geometry",strideInBytes:32,divisor:0}],w=[{name:"geometry",strideInBytes:36,divisor:0}];function v(e){const r={};for(const t of e)r[t.name]=t.strideInBytes;return r}const b=v(d),A=v(p),I=v(y),L=v(g),j=v(h),x=v(w);function E(e,r){switch(e){case s.MARKER:return b;case s.FILL:return r?I:A;case s.LINE:return L;case s.TEXT:return j;case s.LABEL:return x}}const U=["geometry"],F=["geometry"],M=["geometry"],T=["geometry"],z=["geometry"];function B(e){switch(e){case s.MARKER:return U;case s.FILL:return F;case s.LINE:return M;case s.TEXT:return T;case s.LABEL:return z}}function C(e){switch(e%4){case 0:case 2:return 4;case 1:case 3:return 1}}function R(e,r){switch(r%4){case 0:case 2:return new Uint32Array(Math.floor(e*r/4));case 1:case 3:return new Uint8Array(e*r)}}function O(e,r){switch(r%4){case 0:case 2:return new Uint32Array(e);case 1:case 3:return new Uint8Array(e)}}function $(e){return c.pool.acquire(e.color?a(e.color):[255,255,255,255],e.haloColor?a(e.haloColor):[255,255,255,255],n(e.haloSize),n(e.font.size),e.angle*Math.PI/180,e.xoffset/e.font.size,e.yoffset/e.font.size,"left"===e.horizontalAlignment?0:"right"===e.horizontalAlignment?1:.5,"top"===e.verticalAlignment?0:"bottom"===e.verticalAlignment?1:.5)}function N(e){return null!=e}function P(e){return"number"==typeof e}function S(e,t){switch(e){case"butt":return 0;case"round":return t?2:1;case"square":return 2;default:return u.error(new r("mapview-invalid-type",`Cap type ${e} is not a valid option. Defaulting to round`)),1}}function Z(e){switch(e){case"miter":return 2;case"bevel":return 0;case"round":return 1;default:return u.error(new r("mapview-invalid-type",`Join type ${e} is not a valid option. Defaulting to round`)),1}}function _(e){switch(e){case"opacity":return i.OPACITY;case"color":return i.COLOR;case"rotation":return i.ROTATION;case"size":return i.SIZE;default:return u.error(`Cannot interpret unknown vv: ${e}`),null}}function k(e){const{transform:r,hasZ:t,hasM:n}=e;return{transform:r,hasZ:t,hasM:n}}function q(e,r,t,n,o,s,i){for(const r in s){const n=s[r].stride,i=C(n),a=s[r].data,c=t[r].data,u=n*o.vertexCount/i,f=n*e/i,l=n*o.vertexFrom/i;for(let e=0;e<u;++e)c[e+f]=a[e+l]}const a=o.indexCount;for(let t=0;t<a;++t)n[t+r]=i[t+o.indexFrom]-o.vertexFrom+e}const D={geometry:35044};function K(e,r){const t=[];for(let n=0;n<5;++n){const o=B(n),s={};for(const e of o)s[e]={data:r(n,e)};t.push({data:e(n),buffers:s})}return t}function X(e,r){let n,s;return t(r.width)&&t(r.height)?(n=!0,s=9987):(n=!1,s=9729),new o(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,hasMipmap:n,samplingMode:s,wrapMode:33071,flipped:!0},r)}function J(e){return{vertexFrom:void 0,vertexTo:void 0,geometry:e}}function Y(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5126:case 5124:case 5125:return 4}}function G(e){switch(e){case 5121:return 1;case 32819:return 2;case 5126:return 4;default:return void u.error(new r("webgl-utils",`Unable to handle type ${e}`))}}function H(e){switch(e){case 5121:return Uint8Array;case 32819:return Uint16Array;case 5126:return Float32Array;default:return void u.error(new r("webgl-utils",`Unable to handle type ${e}`))}}const Q=new Map,V=(e,r)=>{if(!Q.has(e)){const t=function(e){const r={};for(const t in e){const n=e[t];let o=0;r[t]=n.map((e=>{const r={...e,normalized:e.normalized||!1,divisor:e.divisor||0,offset:o,stride:0};return o+=e.count*Y(e.type),r})),r[t].forEach((e=>e.stride=o))}return r}(r),n={strides:(e=>{const r={};for(const t in e){const n=e[t];r[t]=n.length?n[0].stride:0}return r})(t),bufferLayouts:t,attributes:(e=>{const r={};for(const t in e)for(const n of e[t])r[n.name]=n.location;return r})(r)};Q.set(e,n)}return Q.get(e)};export{A as C_FILL_STRIDE_SPEC,I as C_FILL_STRIDE_SPEC_DD,p as C_FILL_VERTEX_DEF,y as C_FILL_VERTEX_DEF_DD,b as C_ICON_STRIDE_SPEC,d as C_ICON_VERTEX_DEF,x as C_LABEL_STRIDE_SPEC,w as C_LABEL_VERTEX_DEF,L as C_LINE_STRIDE_SPEC,g as C_LINE_VERTEX_DEF,j as C_TEXT_STRIDE_SPEC,h as C_TEXT_VERTEX_DEF,f as C_VBO_GEOMETRY,D as C_VBO_INFO,l as C_VBO_PERINSTANCE,m as C_VBO_PERINSTANCE_VV,R as allocateTypedArrayBuffer,O as allocateTypedArrayBufferwithData,q as copyMeshData,K as createGeometryData,V as createProgramDescriptor,X as createTextureFromTexelData,J as geometryToMappedGeometry,Y as getBytes,S as getCapType,Z as getJoinType,B as getNamedBuffers,H as getPixelArrayCtor,G as getPixelBytes,E as getStrides,$ as getTextProperties,k as getTransformParams,_ as getVVType,N as isDefined,P as isNumber,C as strideToPackingFactor};
