/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{TILE_SIZE as i}from"./definitions.js";import{between as t}from"./GeometryUtils.js";import{Point as s}from"./Geometry.js";class h{constructor(i,t,s){this.ratio=i,this.x=t,this.y=s}}class n{constructor(t,s,h,n=8,e=8){this.lines=[],this.starts=[],this.validateTessellation=!0,this.pixelRatio=n,this.pixelMargin=e,this.tileSize=i*n,this.dz=t,this.yPos=s,this.xPos=h}setExtent(i){this.finalRatio=this.tileSize/i*(1<<this.dz);let t=this.pixelRatio*this.pixelMargin;t/=this.finalRatio;const s=i>>this.dz;t>s&&(t=s),this.margin=t,this.xmin=s*this.xPos-t,this.ymin=s*this.yPos-t,this.xmax=this.xmin+s+2*t,this.ymax=this.ymin+s+2*t}reset(i){this.type=i,this.lines=[],this.starts=[],this.line=null,this.start=0}moveTo(i,t){this._pushLine(),this._prevIsIn=this._isIn(i,t),this._moveTo(i,t,this._prevIsIn),this._prevPt=new s(i,t),this._firstPt=new s(i,t),this._dist=0}lineTo(i,t){const n=this._isIn(i,t),e=new s(i,t),l=s.distance(this._prevPt,e);let x,a,y,r,o,m,u,p;if(n)this._prevIsIn?this._lineTo(i,t,!0):(x=this._prevPt,a=e,y=this._intersect(a,x),this.start=this._dist+l*(1-this._r),this._lineTo(y.x,y.y,!0),this._lineTo(a.x,a.y,!0));else if(this._prevIsIn)a=this._prevPt,x=e,y=this._intersect(a,x),this._lineTo(y.x,y.y,!0),this._lineTo(x.x,x.y,!1);else{const i=this._prevPt,t=e;if(i.x<=this.xmin&&t.x<=this.xmin||i.x>=this.xmax&&t.x>=this.xmax||i.y<=this.ymin&&t.y<=this.ymin||i.y>=this.ymax&&t.y>=this.ymax)this._lineTo(t.x,t.y,!1);else{const s=[];if((i.x<this.xmin&&t.x>this.xmin||i.x>this.xmin&&t.x<this.xmin)&&(r=(this.xmin-i.x)/(t.x-i.x),p=i.y+r*(t.y-i.y),p<=this.ymin?m=!1:p>=this.ymax?m=!0:s.push(new h(r,this.xmin,p))),(i.x<this.xmax&&t.x>this.xmax||i.x>this.xmax&&t.x<this.xmax)&&(r=(this.xmax-i.x)/(t.x-i.x),p=i.y+r*(t.y-i.y),p<=this.ymin?m=!1:p>=this.ymax?m=!0:s.push(new h(r,this.xmax,p))),(i.y<this.ymin&&t.y>this.ymin||i.y>this.ymin&&t.y<this.ymin)&&(r=(this.ymin-i.y)/(t.y-i.y),u=i.x+r*(t.x-i.x),u<=this.xmin?o=!1:u>=this.xmax?o=!0:s.push(new h(r,u,this.ymin))),(i.y<this.ymax&&t.y>this.ymax||i.y>this.ymax&&t.y<this.ymax)&&(r=(this.ymax-i.y)/(t.y-i.y),u=i.x+r*(t.x-i.x),u<=this.xmin?o=!1:u>=this.xmax?o=!0:s.push(new h(r,u,this.ymax))),0===s.length)o?m?this._lineTo(this.xmax,this.ymax,!0):this._lineTo(this.xmax,this.ymin,!0):m?this._lineTo(this.xmin,this.ymax,!0):this._lineTo(this.xmin,this.ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this.start=this._dist+l*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this.start=this._dist+l*s[0].ratio;for(let i=0;i<s.length;i++)this._lineTo(s[i].x,s[i].y,!0)}this._lineTo(t.x,t.y,!1)}}this._dist+=l,this._prevIsIn=n,this._prevPt=e}close(){if(this.line.length>2){const i=this._firstPt,t=this._prevPt;i.x===t.x&&i.y===t.y||this.lineTo(i.x,i.y);const s=this.line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),0===this.lines.length?null:(3===this.type&&i&&l.simplify(this.tileSize,this.margin*this.finalRatio,this.lines),this.lines)}resultWithStarts(){if(2!==this.type)throw new Error("Only valid for lines");this._pushLine();const i=this.lines,t=i.length;if(0===t)return null;const s=[];for(let h=0;h<t;h++)s.push({line:i[h],start:this.starts[h]||0});return s}_isIn(i,t){return i>=this.xmin&&i<=this.xmax&&t>=this.ymin&&t<=this.ymax}_intersect(i,t){let h,n,e;if(t.x>=this.xmin&&t.x<=this.xmax)n=t.y<=this.ymin?this.ymin:this.ymax,e=(n-i.y)/(t.y-i.y),h=i.x+e*(t.x-i.x);else if(t.y>=this.ymin&&t.y<=this.ymax)h=t.x<=this.xmin?this.xmin:this.xmax,e=(h-i.x)/(t.x-i.x),n=i.y+e*(t.y-i.y);else{n=t.y<=this.ymin?this.ymin:this.ymax,h=t.x<=this.xmin?this.xmin:this.xmax;const s=(h-i.x)/(t.x-i.x),l=(n-i.y)/(t.y-i.y);s<l?(e=s,n=i.y+s*(t.y-i.y)):(e=l,h=i.x+l*(t.x-i.x))}return this._r=e,new s(h,n)}_pushLine(){this.line&&(1===this.type?this.line.length>0&&(this.lines.push(this.line),this.starts.push(this.start)):2===this.type?this.line.length>1&&(this.lines.push(this.line),this.starts.push(this.start)):3===this.type&&this.line.length>3&&(this.lines.push(this.line),this.starts.push(this.start))),this.line=[],this.start=0}_moveTo(i,t,h){3!==this.type?h&&(i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),t=Math.round((t-(this.ymin+this.margin))*this.finalRatio),this.line.push(new s(i,t))):(h||(i<this.xmin&&(i=this.xmin),i>this.xmax&&(i=this.xmax),t<this.ymin&&(t=this.ymin),t>this.ymax&&(t=this.ymax)),i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),t=Math.round((t-(this.ymin+this.margin))*this.finalRatio),this.line.push(new s(i,t)),this._is_h=!1,this._is_v=!1)}_lineTo(i,t,h){let n,e;if(3!==this.type)if(h){if(i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),t=Math.round((t-(this.ymin+this.margin))*this.finalRatio),this.line.length>0&&(n=this.line[this.line.length-1],n.equals(i,t)))return;this.line.push(new s(i,t))}else this.line&&this.line.length>0&&this._pushLine();else if(h||(i<this.xmin&&(i=this.xmin),i>this.xmax&&(i=this.xmax),t<this.ymin&&(t=this.ymin),t>this.ymax&&(t=this.ymax)),i=Math.round((i-(this.xmin+this.margin))*this.finalRatio),t=Math.round((t-(this.ymin+this.margin))*this.finalRatio),this.line&&this.line.length>0){n=this.line[this.line.length-1];const h=n.x===i,l=n.y===t;if(h&&l)return;this._is_h&&h||this._is_v&&l?(n.x=i,n.y=t,e=this.line[this.line.length-2],e.x===i&&e.y===t?(this.line.pop(),this.line.length<=1?(this._is_h=!1,this._is_v=!1):(e=this.line[this.line.length-2],this._is_h=e.x===i,this._is_v=e.y===t)):(this._is_h=e.x===i,this._is_v=e.y===t)):(this.line.push(new s(i,t)),this._is_h=h,this._is_v=l)}else this.line.push(new s(i,t))}}class e{setExtent(i){this._ratio=4096===i?1:4096/i}get validateTessellation(){return this._ratio<1}reset(i){this.lines=[],this.line=null}moveTo(i,t){this.line&&this.lines.push(this.line),this.line=[];const h=this._ratio;this.line.push(new s(i*h,t*h))}lineTo(i,t){const h=this._ratio;this.line.push(new s(i*h,t*h))}close(){const i=this.line;i&&!i[0].isEqual(i[i.length-1])&&i.push(i[0])}result(){return this.line&&this.lines.push(this.line),0===this.lines.length?null:this.lines}}class l{static simplify(i,t,s){if(!s)return;const h=-t,n=i+t,e=-t,x=i+t,a=[],y=[],r=s.length;for(let i=0;i<r;++i){const t=s[i];if(!t||t.length<2)continue;let l,r=t[0];const o=t.length;for(let s=1;s<o;++s)l=t[s],r.x===l.x&&(r.x<=h&&(r.y>l.y?(a.push(i),a.push(s),a.push(0),a.push(-1)):(y.push(i),y.push(s),y.push(0),y.push(-1))),r.x>=n&&(r.y<l.y?(a.push(i),a.push(s),a.push(1),a.push(-1)):(y.push(i),y.push(s),y.push(1),y.push(-1)))),r.y===l.y&&(r.y<=e&&(r.x<l.x?(a.push(i),a.push(s),a.push(2),a.push(-1)):(y.push(i),y.push(s),y.push(2),y.push(-1))),r.y>=x&&(r.x>l.x?(a.push(i),a.push(s),a.push(3),a.push(-1)):(y.push(i),y.push(s),y.push(3),y.push(-1)))),r=l}if(0===a.length||0===y.length)return;l.fillParent(s,y,a),l.fillParent(s,a,y);const o=[];l.calcDeltas(o,y,a),l.calcDeltas(o,a,y),l.addDeltas(o,s)}static fillParent(i,s,h){const n=h.length,e=s.length;for(let l=0;l<e;l+=4){const e=s[l],x=s[l+1],a=s[l+2],y=i[e][x-1],r=i[e][x];let o=8092,m=-1;for(let s=0;s<n;s+=4){if(h[s+2]!==a)continue;const n=h[s],e=h[s+1],l=i[n][e-1],x=i[n][e];switch(a){case 0:case 1:if(t(y.y,l.y,x.y)&&t(r.y,l.y,x.y)){const i=Math.abs(x.y-l.y);i<o&&(o=i,m=s)}break;case 2:case 3:if(t(y.x,l.x,x.x)&&t(r.x,l.x,x.x)){const i=Math.abs(x.x-l.x);i<o&&(o=i,m=s)}}}s[l+3]=m}}static calcDeltas(i,t,s){const h=t.length;for(let n=0;n<h;n+=4){const h=[],e=l.calcDelta(n,t,s,h);i.push(t[n]),i.push(t[n+1]),i.push(t[n+2]),i.push(e)}}static calcDelta(i,t,s,h){const n=t[i+3];if(-1===n)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),l.calcDelta(n,s,t,h)+1)}static addDeltas(i,t){const s=i.length;let h=0;for(let t=0;t<s;t+=4){const s=i[t+3];s>h&&(h=s)}for(let n=0;n<s;n+=4){const s=t[i[n]],e=i[n+1],l=h-i[n+3];switch(i[n+2]){case 0:s[e-1].x-=l,s[e].x-=l,1===e&&(s[s.length-1].x-=l),e===s.length-1&&(s[0].x-=l);break;case 1:s[e-1].x+=l,s[e].x+=l,1===e&&(s[s.length-1].x+=l),e===s.length-1&&(s[0].x+=l);break;case 2:s[e-1].y-=l,s[e].y-=l,1===e&&(s[s.length-1].y-=l),e===s.length-1&&(s[0].y-=l);break;case 3:s[e-1].y+=l,s[e].y+=l,1===e&&(s[s.length-1].y+=l),e===s.length-1&&(s[0].y+=l)}}}}export{e as SimpleBuilder,n as TileClipper};
