/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../../../../core/has.js";import o from"../../../../../../core/Logger.js";import{TEXTURE_BINDING_HIGHLIGHT_1 as i}from"../../definitions.js";import"../../../../../../chunks/builtins.js";import t from"../../../../../webgl/Texture.js";import"../../../../../webgl/FramebufferObject.js";import"../../../../../webgl/RenderingContext.js";import{HIGHLIGHT_SIZING as e,SHADE_TEXTURE_SIZE as l,SIGMAS as r}from"./parameters.js";const n=o.getLogger("esri.views.2d.engine.webgl.painter.highlight.HighlightGradient");const h=[0,0,0,0];export default class{constructor(){this._convertedHighlightOptions={fillColor:[.2*.75,.6*.75,.675,.75],outlineColor:[.2*.9,.54,.81,.9],outlinePosition:e.outlinePosition,outlineWidth:e.outlineWidth,innerHaloWidth:e.innerHaloWidth,outerHaloWidth:e.outerHaloWidth},this.shadeTexChanged=!0,this.texelData=new Uint8Array(4*l),this.minMaxDistance=[0,0]}setHighlightOptions(o){const i=this._convertedHighlightOptions;var t,s;t=o,(s=i).fillColor[0]=t.color.r/255,s.fillColor[1]=t.color.g/255,s.fillColor[2]=t.color.b/255,s.fillColor[3]=t.color.a,t.haloColor?(s.outlineColor[0]=t.haloColor.r/255,s.outlineColor[1]=t.haloColor.g/255,s.outlineColor[2]=t.haloColor.b/255,s.outlineColor[3]=t.haloColor.a):(s.outlineColor[0]=s.fillColor[0],s.outlineColor[1]=s.fillColor[1],s.outlineColor[2]=s.fillColor[2],s.outlineColor[3]=s.fillColor[3]),s.fillColor[3]*=t.fillOpacity,s.outlineColor[3]*=t.haloOpacity,s.fillColor[0]*=s.fillColor[3],s.fillColor[1]*=s.fillColor[3],s.fillColor[2]*=s.fillColor[3],s.outlineColor[0]*=s.outlineColor[3],s.outlineColor[1]*=s.outlineColor[3],s.outlineColor[2]*=s.outlineColor[3],s.outlineWidth=e.outlineWidth,s.outerHaloWidth=e.outerHaloWidth,s.innerHaloWidth=e.innerHaloWidth,s.outlinePosition=e.outlinePosition;const a=i.outlinePosition-i.outlineWidth/2-i.outerHaloWidth,d=i.outlinePosition-i.outlineWidth/2,u=i.outlinePosition+i.outlineWidth/2,g=i.outlinePosition+i.outlineWidth/2+i.innerHaloWidth,C=Math.sqrt(Math.PI/2)*r[3],f=Math.abs(a)>C?Math.round(10*(Math.abs(a)-C))/10:0,c=Math.abs(g)>C?Math.round(10*(Math.abs(g)-C))/10:0;let m;f&&!c?n.error("The outer rim of the highlight is "+f+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards positive values (inwards)."):!f&&c?n.error("The inner rim of the highlight is "+c+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards negative values (outwards)."):f&&c&&n.error("The highlight is "+Math.max(f,c)+"px away from the edge of the feature; consider reducing some width values.");const p=[void 0,void 0,void 0,void 0];function x(o,i,t){p[0]=(1-t)*o[0]+t*i[0],p[1]=(1-t)*o[1]+t*i[1],p[2]=(1-t)*o[2]+t*i[2],p[3]=(1-t)*o[3]+t*i[3]}const{texelData:w}=this;for(let o=0;o<l;++o)m=a+o/(l-1)*(g-a),m<a?(p[4*o+0]=0,p[4*o+1]=0,p[4*o+2]=0,p[4*o+3]=0):m<d?x(h,i.outlineColor,(m-a)/(d-a)):m<u?[p[0],p[1],p[2],p[3]]=i.outlineColor:m<g?x(i.outlineColor,i.fillColor,(m-u)/(g-u)):[p[4*o+0],p[4*o+1],p[4*o+2],p[4*o+3]]=i.fillColor,w[4*o+0]=255*p[0],w[4*o+1]=255*p[1],w[4*o+2]=255*p[2],w[4*o+3]=255*p[3];this.minMaxDistance[0]=a,this.minMaxDistance[1]=g,this.shadeTexChanged=!0}applyHighlightOptions(o,e){this.shadeTex||(this.shadeTex=new t(o,{target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,width:l,height:1,samplingMode:9729})),this.shadeTexChanged&&(this.shadeTex.updateData(0,0,0,l,1,this.texelData),this.shadeTexChanged=!1),o.bindTexture(this.shadeTex,i),e.setUniform2fv("u_minMaxDistance",this.minMaxDistance)}destroy(){this.shadeTex&&(this.shadeTex.dispose(),this.shadeTex=null)}}
