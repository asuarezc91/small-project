/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../../../../core/has.js";import e from"../../../../../../core/Logger.js";import"../../../../../../chunks/builtins.js";import t from"../../../../../webgl/Texture.js";import s from"../../../../../webgl/FramebufferObject.js";import"../../../../../webgl/RenderingContext.js";import i from"../../VertexStream.js";const r=e.getLogger("esri.views.2d.engine.webgl.effects.post-processing.DRA");class o{constructor(){this._fbos=null,this._colorAttachmentsPoints=[36064,36065],this._size=[0,0],this._programDesc={"min-max":{vsPath:"post-processing/pp",fsPath:"post-processing/dra/min-max",attributes:{a_position:0}},dra:{vsPath:"post-processing/pp",fsPath:"post-processing/dra",attributes:{a_position:0}}}}dispose(){this._disposeFBOs(),this._layerTexture&&(this._layerTexture.dispose(),this._layerTexture=null)}draw(e,t,s){this._createOrResizeResources(e);const{context:o,state:n,painter:a,pixelRatio:h}=e,{materialManager:d}=a,u=this._programDesc,{size:l}=n,p=this._fbos,m=[h*l[0],h*l[1]],c=o.capabilities.drawBuffers;if(!c)return void r.error("esri.DRA","WebGL Extension WEBGL_draw_buffers isn't supported!");this._quad||(this._quad=new i(o,[-1,-1,1,-1,-1,1,1,1]));const f=this._layerTexture;t.copyToTexture(0,0,m[0],m[1],0,0,f);const _=this._quad;_.bind();const g=d.getProgram(e,u["min-max"]);o.bindProgram(g),o.setBlendingEnabled(!1);let x,b=t.colorTexture,T=t.colorTexture;const w=[m[0],m[1]],M=[0,0];for(let e=0;e<p.length;e++){const t=p[e],s=t.descriptor;M[0]=s.width,M[1]=s.height,o.bindFramebuffer(t),c.drawBuffers(this._colorAttachmentsPoints),o.setViewport(0,0,s.width,s.height),x=e,x>6&&(x=6),o.bindTexture(b,x),o.bindTexture(T,x+1),g.setUniform1i("u_minTexture",x),g.setUniform1i("u_maxTexture",x+1),g.setUniform2fv("u_srcResolution",w),g.setUniform2fv("u_dstResolution",M),_.draw(),b=t.getColorTexture(36064),T=t.getColorTexture(36065),w[0]=M[0],w[1]=M[1]}o.setViewport(0,0,m[0],m[1]),o.bindFramebuffer(t);const P=d.getProgram(e,u.dra);o.bindProgram(P),o.bindTexture(b,5),o.bindTexture(T,6),o.bindTexture(f,7),P.setUniform1i("u_minColor",5),P.setUniform1i("u_maxColor",6),P.setUniform1i("u_texture",7),o.setStencilWriteMask(0),o.setStencilTestEnabled(!1),o.setDepthWriteEnabled(!1),o.setDepthTestEnabled(!1),_.draw(),o.setBlendingEnabled(!0),o.setBlendFunction(1,771),o.setStencilTestEnabled(!0),_.unbind()}_createOrResizeResources(e){const{context:i,state:r,pixelRatio:o}=e,{size:n}=r;let a=Math.round(o*n[0]),h=Math.round(o*n[1]);if(this._size[0]!==a||this._size[1]!==h){for(this._size[0]=a,this._size[1]=h,this._disposeFBOs(),this._fbos=[];a>1||h>1;){a=Math.max(1,0|Math.floor((a+2-1)/2)),h=Math.max(1,0|Math.floor((h+2-1)/2));const e={pixelFormat:6408,internalFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,flipped:!1,width:a,height:h},t=new s(i,{depthStencilTarget:0,width:a,height:h},[{attachmentPoint:36064,texture:e},{attachmentPoint:36065,texture:e}]);this._fbos.push(t)}this._layerTexture?this._layerTexture.resize(Math.round(o*n[0]),Math.round(o*n[1])):this._layerTexture=new t(i,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!1,width:Math.round(o*n[0]),height:Math.round(o*n[1])})}}_disposeFBOs(){if(this._fbos){for(const e of this._fbos)e.dispose();this._fbos.length=0,this._fbos=null}}}export{o as DRA};
