/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../config.js";import{isNone as t}from"../../../../core/maybe.js";import i from"../../../../core/Logger.js";import s from"../../../../core/Error.js";import{isAbortError as r}from"../../../../core/promiseUtils.js";import{pt2px as a}from"../../../../core/screenUtils.js";import n from"../../../../request.js";import{s as o}from"../../../../chunks/vec2.js";import{TEXTURE_BINDING_GLYPH_ATLAS as c,TEXTURE_BINDING_SPRITE_ATLAS as h}from"./definitions.js";import{c as d}from"../../../../chunks/vec2f32.js";import{bidiText as u}from"./util/BidiText.js";import l from"../../../../symbols/cim/Rasterizer.js";import{MosaicType as g}from"./enums.js";import{getFullyQualifiedFontName as p}from"./fontUtils.js";import m from"./GlyphMosaic.js";import f from"./GlyphSource.js";import y from"./SDFConverter.js";import _ from"./SpriteMosaic.js";import w,{isPNG as M,isAnimatedPNG as S}from"./animatedFormats/apng.js";import I,{isGIF as v,isAnimatedGIF as T}from"./animatedFormats/gif.js";import{ok as b}from"./util/Result.js";import{keyFromSymbol as x}from"./util/symbolUtils.js";const z=d(),j=i.getLogger("esri.views.2d.engine.webgl.TextureManager"),R=e=>"esriSMS"===e.type&&e.path;function C(e){switch(e.type){case"esriSMS":case"esriPMS":case"CIMPointSymbol":case"CIMVectorMarker":case"CIMPictureMarker":case"CIMCharacterMarker":return!1;default:return!0}}function U(e,t){const i=Math.round(a(t)*window.devicePixelRatio),s=i>=128?2:4;return Math.min(e,i*s)}const F=(e,t,i)=>j.error(new s(e,t,i));class P{constructor(e,t,i){this.mosaicType=e,this.page=t,this.sdf=i}static fromMosaic(e,t){return new P(e,t.page,t.sdf)}}export default class{constructor(t){this._invalidFontsMap=new Map,this._sdfConverter=new y(126),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._rasterizer=new l,this._ongoingRasterizations=new Map,this._spriteMosaic=new _(t,2048,2048,500),this._glyphSource=new f(`${e.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new m(1024,1024,this._glyphSource)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._rasterizer=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}async rasterizeItem(e,i,s,r){if(t(e))return F("mapview-null-resource","Unable to rasterize null resource"),null;switch(e.type){case"CIMTextSymbol":case"esriTS":{const t=await this._rasterizeText(e,s,r);return t.forEach((e=>this._setTextureBinding(g.GLYPH,e))),{glyphMosaicItems:t}}case"esriSMS":case"esriPMS":case"esriSFS":case"esriPFS":case"esriSLS":default:{if((a=e).type&&-1!==a.type.toLowerCase().indexOf("3d"))return F("mapview-invalid-type",`MapView does not support symbol type: ${e.type}`,e),null;const t=await this._rasterizeSpriteSymbol(e,i,r);return b(t)&&t&&this._setTextureBinding(g.SPRITE,t),{spriteMosaicItem:t}}}var a}bindTextures(e,t,i,s=!1){if(0===i.textureBinding)return;const r=this._bindingInfos[i.textureBinding-1],a=r.page,n=s?9987:9729;switch(r.mosaicType){case g.SPRITE:{const i=this.sprites.getWidth(a),s=this.sprites.getHeight(a),r=o(z,i,s);return this._spriteMosaic.bind(e,n,a,h),t.setUniform1i("u_texture",h),void t.setUniform2fv("u_mosaicSize",r)}case g.GLYPH:{const i=this.glyphs.width,s=this.glyphs.height,r=o(z,i,s);return this._glyphMosaic.bind(e,n,a,c),t.setUniform1i("u_texture",c),void t.setUniform2fv("u_mosaicSize",r)}default:j.error("mapview-texture-manager",`Cannot handle unknown type ${r.mosaicType}`)}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3}_setTextureBinding(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=P.fromMosaic(e,t),r=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,r),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)}async _rasterizeText(e,t,i){const s=p(e.font),r=this._invalidFontsMap.has(s),a=t||function(e){const t=[];for(let i=0;i<e.length;i++)t.push(e.charCodeAt(i));return t}(u(e.text)[0]);try{return await this._glyphMosaic.getGlyphItems(r?"arial-unicode-ms-regular":s,a,i)}catch(e){return F("mapview-invalid-resource",`Couldn't find font ${s}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(s,!0),this._glyphMosaic.getGlyphItems("arial-unicode-ms-regular",a,i)}}async _rasterizeSpriteSymbol(e,t,i){if(function(e){switch(e.type){case"CIMSolidStroke":case"CIMSolidFill":return!0;case"esriSFS":return"esriSFSSolid"===e.style||"esriSFSNull"===e.style;case"esriSLS":return"esriSLSSolid"===e.style||"esriSLSNull"===e.style;default:return!1}}(e))return null;const r=x(e);if(this._spriteMosaic.has(r))return this._spriteMosaic.getSpriteItem(r);if(R(e)||(e=>e.url||e.imageData)(e))return this._handleAsyncResource(r,e,i);const a=this._rasterizer.rasterizeJSONResource(e,t);if(a){const{size:t,image:i,sdf:s,simplePattern:n}=a;return this._addItemToMosaic(r,t,{type:"static",data:i},C(e),s,n)}return new s("TextureManager","unrecognized or null rasterized image")}async _handleAsyncResource(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;s=R(t)?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s);try{await s,this._ongoingRasterizations.delete(e)}catch{this._ongoingRasterizations.delete(e)}return s}async _handleSVG(e,t,i){const s=[126,126],r=await this._sdfConverter.draw(e.path,i);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(r.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,i){const a=await async function(e,t){const i=e.imageData?`data:${e.contentType};base64,${e.imageData}`:e.url;let a;const o=";base64,";if(-1!==i.indexOf(o)){const e=i.indexOf(o)+o.length,t=i.substring(e),s=atob(t),r=new Uint8Array(s.length);for(let e=0;e<s.length;e++)r[e]=s.charCodeAt(e);a=r.buffer}else try{const{data:e}=await n(i,{responseType:"array-buffer",...t});a=e}catch(e){if(!r(e))return new s("mapview-invalid-resource",`Could not fetch requested resource at ${i}`)}return a}(e,i);if(b(a)){const o=v(a),c=M(a);if(!o&&!c)return new s("mapview-invalid-resource","Image data is neither GIF nor PNG!");let h;try{o&&T(a)?h=await I.create(a,i):c&&S(a)&&(h=await w.create(a,i))}catch(e){if(!r(e))return new s("mapview-invalid-resource","Could not fetch requested resource!")}if(h&&b(h))return this._addItemToMosaic(t,[h.width,h.height],{type:"animated",data:h},C(e),!1,!1);const d=new Blob([a],{type:o?"image/gif":"image/png"}),u=await async function(e){const t=window.URL.createObjectURL(e);try{const{data:e}=await n(t,{responseType:"image"});return window.URL.revokeObjectURL(t),e}catch(e){return window.URL.revokeObjectURL(t),new s("mapview-invalid-resource",`Could not fetch requested resource at ${t}`)}}(d);if(u&&u instanceof HTMLImageElement){let i=u.width,s=u.height;"esriPMS"===e.type&&(i=Math.round(U(u.width,e.width)),s=Math.round(u.height*(i/u.width)));const{size:r,sdf:a,image:n}=this._rasterizer.rasterizeImageResource(i,s,u,e.colorSubstitutions);return this._addItemToMosaic(t,r,{type:"static",data:n},C(e),a,!1)}}return new s("mapview-invalid-resource","Could not handle resource!")}async _handleImage(e,t,i){if((e=>e.url&&-1!==e.url.indexOf(".gif")||e.contentType&&"image/gif"===e.contentType||e.imageData&&-1!==e.imageData.indexOf("data:image/gif"))(e)||(e=>e.url&&-1!==e.url.indexOf(".png")||e.contentType&&"image/png"===e.contentType||e.imageData&&-1!==e.imageData.indexOf("data:image/png"))(e))return this._handleGIFOrPNG(e,t,i);const o=e.imageData?`data:${e.contentType};base64,${e.imageData}`:e.url;try{const{data:s}=await n(o,{responseType:"image",...i});-1!==o.indexOf("data:image/svg+xml")&&(s.width=a(e.width),s.height=a(e.height));let r=s.width,c=s.height;"esriPMS"===e.type&&(r=Math.round(U(s.width,e.width)),c=Math.round(s.height*(r/s.width)));const{size:h,sdf:d,image:u}=this._rasterizer.rasterizeImageResource(r,c,s,e.colorSubstitutions);return this._addItemToMosaic(t,h,{type:"static",data:u},C(e),d,!1)}catch(e){if(!r(e))return new s("mapview-invalid-resource",`Could not fetch requested resource at ${o}`)}}_addItemToMosaic(e,t,i,s,r,a){return this._spriteMosaic.addSpriteItem(e,t,i,s,r,a)}}
