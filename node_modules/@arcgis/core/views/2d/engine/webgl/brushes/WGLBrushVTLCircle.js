/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as t}from"../../../../../core/maybe.js";import{c as r}from"../../../../../chunks/vec4f32.js";import{u32to4Xu8 as e}from"../number.js";import{WGLDrawPhase as o}from"../enums.js";import i from"./WGLBrush.js";const a=[1,1,1,1];class s extends i{constructor(){super(...arguments),this._color=r(),this._strokeColor=r(),this._programOptions={id:!1}}dispose(){}drawMany(r,i){const{context:s,state:n,drawPhase:c,styleLayerUID:l}=r,u=r.displayLevel,f=r.styleLayer,h=r.painter.getVectorTileProgramCache(),m=f.hasDataDrivenRadius?1:f.getPaintValue("circle-radius",u),_=f.hasDataDrivenColor?a:f.getPaintValue("circle-color",u),d=f.hasDataDrivenOpacity?1:f.getPaintValue("circle-opacity",u),p=f.hasDataDrivenStrokeWidth?1:f.getPaintValue("circle-stroke-width",u),g=f.hasDataDrivenStrokeColor?a:f.getPaintValue("circle-stroke-color",u),y=f.hasDataDrivenStrokeOpacity?1:f.getPaintValue("circle-stroke-opacity",u),v=f.hasDataDrivenBlur?0:f.getPaintValue("circle-blur",u);let D=d*_[3];this._color[0]=D*_[0],this._color[1]=D*_[1],this._color[2]=D*_[2],this._color[3]=D,D=y*g[3],this._strokeColor[0]=D*g[0],this._strokeColor[1]=D*g[1],this._strokeColor[2]=D*g[2],this._strokeColor[3]=D;const k=f.getPaintValue("circle-translate",u),P=f.getPaintValue("circle-translate-anchor",u),U=c===o.HITTEST,V=U?1:0,C=this._programOptions;C.id=U;const x=h.getProgram(5,V,C);if(s.bindProgram(x),x.setUniformMatrix3fv("u_displayMat3",1===P?n.displayMat3:n.displayViewMat3),x.setUniform2fv("u_circleTranslation",k),x.setUniform1f("u_depth",f.z),x.setUniform1f("u_radius",m),x.setUniform4fv("u_color",this._color),x.setUniform1f("u_blur",v),x.setUniform1f("u_stroke_width",p),x.setUniform4fv("u_stroke_color",this._strokeColor),x.setUniform1f("u_antialiasingWidth",1.2),U){const t=e(l+1);x.setUniform4fv("u_id",t)}for(const r of i){if(!r.layerData.has(l))continue;const e=r.layerData.get(l);e.prepareForRendering(s,h);const o=e.circleVertexArrayObject;t(o)||(s.bindVAO(o),x.setUniformMatrix3fv("u_dvsMat3",r.transforms.dvs),s.setStencilFunction(514,r.stencilRef,255),s.drawElements(4,e.circleIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*e.circleIndexStart),r.triangleCount+=e.circleIndexCount/3)}}}export{s as WGLBrushVTLCircle};
