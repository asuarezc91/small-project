/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as t}from"../../../../../core/maybe.js";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as i,VTL_HIGH_RES_CUTOFF as e}from"../definitions.js";import{c as r}from"../../../../../chunks/mat3f32.js";import{c as o}from"../../../../../chunks/vec4f32.js";import{u32to4Xu8 as a}from"../number.js";import{WGLDrawPhase as n}from"../enums.js";import s from"./WGLBrush.js";const l=[1,1,1,1];class f extends s{constructor(){super(...arguments),this._color=o(),this._outlineColor=o(),this._fillProgramOptions={id:!1,dd:!1,pattern:!1},this._outlineProgramOptions={id:!1,dd:!1},this._patternMatrix=r()}dispose(){}drawMany(t,i){const{displayLevel:e,drawPhase:r,renderPass:o,styleLayerUID:s}=t,f=t.styleLayer,u=f.getPaintValue("fill-pattern",e),c=f.hasDataDrivenColor?l:f.getPaintValue("fill-color",e),d=f.hasDataDrivenOpacity?1:f.getPaintValue("fill-opacity",e),_=d*c[3],h=void 0!==u||_<1||f.hasDataDrivenFill;if(h&&"opaque"===o)return;this._color[0]=_*c[0],this._color[1]=_*c[1],this._color[2]=_*c[2],this._color[3]=_;let m;r===n.HITTEST&&(m=a(s+1));const p=f.getPaintValue("fill-translate",e),g=f.getPaintValue("fill-translate-anchor",e);this._drawFill(t,s,f,i,p,g,u,h,m),this._drawOutline(t,s,f,i,p,g,u,m,d)}_drawFill(r,o,a,s,l,f,u,c,d){const{context:_,displayLevel:h,drawPhase:m,pixelRatio:p,renderPass:g,spriteMosaic:v,state:P}=r;if(!c&&"translucent"===g)return;const x=void 0!==u,y=p>e?2:1,M=a.hasDataDrivenFill,C=r.painter.getVectorTileProgramCache();let U;const D=m===n.HITTEST,T=(D?1:0)<<2|(M?1:0)<<1|(x?1:0),E=this._fillProgramOptions;E.id=D,E.dd=M,E.pattern=x;const V=C.getProgram(1,T,E);if(_.bindProgram(V),x){if(U=v.getMosaicItemPosition(u,!0),!U)return void _.bindProgram();V.setUniform2f("u_pattern_tl",U.tl[0],U.tl[1]),V.setUniform2f("u_pattern_br",U.br[0],U.br[1]),V.setUniform1i("u_texture",i),v.bind(_,9729,U.page,i)}V.setUniformMatrix3fv("u_displayMat3",1===f?P.displayMat3:P.displayViewMat3),V.setUniform2fv("u_fillTranslation",l),V.setUniform1f("u_depth",a.z+152587890625e-16),V.setUniform4fv("u_color",this._color),D&&V.setUniform4fv("u_id",d);for(const i of s){if(!i.layerData.has(o))continue;const e=i.layerData.get(o);e.prepareForRendering(_,C);const r=e.fillVertexArrayObject;if(!t(r)){if(_.bindVAO(r),V.setUniformMatrix3fv("u_dvsMat3",i.transforms.dvs),x){const t=Math.max(Math.pow(2,Math.round(h)-i.key.level),1),e=i.coordRange[0]/(y*i.size[0]*t),r=1/(U.size[0]*e),o=1/(U.size[1]*e);this._patternMatrix[0]=r,this._patternMatrix[4]=o,V.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}_.setStencilFunction(514,i.stencilRef,255),_.drawElements(4,e.fillIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*e.fillIndexStart),i.triangleCount+=e.fillIndexCount/3}}}_drawOutline(i,e,r,o,a,s,f,u,c){const{context:d,displayLevel:_,drawPhase:h,renderPass:m,pixelRatio:p,state:g}=i;if("opaque"===m)return;const v=void 0!==f;if(!(r.getPaintValue("fill-antialias",_)&&!v||r.hasDataDrivenOutlineColor))return;const P=i.painter.getVectorTileProgramCache(),x=r.hasDataDrivenOutline;if(r.outlineUsesFillColor){if(1!==this._color[3])return;this._outlineColor[0]=this._color[0],this._outlineColor[1]=this._color[1],this._outlineColor[2]=this._color[2],this._outlineColor[3]=this._color[3]}else{const t=r.hasDataDrivenOutlineColor?l:r.getPaintValue("fill-outline-color",_),i=c*t[3];this._outlineColor[0]=i*t[0],this._outlineColor[1]=i*t[1],this._outlineColor[2]=i*t[2],this._outlineColor[3]=i}const y=.75/p,M=h===n.HITTEST,C=(M?1:0)<<1|(x?1:0),U=this._outlineProgramOptions;U.id=M,U.dd=x;const D=P.getProgram(2,C,U);d.bindProgram(D),D.setUniformMatrix3fv("u_displayMat3",1===s?g.displayMat3:g.displayViewMat3),D.setUniform2fv("u_fillTranslation",a),D.setUniform1f("u_depth",r.z+152587890625e-16),D.setUniform1f("u_outline_width",y),D.setUniform4fv("u_color",this._outlineColor),M&&D.setUniform4fv("u_id",u);for(const i of o){if(!i.layerData.has(e))continue;const r=i.layerData.get(e);r.prepareForRendering(d,P);const o=r.outlineVertexArrayObject;t(o)||(d.bindVAO(o),D.setUniformMatrix3fv("u_dvsMat3",i.transforms.dvs),d.setStencilFunction(514,i.stencilRef,255),d.drawElements(4,r.outlineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.outlineIndexStart),i.triangleCount+=r.outlineIndexCount/3)}}}export{f as WGLBrushVTLFill};
