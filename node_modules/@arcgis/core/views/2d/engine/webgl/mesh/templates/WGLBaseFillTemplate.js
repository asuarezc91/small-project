/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{deltaDecodeGeometry as t,convertFromGeometry as e}from"../../../../../../layers/graphics/featureConversionUtils.js";import{i1616to32 as r}from"../../number.js";import{WGLGeometryType as s}from"../../enums.js";import{FillMaterialKey as a}from"../../materialKey/MaterialKey.js";import{clipMarshall as i,triangulate as o,triangulateLibtess as h}from"./templateUtils.js";export default l=>class extends l{constructor(...t){super(...t),this.forceLibtess=!1,this.geometryType=s.FILL}writeMeshWithGeometry(r,s,l,m,u,n){const p=a.load(this._materialKey),d=s.indexVector,y=s.getVector("geometry"),c=y.vertexCount,f=d.length;let g=n?t(e(n),2):l.readUnquantizedGeometry();if(!g)return;if(g=i(g),!g)return;let x=g.coords;!this.forceLibtess&&o(d,g,c)||(x=[],h(x,d,g,c)),this._write(y,l,u,x,p);const b=y.vertexCount-c,j=d.length-f;r.writeDisplayRecord(this.geometryType,this._materialKey,c,b,f,j)}_write(t,e,s,a,i){for(let o=0;o<a.length;o+=2){const h=r(1*a[o],1*a[o+1]);t.data.push(h),t.data.push(s),i.dotDensity?t.data.writeF32(1/Math.abs(e.readGeometryArea())):(t.data.push(this.fillColor),t.data.push(this.tl),t.data.push(this.br),t.data.push(this.aux1),t.data.push(this.aux2),t.data.push(this.aux3))}}};
