/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Logger.js";import t from"../../../../../../core/Error.js";import{create as r,resolve as s,all as i,isAbortError as a}from"../../../../../../core/promiseUtils.js";import{errorPolygonSymbol2D as o,errorPointSymbol2D as m,errorPolylineSymbol2D as c}from"../../../../../../symbols/support/defaults.js";import{ok as h}from"../../util/Result.js";import{createSymbolSchema as l}from"../../../../layers/features/schemaUtils.js";import n from"./WGLTextTemplate.js";import p from"./WGLMarkerTemplate.js";import u from"./WGLDynamicFillTemplate.js";import _ from"./WGLDynamicLineTemplate.js";import f from"./WGLDynamicMarkerTemplate.js";import{codepoints as T}from"../../../../layers/features/textUtils.js";import M from"./WGLDynamicTextTemplate.js";import y from"./WGLFillTemplate.js";import I from"./WGLLineTemplate.js";import d,{withLock as g}from"../../util/Lock.js";const S=e.getLogger("esri.views.2d.engine.webgl.mesh.templates.WGLTemplateStore"),k=new Array;function w(e,t){const r=e.length;return e.push(null),t.then((t=>e[r]=t)),e}function C(e){return!!(1&e)}class L{constructor(e,t){this._idCounter=1,this._templateIdCounter=1,this._idToTemplateGroup=new Map,this._symbolToTemplate=new Map,this._fetchQueue=[],this._idToResolver=new Map,this._cimTemplateCache=new Map,this._cimAnalyses=[],this._lock=new d,this._fetchResource=e,this._joinOnUTurn=t}get _markerError(){return this._errorTemplates.marker[0]}get _fillError(){return this._errorTemplates.fill[0]}get _lineError(){return this._errorTemplates.line[0]}get _textError(){return this._errorTemplates.line[0]}createTemplateGroup(e,t){this._initErrorTemplates();const r=e.hash;if(this._symbolToTemplate.has(r))return this._symbolToTemplate.get(r);const s=new Array;t&&this._createMeshTemplates(s,t,!0),this._createMeshTemplates(s,e,!1);const i=this._createGroupId("expanded-cim"===e.type);return this._idToTemplateGroup.set(i,s),this._symbolToTemplate.set(r,i),i}getTemplateGroup(e){return this._idToTemplateGroup.has(e)?this._idToTemplateGroup.get(e):k}getDynamicTemplateGroup(e){return this._idToTemplateGroup.has(e)?(C(e)||S.error("mapview-template-store",`Id ${e} does not refer to a dynamic template`),this._idToTemplateGroup.get(e)):k}getMosaicItem(e,t){const s=this._createTemplateId(),i=r((e=>this._idToResolver.set(s,e)));return this._fetchQueue.push({symbol:e,id:s,glyphIds:t}),i}finalize(e){return this._fetchQueue.length||this._lock.isHeld()?g(this._lock,this._fetchAllQueuedResources.bind(this),e):s()}_initErrorTemplates(){this._errorTemplates||(this._errorTemplates={fill:this._createMeshTemplates([],l(o),!1),marker:this._createMeshTemplates([],l(m),!1),line:this._createMeshTemplates([],l(c),!1)})}_fetchAllQueuedResources(e){if(!this._fetchQueue.length)return s();const r=this._fetchQueue,o=this._cimAnalyses;return this._fetchQueue=[],this._cimAnalyses=[],i(o).then((()=>this._fetchResource(r,e).then((e=>{for(const{id:t,mosaicItem:r}of e){this._idToResolver.get(t)(r),this._idToResolver.delete(t)}})))).catch((e=>{a(e)?this._fetchQueue=this._fetchQueue.concat(r):function(e){return"worker:port-closed"===e.name}(e)||S.error(new t("mapview-template-store","Unable to fetch requested texture resources",e))}))}_createGroupId(e){return this._idCounter++<<1|(e?1:0)}_createTemplateId(){return this._templateIdCounter++}async _createSMS(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e);return h(t,S)?p.fromSimpleMarker(e,t):this._markerError}async _createPMS(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e);return h(t,S)?p.fromPictureMarker(e,t):this._markerError}async _createSFS(e,t){const{spriteMosaicItem:r}=await this.getMosaicItem(e);return h(r,S)?y.fromSimpleFill(e,r,t):this._fillError}async _createPFS(e,t){const{spriteMosaicItem:r}=await this.getMosaicItem(e);return h(r,S)?y.fromPictureFill(e,r,t):this._fillError}async _createSLS(e,t){const{spriteMosaicItem:r}=await this.getMosaicItem(e);return h(r,S)?I.fromSimpleLine(e,r,this._joinOnUTurn):this._lineError}async _createLMS(e){const{spriteMosaicItem:t}=await this.getMosaicItem(e);return h(t,S)?p.fromLineSymbolMarker(e,t):this._markerError}async _createTS(e){const{glyphMosaicItems:t}=await this.getMosaicItem(e);return n.fromText(e,t)}async _createCIMText(e){const{glyphMosaicItems:t}=await this.getMosaicItem(e.cim,T(e.text));return e.cim.mosaicHash=e.materialHash,h(t,S)?n.fromCIMText(e,t):this._textError}async _createCIMFill(e){e.cim.mosaicHash=e.materialHash;const{spriteMosaicItem:t}=await this.getMosaicItem(e.cim);return h(t,S)?y.fromCIMFill(e,t):this._fillError}async _createCIMLine(e){e.cim.mosaicHash=e.materialHash;const{spriteMosaicItem:t}=await this.getMosaicItem(e.cim);return h(t,S)?I.fromCIMLine(e,t,this._joinOnUTurn):this._lineError}async _createCIMMarker(e){e.cim.mosaicHash=e.materialHash;const{spriteMosaicItem:t}=await this.getMosaicItem(e.cim);return h(t,S)?p.fromCIMMarker(e,t):this._markerError}async _createCIM(e){const t=e.templateHash;if(this._cimTemplateCache.has(t))return this._cimTemplateCache.get(t);let r;switch(e.type){case"marker":r=this._createCIMMarker(e);break;case"line":r=this._createCIMLine(e);break;case"fill":r=this._createCIMFill(e);break;case"text":r=this._createCIMText(e)}return r.then((e=>this._cimTemplateCache.set(t,e))),r}_createDynamicCIM(e){const t=e.templateHash;if(this._cimTemplateCache.has(t))return this._cimTemplateCache.get(t);let r;switch(e.type){case"marker":r=f.fromCIMMarker(e);break;case"line":r=_.fromCIMLine(e);break;case"fill":r=u.fromCIMFill(e);break;case"text":r=M.fromCIMText(e)}return this._cimTemplateCache.set(t,r),r}_createPrimitiveMeshTemplates(e,t,r){switch(t.type){case"esriSMS":return w(e,this._createSMS(t));case"esriPMS":return w(e,this._createPMS(t));case"esriSFS":return w(e,this._createSFS(t,r));case"line-marker":return w(e,this._createLMS(t));case"esriPFS":return w(e,this._createPFS(t,r));case"esriSLS":return w(e,this._createSLS(t,!1));case"esriTS":return w(e,this._createTS(t));default:return S.error("Unable to create mesh template for unknown symbol type {: $ }{symbol.type}"),e}}_createMeshTemplates(e,t,r){if(-1!==t.type.indexOf("3d"))return S.error("3D symbols are not supported with MapView"),e;if("expanded-cim"===t.type){for(const r of t.layers)"function"==typeof r.materialHash?e.push(this._createDynamicCIM(r)):w(e,this._createCIM(r));return e}if("composite-symbol"===t.type){for(const s of t.layers)this._createPrimitiveMeshTemplates(e,s,r);return e}return"cim"===t.type||"label"===t.type||"web-style"===t.type?e:this._createPrimitiveMeshTemplates(e,t,r)}}export{L as WGLTemplateStore,C as isDynamicId};
