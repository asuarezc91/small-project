/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Logger.js";import{pt2px as t}from"../../../../../../core/screenUtils.js";import{SPRITE_PADDING as i}from"../../definitions.js";import{i1616to32 as r}from"../../number.js";import{LineMaterialKey as s}from"../../materialKey/MaterialKey.js";import{premultiplyAlphaRGBAArray as o,premultiplyAlphaRGBA as l}from"../../color.js";import{getCapType as n,getJoinType as a}from"../../Utils.js";import{getLimitCosine as m}from"./util.js";import c from"./WGLMeshTemplate.js";import h from"./WGLBaseLineTemplate.js";const f=e.getLogger("esri.views.2d.engine.webgl.WGLLineTemplate");class p extends(h(c)){constructor(e,t,i,r,o,l,n,a,c,h,f,p,d,u,L,y){super();const _=s.load(e);t&&(_.sdf=t.sdf,_.pattern=!0,_.textureBinding=t.textureBinding),this._capType=r,this._joinType=o,this._miterLimitCosine=m(l),this.tessellationProperties._fillColor=n,this.tessellationProperties._tl=a,this.tessellationProperties._br=c,this._hasPattern=h,this._isDashed=f,this._joinOnUTurn=L,this._isColorLocked=p,this._zOrder=u,this.effects=y,this._materialKey=_.data,this.tessellationProperties._bitset=p?1:0,this.tessellationProperties._halfWidth=.5*i,this.tessellationProperties._halfReferenceWidth=.5*d,this._initializeTessellator(!1)}static fromCIMLine(e,s,o){const n=e.color,a=e.scaleFactor||1,m=e.isDashed;let c=e.cap;m&&1===c&&(c=2);const h=e.join,f=t(e.width)*a,d=t(e.referenceWidth),u=t(e.miterLimit),L=n&&l(n)||0;if(!s)return new p(e.materialKey,s,f,c,h,u,L,0,0,!1,m,e.colorLocked,d,e.zOrder,o,e.effects);const{rect:y,width:_,height:j}=s,S=y.x+i,g=y.y+i,w=S+_,P=g+j,x=r(S,g),K=r(w,P);return new p(e.materialKey,s,f,c,h,u,L,x,K,!0,m,e.colorLocked,d,e.zOrder,o,e.effects)}static fromSimpleLine(e,s,l){const{color:m}=e,c="esriSLSSolid"!==e.style&&"esriSLSNull"!==e.style,h=n(e.cap||"round",c),f=a(e.join||"round");let d=m&&"esriSLSNull"!==e.style&&o(m)||0;"esriSLSNull"===e.style&&(d=0);const u=t(e.width),L=e.miterLimit;if(!s)return new p(e.materialKey,s,u,h,f,L,d,0,0,!1,c,!1,u,0,l,null);const{rect:y,width:_,height:j}=s,S=y.x+i,g=y.y+i,w=S+_,P=g+j,x=r(S,g),K=r(w,P);return new p(e.materialKey,s,u,h,f,L,d,x,K,!0,c,!1,u,0,l,null)}static fromPictureLineSymbol(e,t,i,r){return f.error("PictureLineSymbol support does not exist!"),null}}export default p;
