/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../../../../core/has.js";import{THIN_LINE_THRESHOLD as t,TILE_SIZE as e}from"../../definitions.js";import{i1616to32 as i,i8888to32 as s}from"../../number.js";import{WGLGeometryType as r}from"../../enums.js";import{LineMaterialKey as n}from"../../materialKey/MaterialKey.js";import{TileClipper as o}from"../../TileClipper.js";import{StandardTessellationCallbacks as l,tessellate as a,cleanup as h}from"../../TurboLine.js";const u=e+16,c=new o(0,0,0,1,16);c.setExtent(e);const _=new Uint32Array(9),f=new Uint32Array(36),p=new Uint32Array(3),d=new Uint32Array(6),x=t=>e=>{const r=Math.ceil(1024*t._halfWidth),n=Math.ceil(1024*t._halfReferenceWidth);e.entry0=t.offset+t.vertexCount++;{const o=i(e.distance,r),l=s(Math.round(31*e.prevNormal.x),Math.round(31*e.prevNormal.y),Math.round(0),Math.round(-31)),a=s(0,0,0,t._bitset);f[0]=i(8*e.currentVertex.x,8*e.currentVertex.y),f[1]=t.id,f[2]=t._fillColor,f[3]=l,f[4]=o,f[5]=t._tl,f[6]=t._br,f[7]=a,f[8]=i(n,0)}e.entry2=t.offset+t.vertexCount++;{const o=i(e.distance,r),l=s(Math.round(31*-e.prevNormal.x),Math.round(31*-e.prevNormal.y),Math.round(0),Math.round(31)),a=s(0,0,0,t._bitset);f[9]=i(8*e.currentVertex.x,8*e.currentVertex.y),f[10]=t.id,f[11]=t._fillColor,f[12]=l,f[13]=o,f[14]=t._tl,f[15]=t._br,f[16]=a,f[17]=i(n,0)}e.exit0=t.offset+t.vertexCount++;{const o=i(e.distance,r),l=s(Math.round(31*e.nextNormal.x),Math.round(31*e.nextNormal.y),Math.round(0),Math.round(-31)),a=s(0,0,0,t._bitset);f[18]=i(8*e.currentVertex.x,8*e.currentVertex.y),f[19]=t.id,f[20]=t._fillColor,f[21]=l,f[22]=o,f[23]=t._tl,f[24]=t._br,f[25]=a,f[26]=i(n,0)}e.exit2=t.offset+t.vertexCount++;{const o=i(e.distance,r),l=s(Math.round(31*-e.nextNormal.x),Math.round(31*-e.nextNormal.y),Math.round(0),Math.round(31)),a=s(0,0,0,t._bitset);f[27]=i(8*e.currentVertex.x,8*e.currentVertex.y),f[28]=t.id,f[29]=t._fillColor,f[30]=l,f[31]=o,f[32]=t._tl,f[33]=t._br,f[34]=a,f[35]=i(n,0)}t.geometryBuf.writeRegion(f)},y=t=>e=>{d[0]=e.leftExit0,d[1]=e.rightEntry0,d[2]=e.leftExit2,d[3]=e.rightEntry0,d[4]=e.rightEntry2,d[5]=e.leftExit2,t.indexCount+=6,t.indexBuf.writeRegion(d)},m=t=>(e,r,n,o,l,a,h,u,c)=>{const f=i(c,Math.ceil(1024*t._halfWidth)),p=s(Math.round(31*l),Math.round(31*a),Math.round(31*h),Math.round(31*u)),d=s(31*n,31*o,0,t._bitset);return _[0]=i(8*e,8*r),_[1]=t.id,_[2]=t._fillColor,_[3]=p,_[4]=f,_[5]=t._tl,_[6]=t._br,_[7]=d,_[8]=i(Math.ceil(1024*t._halfReferenceWidth),0),t.geometryBuf.writeRegion(_),t.offset+t.vertexCount++},C=t=>(e,i,s)=>{p[0]=e,p[1]=i,p[2]=s,t.indexCount+=3,t.indexBuf.writeRegion(p)};export default e=>class extends e{constructor(...t){super(...t),this.tessellationProperties={_fillColor:null,_tl:null,_br:null,_halfWidth:null,_bitset:null,_halfReferenceWidth:null,id:null,indexBuf:null,indexCount:null,geometryBuf:null,vertexCount:null,offset:null},this._tessellationOptions={},this.geometryType=r.LINE}writeMeshWithGeometry(t,e,i,s,r,n){const o=e.indexVector,l=e.get("geometry"),a=e.getVector("geometry").vertexCount,h=o.length,u=null!=n?n:i.readLegacyGeometry();if(!u)return;switch(s){case"esriGeometryPolyline":{const t=this._clipLines(u.paths);if(0===t.length)return;this._write(o,l,a,r,t);break}case"esriGeometryPolygon":{const t=this._clipLines(u.rings);if(0===t.length)return;this._write(o,l,a,r,t);break}}const c=this.tessellationProperties.vertexCount,_=this.tessellationProperties.indexCount;t.writeDisplayRecord(this.geometryType,this._materialKey,a,c,h,_)}_clipLines(t){const e=[];let i=!1,s=0;for(;s<t.length;){const r=[],n=t[s];c.reset(2);let[o,l]=n[0];if(i)c.moveTo(o,l);else{if(o<-16||o>u||l<-16||l>u){i=!0;continue}r.push({x:o,y:l})}let a=!1;const h=n.length;for(let t=1;t<h;++t)if(o+=n[t][0],l+=n[t][1],i)c.lineTo(o,l);else{if(o<-16||o>u||l<-16||l>u){a=!0;break}r.push({x:o,y:l})}if(a)i=!0;else{if(i){const t=c.resultWithStarts();if(t)for(const i of t)e.push(i)}else e.push({line:r,start:0});s++,i=!1}}return e}_write(t,e,i,s,r){this.tessellationProperties.id=s,this.tessellationProperties.indexBuf=t,this.tessellationProperties.indexCount=0,this.tessellationProperties.geometryBuf=e,this.tessellationProperties.vertexCount=0,this.tessellationProperties.offset=i;for(const t of r){const e=t.line;e.length<2||(this._tessellationOptions.initialDistance=t.start%65535,this._tessellationCallbacks instanceof l&&(this._tessellationCallbacks.capType=this._capType,this._tessellationCallbacks.joinType=this._joinType),a(e,this._tessellationOptions,this._tessellationCallbacks),h())}}_initializeTessellator(e){const i=n.load(this._materialKey);if(this._tessellationOptions.trackDistance=this._isDashed||this._hasPattern,this._tessellationOptions.thin=!e&&this.tessellationProperties._halfWidth<t/2&&!(i.vvSizeFieldStops||i.vvSizeMinMaxValue||i.vvSizeScaleStops||i.vvSizeUnitValue),this._tessellationOptions.wrapDistance=65535,this._tessellationOptions.outerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableOuterBisectorSplit=this._isDashed||this._hasPattern,this._tessellationOptions.innerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableInnerBisectorSplit=this._isDashed||this._hasPattern,this._tessellationOptions.thin)this._tessellationCallbacks={vertex:x(this.tessellationProperties),bridge:y(this.tessellationProperties)};else{const t=new l(m(this.tessellationProperties),C(this.tessellationProperties));t.miterLimitCosine=this._miterLimitCosine,t.textured=this._isDashed||this._hasPattern,t.joinOnUTurn=this._joinOnUTurn,this._tessellationCallbacks=t}}};
