/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{unwrapOr as t}from"../../../../../../core/maybe.js";import e from"../../../../../../core/Logger.js";import i from"../../../../../../core/Error.js";import{pt2px as s}from"../../../../../../core/screenUtils.js";import{SPRITE_PADDING as r}from"../../definitions.js";import{c as o}from"../../../../../../chunks/mat2df32.js";import{c as a}from"../../../../../../chunks/vec2f32.js";import{i8888to32 as h,i1616to32 as c}from"../../number.js";import{MarkerMaterialKey as n}from"../../materialKey/MaterialKey.js";import{premultiplyAlphaRGBA as m}from"../../color.js";import{ok as l}from"../../util/Result.js";import{isFunction as f}from"./util.js";import _ from"./WGLBaseMarkerTemplate.js";import p from"./WGLDynamicMeshTemplate.js";const y=a(),d=o(),M=e.getLogger("esri.views.2d.engine.webgl.WGLDynamicMarkerTemplate");class u extends(_(p)){constructor(e){if(super(e),this._cimMarkerLayer=e,f(e.color)){const t=(t,i,s)=>m(e.color(t,i,s));this._dynamicPropertyMap.set("_fillColor",t)}else this._fillColor=m(e.color);if(f(e.outlineColor)){const t=(t,i,s)=>m(e.outlineColor(t,i,s));this._dynamicPropertyMap.set("_outlineColor",t)}else this._outlineColor=m(e.outlineColor);if(f(e.size)){const t=(t,i,r)=>s(e.size(t,i,r));this._dynamicPropertyMap.set("_size",t)}else this._size=s(e.size);if(f(e.scaleX)?this._dynamicPropertyMap.set("_scaleX",e.scaleX):this._scaleX=e.scaleX,f(e.offsetX)){const t=(t,i,r)=>s(e.offsetX(t,i,r));this._dynamicPropertyMap.set("xOffset",t)}else this.xOffset=s(e.offsetX);if(f(e.offsetY)){const t=(t,i,r)=>s(e.offsetY(t,i,r));this._dynamicPropertyMap.set("yOffset",t)}else this.yOffset=s(e.offsetY);if(f(e.outlineWidth)){const t=(t,i,r)=>s(e.outlineWidth(t,i,r));this._dynamicPropertyMap.set("_outlineWidth",t)}else this._outlineWidth=s(e.outlineWidth);f(e.rotation)?this._dynamicPropertyMap.set("_angle",e.rotation):this._angle=e.rotation,this._scaleFactor=t(e.scaleFactor,1),this._markerPlacement=e.markerPlacement,this.effects=e.effects,this._bitSet=(1===e.alignment?1:0)|(e.colorLocked?1:0)<<1|(e.scaleSymbolsProportionally?1:0)<<3,this._materialKey=e.materialKey}static fromCIMMarker(t){return new u(t)}bindFeature(t,e,o){const a=t.readLegacyFeature();this._dynamicPropertyMap.forEach(((t,i)=>{this[i]=t(a,e,o)}));const m=this._cimMarkerLayer.materialHash,f="function"==typeof m?m(a,e,o):m,_=this._materialCache.get(f);if(!_||!l(_.spriteMosaicItem)||!_.spriteMosaicItem)return void M.error(new i("mapview-cim","Encountered an error when binding feature"));const p=_.spriteMosaicItem,u=this._cimMarkerLayer.sizeRatio,g=p.width/p.height*this._scaleX,k=this._cimMarkerLayer.rotateClockwise?this._angle:-this._angle;let L=this._size,x=L*g;const P=this.xOffset,j=this.yOffset;this.xOffset*=this._scaleFactor,this.yOffset*=this._scaleFactor;const w=this._cimMarkerLayer.scaleSymbolsProportionally&&this._cimMarkerLayer.frameHeight?this._size/s(this._cimMarkerLayer.frameHeight):1,z=this._outlineWidth*w,b=s(this._cimMarkerLayer.referenceSize);let O=0,W=0;const C=this._cimMarkerLayer.anchorPoint;C&&(this._cimMarkerLayer.isAbsoluteAnchorPoint?this._size&&(O=-C.x/(this._size*g),W=C.y/this._size):(O=C.x,W=C.y)),this._sizeOutlineWidth=h(Math.round(Math.min(Math.sqrt(128*x),255)),Math.round(Math.min(Math.sqrt(128*L),255)),Math.round(Math.min(Math.sqrt(128*z),255)),Math.round(Math.min(Math.sqrt(128*b),255))),this.angle=k;const X=Math.round(Math.min(64*u,255));this._bitestAndDistRatio=h(0,0,this._bitSet,X);const F=p.rect.x+r,K=p.rect.y+r,B=F+p.width,R=K+p.height;this._texUpperLeft=c(F,K),this._texUpperRight=c(B,K),this._texBottomLeft=c(F,R),this._texBottomRight=c(B,R);const S=n.load(this._materialKey);S.sdf=p.sdf,S.pattern=!0,S.textureBinding=p.textureBinding,this._materialKey=S.data,this._anchorX=.5-(.5+O)*p.width/p.width,this._anchorY=.5-(.5+W)*p.height/p.height,x*=u,L*=u,x*=this._scaleFactor,L*=this._scaleFactor,x*=p.rect.width/p.width,L*=p.rect.height/p.height,this._computedWidth=x,this._computedHeight=L,this._applyTransformation(d,y),this.xOffset=P,this.yOffset=j}}export default u;
