/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../../../../core/has.js";import{isSome as e}from"../../../../../../core/maybe.js";import{isAborted as t}from"../../../../../../core/promiseUtils.js";import{HEURISTIC_GLYPHS_PER_LINE as r,HEURISTIC_GLYPHS_PER_FEATURE as s}from"../../definitions.js";import{WGLGeometryType as i}from"../../enums.js";import{MeshData as o}from"../MeshData.js";import{VertexVectors as a}from"../VertexVector.js";import l from"../templates/WGLLabelTemplate.js";import n from"../templates/WGLMarkerTemplate.js";import{isDynamicId as p}from"../templates/WGLTemplateStore.js";class m{constructor(e,t,r){this._isDD=!1,this._geometryType=e,this._idField=t,this._templateStore=r}update(t,r){this._isDD="simple"===t.mesh.matcher.type&&t.mesh.matcher.isDotDensity,e(t.mesh.labels)&&this._setLabelTemplates(t.mesh.labels,r)}_setLabelTemplates(e,t){this._labelTemplates=e.map((e=>l.fromLabelClass(e,t)))}get templates(){return this._templateStore}createMeshData(e){const t=new Array(5),l=this._labelTemplates&&this._labelTemplates.length>0,n="esriGeometryPolyline"===this._geometryType?r:s;return t[i.MARKER]=new a(i.MARKER,4*e),t[i.FILL]=new a(i.FILL,e,this._isDD),t[i.LINE]=new a(i.LINE,e),t[i.TEXT]=new a(i.TEXT,4*e),t[i.LABEL]=new a(i.LABEL,l?4*n:0),new o(t,{features:e,records:e,metrics:0})}async analyze(e,r,s,i,o){if(t(o))return;let a;"dictionary"===r.type&&(a=await r.analyze(this._idField,e.copy(),s,i,o));let l=0;for(;e.next();){let t;if(t=a?a[l++]:r.match(this._idField,e,this._geometryType,s,i),e.setGroupId(t),p(t)){const r=this._templateStore.getDynamicTemplateGroup(t);for(const t of r)t&&t.analyze&&t.analyze(this._templateStore,e,s,i)}}return this._templateStore.finalize(o)}async analyzeGraphics(e,r,s,i,o){if(t(o))return;const a=e.getCursor();for(r&&await r.analyze(this._idField,a.copy(),s,i,o);a.next();){let e=a.getGroupId();if(null!=e&&-1!==e||(e=r.match(this._idField,a,a.geometryType,s,i),a.setGroupId(e)),p(e)){const t=this._templateStore.getDynamicTemplateGroup(e);for(const e of t)e&&e.analyze&&e.analyze(this._templateStore,a,s,i)}a.setGroupId(e)}return this._templateStore.finalize(o)}writeGraphic(e,t){const r=t.getGroupId(),s=t.getDisplayId(),i=this._templateStore.getTemplateGroup(r),o=t.geometryType;if(null!=s){if(p(r))for(const e of i)e.bindFeature(t,null,null);if(i){e.writeDisplayObject(s,t.readGraphic().insertAfter);for(const r of i){if(!r)continue;const i=e.get(r.geometryType);r.writeMesh(e,i,t,o,s)}}}}writeCursor(t,r,s,i,o,a){const l=r.getGroupId(),n=r.getDisplayId(),m=this._templateStore.getTemplateGroup(l);if(null==n)return;if(!m)return;if(t.writeDisplayObject(n,0),p(l))for(const e of m)e.bindFeature(r,s,i);for(const e of m){const s=t.get(e.geometryType);!e.needsPixelBuffer&&r.hasFilter()||e.writeMesh(t,s,r,this._geometryType,n)}const f=t.hasDisplayRecords();if(e(a)&&f){const e=a&&this._findLabelRef(m);this._writeLabels(t,r,n,a,e,o)}t.endDisplayObject()}_findLabelRef(e){for(const t of e)if(t instanceof n)return t;return null}_writeLabels(t,r,s,i,o,a){for(const l of i)if(e(l)&&l){const{glyphs:e,rtl:i,index:n}=l,p=this._labelTemplates[n],m=t.get(p.geometryType);p.bindReferenceTemplate(o),p.bindTextInfo(e,i),p.writeMesh(t,m,r,this._geometryType,s,a)}}}export{m as WGLMeshFactory};
