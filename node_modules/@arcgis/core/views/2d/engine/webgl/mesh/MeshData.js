/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import s from"../WGLDisplayRecord.js";import{serializeList as t,deserializeList as e}from"../util/serializationUtils.js";import r from"../collisions/Metric.js";import i from"../WGLDisplayObject.js";import c from"../util/Reader.js";import u from"../util/Writer.js";class f{constructor(s,t){this.vertexVectorsMap=s,this._currentIndex=-1,this._currentRecordOffset=0,this._currentMetricOffset=0,this._currentMetrics=[];const e=4*(4*t.features+1),r=4*(8*t.records+1),i=4*(20*t.metrics+1);this._bufDisplayObjects=new u(Uint32Array,e+4),this._bufDisplayRecords=new u(Uint32Array,r+4),this._bufMetrics=new u(Uint32Array,i+4),this._bufDisplayObjects.push(0),this._bufDisplayRecords.push(0),this._bufMetrics.push(0)}get vertexBuffersMap(){if(!this._vertexBuffersMap){this._vertexBuffersMap={};for(let s=0;s<this.vertexVectorsMap.length;s++)this._vertexBuffersMap[s]=this.vertexVectorsMap[s].intoBuffers();this.vertexVectorsMap=null}return this._vertexBuffersMap}get(s){return this.vertexVectorsMap[s]}currentDisplayRecordCount(){return this._bufDisplayRecords[this._currentRecordOffset]}writeDisplayObject(s,t){this._bufDisplayObjects.incr(0),this._currentIndex=this._bufDisplayObjects.push(s),this._bufDisplayObjects.push(t),this._bufDisplayObjects.push(0),this._bufDisplayObjects.push(0),this._currentRecordOffset=0,this._currentMetricOffset=0,this._currentMetrics=[]}hasDisplayRecords(){return!(0===this._currentRecordOffset)}endDisplayObject(){this.hasDisplayRecords()?this._currentMetrics&&(0===this._currentMetricOffset&&(this._bufDisplayObjects.setValue(this._currentIndex+3,this._bufMetrics.length),this._currentMetricOffset=this._bufMetrics.length),t(this._bufMetrics,this._currentMetrics)):this._rollbackDisplayObject()}writeDisplayRecord(s,t,e,r,i,c,u=0,f=0){0===this._currentRecordOffset&&(this._currentRecordOffset=this._bufDisplayRecords.push(0),this._bufDisplayObjects.setValue(this._currentIndex+2,this._currentRecordOffset)),this._bufDisplayRecords.incr(this._currentRecordOffset),this._bufDisplayRecords.push(s),this._bufDisplayRecords.push(t),this._bufDisplayRecords.push(e),this._bufDisplayRecords.push(r),this._bufDisplayRecords.push(i),this._bufDisplayRecords.push(c),this._bufDisplayRecords.push(u),this._bufDisplayRecords.push(f)}writeMetrics(s){s&&this._currentMetrics.push(...s)}static deserializeDisplayObjects(t){const{bufDisplayObjects:u,bufMetrics:f,bufRecords:h}=t,p=new c(u),a=new c(h),l=new c(f),n=[];let b=p.readInt32();for(a.readInt32(),l.readInt32();b--;){const t=p.readInt32(),c=p.readInt32(),u=p.readInt32(),f=p.readInt32(),h=new i(t);0!==c&&(h.insertAfter=c),0!==u&&(h.displayRecords=e(a,s,{id:t})),0!==f&&(h.metrics=e(l,r)),n.push(h)}return n}encode(s,t){const e={};for(let s=0;s<this.vertexVectorsMap.length;s++){const r=this.vertexVectorsMap[s];e[s]={},r.transfer(e[s],t)}s.bufDisplayObjects=this._bufDisplayObjects.buffer(),s.bufRecords=this._bufDisplayRecords.buffer(),s.bufMetrics=this._bufMetrics.buffer(),t.push(s.bufDisplayObjects),t.push(s.bufMetrics),t.push(s.bufRecords),s.vertexBuffersMap=e,this.destroy()}destroy(){this.vertexVectorsMap=null,this._bufDisplayObjects=null,this._bufDisplayRecords=null,this._bufMetrics=null}_rollbackDisplayObject(){this._bufDisplayObjects.decr(0),this._bufDisplayObjects.seek(this._bufDisplayObjects.length-4),this._currentIndex=this._bufDisplayObjects.length}}export{f as MeshData};
