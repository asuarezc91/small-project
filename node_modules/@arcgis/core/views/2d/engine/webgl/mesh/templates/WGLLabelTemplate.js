/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{unwrap as e,isNone as t}from"../../../../../../core/maybe.js";import i from"../../../../../../core/Logger.js";import o from"../../../../../../core/Error.js";import{clamp as s,log2 as n}from"../../../../../../core/mathUtils.js";import{pt2px as r}from"../../../../../../core/screenUtils.js";import{TEXT_PLACEMENT_PADDING as a}from"../../definitions.js";import{getAlignmentFromPlacement as h,getXDirection as l,getYDirection as c}from"../../alignmentUtils.js";import{i8888to32 as m,i1616to32 as f}from"../../number.js";import{WGLGeometryType as u}from"../../enums.js";import{isMapAligned as p}from"./meshUtils.js";import{LabelMaterialKey as _,MaterialKeyBase as d}from"../../materialKey/MaterialKey.js";import{premultiplyAlphaRGBAArray as g}from"../../color.js";import y from"../../collisions/Metric.js";import{smoothPaths as x,pathDivide as b}from"./segmentUtils.js";import w from"./WGLTextTemplate.js";const M=i.getLogger("esri.views.2d.engine.webgl.WGLLabelTemplate");const L=function(e){const t=new Map;return i=>(t.has(i)||t.set(i,e(i)),t.get(i))}((e=>{let t=0;if(0===e)return 1/0;for(;!(e%2);)t++,e/=2;return t})),S=e=>Math.floor(127*e+127),P=e=>Math.floor(10*e),v=e=>Math.round(e*(254/360)),Z=(e,t)=>f(Math.round(8*e),Math.round(8*t));class O extends w{constructor(e,t,i,o){super(e,i.font.size,i.haloSize||0,i.color&&g(i.color)||0,i.haloColor&&g(i.haloColor)||0,i.horizontalAlignment,i.verticalAlignment,p(t.labelPlacement)?1:0,i.font.decoration,!1,i.angle||0,i.xoffset,i.yoffset,i.lineWidth,i.lineHeight,null,null),this._outLineLabelAngle=0,this._refPlacementPadding=0,this._refPlacementDirX=0,this._refPlacementDirY=0,this._refOffsetX=0,this._refOffsetY=0,this.geometryType=u.LABEL;const n=function(e,t){const i=!!e.minScale&&t.scaleToZoom(e.minScale)||0;return s(i,0,25.5)}(t,o),l=function(e,t){const i=!!e.maxScale&&t.scaleToZoom(e.maxScale)||255;return s(i,0,25.5)}(t,o),c=t.labelPlacement,[m,f]=h(c);this._xAlignD=m,this._yAlignD=f,this._minZoom=n,this._maxZoom=l,this._refPlacementPadding=r(i.haloSize)+a;const d=_.load(e);d.sdf=!0,this._materialKey=d.data}static fromLabelClass(e,t){if("center-along"===e.labelPlacement){const t=e.symbol;t.xoffset=0,t.yoffset=0,t.angle=0,t.font.decoration="none"}return new O(e.materialKey,e,e.symbol,t)}get _shapedBox(){return e(this._shapingInfo).bounds}bindReferenceTemplate(e){let i=l(this._xAlignD),o=c(this._yAlignD);if(this._refOffsetX=0,this._refOffsetY=0,t(e))return void(this._refSymbolAndPlacementOffset=m(0,0,S(i),S(o)));if("circle"===e.boundsType&&(i||o)){const e=Math.sqrt(i*i+o*o);i/=e,o/=e}const s=Math.max(e.height,e.width),n=4*this._refPlacementPadding;this._refSymbolAndPlacementOffset=m(n,s,S(i),S(o)),this._referenceSize=s,this._refPlacementDirX=i,this._refPlacementDirY=o,this._refOffsetX=e.xOffset,this._refOffsetY=e.yOffset}writeMesh(e,i,s,n,r,a){if(t(this._shapingInfo))return;const h=new Array,l=this._shapingInfo,c="esriGeometryPolygon"===s.geometryType?s.readLegacyCentroid():s.readLegacyGeometry();if(c){switch(this.current={out:e,outVecs:i,outMetrics:h,inId:r,inShaping:l,zoomLevel:a},n){case"esriGeometryPolyline":this._placeLineLabels(c);break;case"esriGeometryPoint":case"esriGeometryPolygon":this._placePointLabels(c);break;default:((e,t="mapview-labeling")=>{M.error(new o(t,e))})("mapview-labeling",`Geometry of type ${n} is not supported`)}e.writeMetrics(this.current.outMetrics)}}_isVisible(e,t){const i=P(this.current.zoomLevel);return P(e)<=i&&i<=P(t)}_placePointLabels(e){const{out:t,outVecs:i,outMetrics:o,inId:s}=this.current;this._writeGlyphs(t,i,s,e,o)}_placeLineLabels(e){const t=x(e.paths,this.current.inShaping.bounds.width),i=this._placeSubdivGlyphs.bind(this),o=(this._shapedBox.width+128)/4;for(const e of t)b(e,o,i)}_placeSubdivGlyphs(e,t,i,o){const s=L(t),r=this._shapedBox.width/4,a=Math.min(i,o-i),h=n(a/(4+r/2)),l=0===t?h:Math.min(s,h),c=Math.max(this._minZoom,this.current.zoomLevel+2-l),m=this.current.zoomLevel-c,f=this._shapedBox.width/2*Math.pow(2,m);this.current.inShaping.isMultiline?0===t&&this._placeStraight(e,c):this._placeCurved(e,c,f)}_placeStraight(e,t){const{out:i,outVecs:o,outMetrics:s,inId:n}=this.current;this._writeGlyphs(i,o,n,e,s,t)}_placeCurved(e,t,i){const o={from:this.current.out.currentDisplayRecordCount(),count:-1},s=new y(this.current.inId,o,e.x,e.y,t),n=e.clone(),r=e.angle*(180/Math.PI)%360,a=(e.angle*(180/Math.PI)+180)%360;this._outLineLabelAngle=v(r),this._placeFirst(n,s,t,1),this._placeBack(e,n,s,t,i,1),this._placeForward(e,n,s,t,i,1),this._outLineLabelAngle=v(a),this._placeFirst(n,s,t,0),this._placeBack(e,n,s,t,i,0),this._placeForward(e,n,s,t,i,0),s.range.count=this.current.out.currentDisplayRecordCount()-s.range.from,s.bounds&&this.current.outMetrics.push(s)}_placeBack(e,t,i,o,s,n){const r=e.clone();let a=e.backwardLength+0;for(;r.prev()&&!(a>=s);)this._placeOnSegment(r,t,i,a,o,-1,n),a+=r.length+0}_placeForward(e,t,i,o,s,n){const r=e.clone();let a=e.remainingLength+0;for(;r.next()&&!(a>=s);)this._placeOnSegment(r,t,i,a,o,1,n),a+=r.length+0}_placeFirst(e,t,i,o){const s=e,r=this.current.inShaping,a=r.glyphs,h=this.current.zoomLevel,{out:l,outVecs:c,inId:m}=this.current,f=Z(s.x,s.y);for(const s of a){const a=s.x>r.bounds.x?o:1-o,u=a*e.remainingLength+(1-a)*e.backwardLength,p=Math.abs(s.x+s.width/2-r.bounds.x),_=Math.max(0,h+n(p/(u+0))),d=Math.max(i,_);s.maxZoom=25,s.angle=e.angle+(1-o)*Math.PI,s.minZoom=d,this._writeGlyph(l,c,s,m,f),o&&this._isVisible(s.minZoom,s.maxZoom)&&t.add(s.bounds,0,0)}}_placeOnSegment(e,t,i,o,s,r,a){const h=this.current.inShaping.glyphs,{out:l,outVecs:c,inId:m}=this.current,f=this.current.inShaping,u=this.current.zoomLevel,p=e.dx/e.length,_=e.dy/e.length,d={x:e.x+o*-r*p,y:e.y+o*-r*_},g=Z(d.x,d.y);for(const p of h){const h=p.x>f.bounds.x?a:1-a;if(!(h&&1===r||!h&&-1===r))continue;const _=Math.abs(p.x+p.width/2-f.bounds.x),d=Math.max(0,u+n(_/o)-.1),y=Math.max(s,u+n(_/(o+e.length+0)));0!==d&&(p.angle=e.angle+(1-a)*Math.PI,p.minZoom=y,p.maxZoom=d,this._writeGlyph(l,c,p,m,g),a&&this._isVisible(p.minZoom,p.maxZoom)&&i.add(p.bounds,e.x-t.x,e.y-t.y))}}_writeGlyphs(e,i,o,s,n,r=this._minZoom){const a=this._shapingInfo;if(t(a))return;if(s.x<0||s.x>=512||s.y<0||s.y>=512)return;const h=e.currentDisplayRecordCount(),l=Z(s.x+this._refOffsetX,s.y-this._refOffsetY),c=new y(o,{from:h,count:-1},s.x+this._refOffsetX,s.y-this._refOffsetY,r);for(const t of a.glyphs)t.minZoom=r,t.maxZoom=this._maxZoom,this._writeGlyph(e,i,t,o,l);c.range.count=e.currentDisplayRecordCount()-c.range.from,c.bounds=a.boundsT;const m=_.load(this._materialKey),f=this._refPlacementDirX,u=this._refPlacementDirY,p=m.vvSizeFieldStops||m.vvSizeMinMaxValue||m.vvSizeScaleStops||m.vvSizeUnitValue;c.setPlacementOffset(p,this._referenceSize,this._refPlacementPadding,f,u),n.push(c)}_writeGlyph(e,t,i,o,s){const n=d.load(this._materialKey);n.textureBinding=i.textureBinding;const r=t.indexVector.length,a=t.getVector("geometry").vertexCount,h=this._writeIndices(t),l=this._writeVertex(t,o,s,i);e.writeDisplayRecord(this.geometryType,n.data,a,l,r,h)}_writeVertexCommon(e,t,i,o){const s=this._color,n=this._haloColor,r=m(0,0,this._size,this._haloSize),a=Math.max(o.minZoom,this._minZoom),h=Math.min(o.maxZoom,this._maxZoom),l=m(P(a),P(h),this._outLineLabelAngle,0);e.push(i),e.push(t),e.push(s),e.push(n),e.push(r),e.push(this._refSymbolAndPlacementOffset),e.push(l)}}export default O;
