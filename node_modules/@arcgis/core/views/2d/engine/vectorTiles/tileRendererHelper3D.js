/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../geometry/Point.js";import"../../../../geometry.js";import t from"../../../../Viewpoint.js";import i from"../../ViewState.js";class r{constructor(){this.renderParams={context:null,drawPhase:1,state:new i({viewpoint:new t({targetGeometry:new e(0,0),scale:1,rotation:0}),size:[256,256]}),stationary:!0,pixelRatio:1,displayLevel:-1,requiredLevel:-1,globalOpacity:1,renderPass:"background",styleLayer:null,styleLayerUID:-1,painter:null,glyphMosaic:null,spriteMosaic:null,driverTestResult:null,profiler:null,renderingOptions:null,deltaTime:-1,timeline:null,time:0,hasClipping:!1,blendMode:null,dataUploadCounter:0,effects:null,inFadeTransition:!1}}dispose(){this.renderParams=null}render(e,t,i,r,s,l,a,n,o,p){const d=l.adjustLevel(t[0]),u=this.renderParams;u.context=e,u.painter=r,u.glyphMosaic=r.glyphMosaic,u.spriteMosaic=r.spriteMosaic,u.pixelRatio=p,u.displayLevel=d,u.requiredLevel=d,r.setContext(e);const c=l.getScale(t[0]),[m,g]=l.getShift(t,a*c),y=.125*a*c/o,h=i.transforms.dvs;h[0]=y,h[4]=-y,h[6]=-1-m-n[0]*a*2,h[7]=1+g+(1-n[1])*a*2-2,u.state.size[0]=o,u.state.size[1]=o,i.stage||i.attachWithContext(e),i.triangleCount=0,r.drawTile(u,i,s)}}export{r as VectorTileRendererHelper3D};
