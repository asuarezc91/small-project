/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import{isNone as e,isSome as t,unwrap as r}from"../../../../core/maybe.js";import"../../../../core/mathUtils.js";import"../../../../chunks/builtins.js";import i from"../../../webgl/BufferObject.js";import s from"../../../webgl/VertexArrayObject.js";import"../../../webgl/FramebufferObject.js";import"../../../webgl/RenderingContext.js";import{deserializeSymbols as n}from"./decluttering/util.js";class o{constructor(e){this.layerUIDs=[],this.isDestroyed=!1,this.data=e,this.memoryUsed=e.byteLength;let t=1;const r=new Uint32Array(e);this.layerUIDs=[];const i=r[t++];for(let e=0;e<i;e++)this.layerUIDs[e]=r[t++];this.bufferDataOffset=t}get isPreparedForRendering(){return e(this.data)}get offset(){return this.bufferDataOffset}destroy(){this.isDestroyed||(this.doDestroy(),this.isDestroyed=!0)}prepareForRendering(t,r){e(this.data)||(this.doPrepareForRendering(t,r,this.data,this.bufferDataOffset),this.data=null)}}class f extends o{constructor(e){super(e),this.type=2,this.lineIndexStart=0,this.lineIndexCount=0;let t=this.bufferDataOffset;const r=new Uint32Array(e);this.lineIndexStart=r[t++],this.lineIndexCount=r[t++],this.isLineDataDriven=!!r[t++],this.bufferDataOffset=t}hasData(){return this.lineIndexCount>0}triangleCount(){return this.lineIndexCount/3}doDestroy(){t(this.lineVertexArrayObject)&&this.lineVertexArrayObject.dispose(),t(this.lineVertexBuffer)&&this.lineVertexBuffer.dispose(),t(this.lineIndexBuffer)&&this.lineIndexBuffer.dispose(),this.lineVertexArrayObject=null,this.lineVertexBuffer=null,this.lineIndexBuffer=null,this.memoryUsed=0}doPrepareForRendering(e,t,r,n){const o=new Uint32Array(r),a=new Int32Array(o.buffer),l=o[n++];this.lineVertexBuffer=i.createVertex(e,35044,new Int32Array(a.buffer,4*n,l)),n+=l;const u=o[n++];this.lineIndexBuffer=i.createIndex(e,35044,new Uint32Array(o.buffer,4*n,u)),n+=u,this.lineVertexArrayObject=new s(e,t.getProgramAttributes(3),this.isLineDataDriven?f.lineVertexAttributesDD:f.lineVertexAttributes,{geometry:this.lineVertexBuffer},this.lineIndexBuffer)}}f.lineVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5123,offset:8,stride:12,normalized:!1,divisor:0}]},f.lineVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:20,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:20,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5122,offset:8,stride:20,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:12,stride:20,normalized:!0,divisor:0},{name:"a_width",count:1,type:5126,offset:16,stride:20,normalized:!1,divisor:0}]};class a extends o{constructor(e){super(e),this.type=1,this.fillIndexStart=0,this.fillIndexCount=0,this.outlineIndexStart=0,this.outlineIndexCount=0;let t=this.bufferDataOffset;const r=new Uint32Array(e);this.fillIndexStart=r[t++],this.fillIndexCount=r[t++],this.outlineIndexStart=r[t++],this.outlineIndexCount=r[t++],this.isFillDataDriven=!!r[t++],this.isOutlineDataDriven=!!r[t++],this.bufferDataOffset=t}hasData(){return this.fillIndexCount>0||this.outlineIndexCount>0}triangleCount(){return(this.fillIndexCount+this.outlineIndexCount)/3}doDestroy(){t(this.fillVertexArrayObject)&&this.fillVertexArrayObject.dispose(),t(this.fillVertexBuffer)&&this.fillVertexBuffer.dispose(),t(this.fillIndexBuffer)&&this.fillIndexBuffer.dispose(),this.fillVertexArrayObject=null,this.fillVertexBuffer=null,this.fillIndexBuffer=null,t(this.outlineVertexArrayObject)&&this.outlineVertexArrayObject.dispose(),t(this.outlineVertexBuffer)&&this.outlineVertexBuffer.dispose(),t(this.outlineIndexBuffer)&&this.outlineIndexBuffer.dispose(),this.outlineVertexArrayObject=null,this.outlineVertexBuffer=null,this.outlineIndexBuffer=null,this.memoryUsed=0}doPrepareForRendering(e,t,r,n){const o=new Uint32Array(r),f=new Int32Array(o.buffer),l=o[n++];this.fillVertexBuffer=i.createVertex(e,35044,new Int32Array(f.buffer,4*n,l)),n+=l;const u=o[n++];this.fillIndexBuffer=i.createIndex(e,35044,new Uint32Array(o.buffer,4*n,u)),n+=u;const c=o[n++];this.outlineVertexBuffer=i.createVertex(e,35044,new Int32Array(f.buffer,4*n,c)),n+=c;const d=o[n++];this.outlineIndexBuffer=i.createIndex(e,35044,new Uint32Array(o.buffer,4*n,d)),n+=d,this.fillVertexArrayObject=new s(e,t.getProgramAttributes(1),this.isFillDataDriven?a.fillVertexAttributesDD:a.fillVertexAttributes,{geometry:this.fillVertexBuffer},this.fillIndexBuffer),this.outlineVertexArrayObject=new s(e,t.getProgramAttributes(2),this.isOutlineDataDriven?a.outlineVertexAttributesDD:a.outlineVertexAttributes,{geometry:this.outlineVertexBuffer},this.outlineIndexBuffer)}}a.fillVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]},a.fillVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:8,normalized:!0,divisor:0}]},a.outlineVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:8,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:8,normalized:!1,divisor:0}]},a.outlineVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:12,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:8,stride:12,normalized:!0,divisor:0}]};class l extends o{constructor(e,t){super(e),this.type=3,this.iconPerPageElementsMap=new Map,this.glyphPerPageElementsMap=new Map,this.symbolInstances=[],this.isIconSDF=!1,this.opacityChanged=!1,this.lastOpacityUpdate=0,this.symbols=[];let r=this.bufferDataOffset;const i=new Uint32Array(e),s=new Int32Array(e),o=new Float32Array(e);this.isIconSDF=!!i[r++],this.isIconDataDriven=!!i[r++],this.isTextDataDriven=!!i[r++];const f=i[r++];for(let e=0;e<f;e++){const e=i[r++],t=i[r++],s=i[r++];this.iconPerPageElementsMap.set(e,[t,s])}const a=i[r++];for(let e=0;e<a;e++){const e=i[r++],t=i[r++],s=i[r++];this.glyphPerPageElementsMap.set(e,[t,s])}const l=i[r++],u=i[r++];this.iconOpacity=new Int32Array(l),this.textOpacity=new Int32Array(u),r=n(i,s,o,r,this.symbols,t),this.bufferDataOffset=r}hasData(){return this.iconPerPageElementsMap.size>0||this.glyphPerPageElementsMap.size>0}triangleCount(){let e=0;return this.iconPerPageElementsMap.forEach((t=>{e+=t[1]})),this.glyphPerPageElementsMap.forEach((t=>{e+=t[1]})),e/3}doDestroy(){t(this.iconVertexArrayObject)&&this.iconVertexArrayObject.dispose(),t(this.iconVertexBuffer)&&this.iconVertexBuffer.dispose(),t(this.iconOpacityBuffer)&&this.iconOpacityBuffer.dispose(),t(this.iconIndexBuffer)&&this.iconIndexBuffer.dispose(),this.iconVertexArrayObject=null,this.iconVertexBuffer=null,this.iconOpacityBuffer=null,this.iconIndexBuffer=null,t(this.textVertexArrayObject)&&this.textVertexArrayObject.dispose(),t(this.textVertexBuffer)&&this.textVertexBuffer.dispose(),t(this.textOpacityBuffer)&&this.textOpacityBuffer.dispose(),t(this.textIndexBuffer)&&this.textIndexBuffer.dispose(),this.textVertexArrayObject=null,this.textVertexBuffer=null,this.textOpacityBuffer=null,this.textIndexBuffer=null,this.memoryUsed=0}updateOpacityInfo(){if(!this.opacityChanged)return;this.opacityChanged=!1;const e=r(this.iconOpacity),t=r(this.iconOpacityBuffer);e.length>0&&e.byteLength===t.size&&t.setSubData(e);const i=r(this.textOpacity),s=r(this.textOpacityBuffer);i.length>0&&i.byteLength===s.size&&s.setSubData(i)}doPrepareForRendering(e,t,n,o){const f=new Uint32Array(n),a=new Int32Array(f.buffer),u=f[o++];this.iconVertexBuffer=i.createVertex(e,35044,new Int32Array(a.buffer,4*o,u)),o+=u;const c=f[o++];this.iconIndexBuffer=i.createIndex(e,35044,new Uint32Array(f.buffer,4*o,c)),o+=c;const d=f[o++];this.textVertexBuffer=i.createVertex(e,35044,new Int32Array(a.buffer,4*o,d)),o+=d;const h=f[o++];this.textIndexBuffer=i.createIndex(e,35044,new Uint32Array(f.buffer,4*o,h)),o+=h,this.iconOpacityBuffer=i.createVertex(e,35044,r(this.iconOpacity).buffer),this.textOpacityBuffer=i.createVertex(e,35044,r(this.textOpacity).buffer),this.iconVertexArrayObject=new s(e,t.getProgramAttributes(4),this.isIconDataDriven?l.vertexAttributesDD:l.vertexAttributes,{geometry:this.iconVertexBuffer,opacity:this.iconOpacityBuffer},this.iconIndexBuffer),this.textVertexArrayObject=new s(e,t.getProgramAttributes(6),this.isTextDataDriven?l.vertexAttributesDD:l.vertexAttributes,{geometry:this.textVertexBuffer,opacity:this.textOpacityBuffer},this.textIndexBuffer)}}l.vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_texAngleRange",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}],opacity:[{name:"a_opacityInfo",count:1,type:5121,offset:0,stride:1,normalized:!1,divisor:0}]},l.vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_texAngleRange",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}],opacity:[{name:"a_opacityInfo",count:1,type:5121,offset:0,stride:1,normalized:!1,divisor:0}]};class u extends o{constructor(e){super(e),this.type=4,this.circleIndexStart=0,this.circleIndexCount=0;let t=this.bufferDataOffset;const r=new Uint32Array(e);this.circleIndexStart=r[t++],this.circleIndexCount=r[t++],this.bufferDataOffset=t}hasData(){return this.circleIndexCount>0}triangleCount(){return this.circleIndexCount/3}doDestroy(){t(this.circleVertexArrayObject)&&this.circleVertexArrayObject.dispose(),t(this.circleVertexBuffer)&&this.circleVertexBuffer.dispose(),t(this.circleIndexBuffer)&&this.circleIndexBuffer.dispose(),this.circleVertexArrayObject=null,this.circleVertexBuffer=null,this.circleIndexBuffer=null,this.memoryUsed=0}doPrepareForRendering(e,t,r,n){const o=new Uint32Array(r),f=new Int32Array(o.buffer),a=o[n++];this.circleVertexBuffer=i.createVertex(e,35044,new Int32Array(f.buffer,4*n,a)),n+=a;const l=o[n++];this.circleIndexBuffer=i.createIndex(e,35044,new Uint32Array(o.buffer,4*n,l)),n+=l,this.circleVertexArrayObject=new s(e,t.getProgramAttributes(5),u.circleVertexAttributes,{geometry:this.circleVertexBuffer},this.circleIndexBuffer)}}u.circleVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:16,normalized:!0,divisor:0},{name:"a_stroke_color",count:4,type:5121,offset:8,stride:16,normalized:!0,divisor:0},{name:"a_data",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};export{u as CircleRenderBucket,a as FillRenderBucket,f as LineRenderBucket,o as RenderBucketBase,l as SymbolRenderBucket};
