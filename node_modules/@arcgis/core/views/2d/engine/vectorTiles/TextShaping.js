/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../webgl/Rect.js";import{hasVerticalOrientation as i}from"./ScriptUtils.js";const e=24,s=17;class c{constructor(t,i,e,s,c,h,o){this._glyphItems=t,this._maxWidth=i,this._lineHeight=e,this._letterSpacing=s,this._hAnchor=c,this._vAnchor=h,this._justify=o}getShaping(t,e,s){const c=this._letterSpacing,h=this._lineHeight,o=this._justify,a=this._maxWidth,n=[];let l=0,r=0,m=0,f=0,g=-1,p=0,y=-1;const x=t.length;for(let d=0;d<x;d++){const M=t.charCodeAt(d),u=s&&i(M);if(10===M){if(d===x-1)continue;if(g>=f){const t=n[g],i=t.x+t.glyphMosaicItem.metrics.advance;p=Math.max(i,p),o&&this._applyJustification(n,f,g),f=n.length}e?r-=h:r+=h,l=0,++m;continue}let _;for(const t of this._glyphItems)if(_=t[M],_)break;if(_){if(n.push({codePoint:M,x:l,y:r,vertical:u,glyphMosaicItem:_}),l+=_.metrics.advance+c,a>0&&l>a&&y>=0){const t=y+1,i=n[t].x;p=Math.max(i,p);for(let s=t;s<n.length;s++)e?n[s].y-=h:n[s].y+=h,n[s].x-=i;o&&this._applyJustification(n,f,y),e?r-=h:r+=h,l-=i,++m,f=t,y=-1}++g,32===M&&(y=n.length-1)}}if(g>=f){const t=n[g],i=t.x+t.glyphMosaicItem.metrics.advance;p=Math.max(p,i),o&&this._applyJustification(n,f,g)}if(n.length>0){const t=(o-this._hAnchor)*p;let i=(-this._vAnchor*(m+1)+.5)*h;e&&m&&(i+=m*h);for(const e of n)e.x+=t,e.y+=i}return n}static getTextBox(t,i){if(!t.length)return null;let e=1/0,s=1/0,c=0,h=0;for(const o of t){const t=o.glyphMosaicItem.metrics.advance,a=o.x,n=o.y-17,l=a+t,r=n+i;e=Math.min(e,a),c=Math.max(c,l),s=Math.min(s,n),h=Math.max(h,r)}return{x:e,y:s,width:c-e,height:h-s}}static getBox(t){if(!t.length)return null;let i=1/0,e=1/0,s=0,c=0;for(const h of t){const{height:t,left:o,top:a,width:n}=h.glyphMosaicItem.metrics,l=h.x,r=h.y-(t-Math.abs(a)),m=l+n+o,f=r+t;i=Math.min(i,l),s=Math.max(s,m),e=Math.min(e,r),c=Math.max(c,f)}return{x:i,y:e,width:s-i,height:c-e}}static addDecoration(i,e){const s=i.length;if(0===s)return;let c=i[0].x+i[0].glyphMosaicItem.metrics.left,h=i[0].y;for(let o=1;o<s;o++){const s=i[o];if(s.y!==h){const a=i[o-1].x+i[o-1].glyphMosaicItem.metrics.left+i[o-1].glyphMosaicItem.metrics.width;i.push({codePoint:0,x:c,y:h+e-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new t(4,0,4,8),metrics:{width:a-c,height:8,left:0,top:0,advance:0},page:0,code:0}}),h=s.y,c=s.x+s.glyphMosaicItem.metrics.left}}const o=i[s-1].x+i[s-1].glyphMosaicItem.metrics.left+i[s-1].glyphMosaicItem.metrics.width;i.push({codePoint:0,x:c,y:h+e-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new t(4,0,4,8),metrics:{width:o-c,height:8,left:0,top:0,advance:0},page:0,code:0}})}_applyJustification(t,i,e){const s=t[e],c=s.vertical?24:s.glyphMosaicItem.metrics.advance,h=(s.x+c)*this._justify;for(let s=i;s<=e;s++)t[s].x-=h}}export{s as SDF_GLYPH_BASELINE,e as SDF_GLYPH_SIZE,c as TextShaping};
