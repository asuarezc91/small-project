/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{resolve as e,isAbortError as t}from"../../../../core/promiseUtils.js";import s from"./style/StyleRepository.js";import r from"./WorkerTile.js";export default class{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},e()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(e,s){const{key:o}=e,i={};for(const t of Object.keys(e.sourceName2DataAndRefKey)){const s=e.sourceName2DataAndRefKey[t];i[t]=s.refKey}const n=new r(o,i,this,this._styleRepository);try{return await n.parse(e,this._vectorTileLayerMaxBuffers,s)}catch(e){if(n.setObsolete(),n.release(),!t(e))throw e;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const s of e){const e=s.type,r=s.data;switch(e){case 0:t.setPaintProperties(r.layer,r.paint);break;case 1:t.setLayoutProperties(r.layer,r.layout);break;case 3:t.deleteStyleLayer(r.layerName);break;case 2:t.setStyleLayer(r.layer,r.index)}}}setStyle(e){this._styleRepository=new s(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(t,s,r){const o=[],i=this._spriteInfo;return t.forEach((e=>{void 0===i[e]&&o.push(e)})),0===o.length?e():s.invoke("getSprites",o,{signal:r&&r.signal}).then((e=>{for(const t in e){const s=e[t];i[t]=s}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(t,s,r,o,i){const n=[];let a=this._glyphInfo[s];return a?r.forEach((e=>{a[e]||n.push(e)})):(a=this._glyphInfo[s]=[],r.forEach((e=>n.push(e)))),0===n.length?e():o.invoke("getGlyphs",{tileID:t,font:s,codePoints:n},i).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}
