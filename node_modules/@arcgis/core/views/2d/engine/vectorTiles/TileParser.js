/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{resolve as e,all as t,isAborted as r}from"../../../../core/promiseUtils.js";import s from"../../../../core/pbf.js";import{TileClipper as o,SimpleBuilder as i}from"../webgl/TileClipper.js";import{TileStatus as n}from"../../tiling/enums.js";import c from"./CircleBucket.js";import a from"./Feature.js";import l from"./FillBucket.js";import{TriangleIndexBuffer as u}from"./IndexMemoryBuffer.js";import f from"./LineBucket.js";import h from"./SourceLayerData.js";import p from"./SymbolBucket.js";import{FillVertexBuffer as m,OutlineVertexBuffer as _,LineVertexBuffer as y,CircleVertexBuffer as k,SymbolVertexBuffer as w}from"./VertexMemoryBuffer.js";export default class{constructor(e,t,r,n,c){if(this._pbfTiles={},this._tileClippers={},this._client=r,this._tile=t,c){this._styleLayerUIDs=new Set;for(const e of c)this._styleLayerUIDs.add(e)}this._styleRepository=n,this._layers=this._styleRepository.layers;const[a,l,u]=t.tileKey.split("/").map(parseFloat);this._level=a;const f=Math.max(8,Math.round(1*this._level)-8);for(const t of Object.keys(e)){const r=e[t];this._pbfTiles[t]=new s(new Uint8Array(r.protobuff),new DataView(r.protobuff));if(r.refKey){const[e]=r.refKey.split("/").map(parseFloat),s=a-e;if(s>0){const e=(1<<s)-1,r=l&e,i=u&e;this._tileClippers[t]=new o(s,r,i,8,f)}}this._tileClippers[t]||(this._tileClippers[t]=new i)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(r){const s=this._initialize(r),{returnedBuckets:o}=s;this._processLayers(s),this._linkReferences(s),this._filterFeatures(s);const i=new Set,c={};for(const e of o)3===e.type&&e.getResources(e.tileClipper,i,c);if(this._tile.status===n.INVALID)return e([]);const a=this._fetchResources(i,c,r);return t(a).then((()=>this._processFeatures(s.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:r,zoom:s,sourceNameToTileClipper:o,sourceNameToUniqueSourceLayerBuckets:i,sourceNameToUniqueSourceLayers:n,returnedBuckets:c,layerIdToBucket:a,referencerUIDToReferencedId:l}=e;for(let e=r.length-1;e>=0;e--){const u=r[e];if(!this._canParseStyleLayer(u.uid)||u.minzoom&&s<Math.floor(u.minzoom)||u.maxzoom&&s>=u.maxzoom||0===u.type)continue;if(!t[u.source]||!o[u.source])continue;const f=t[u.source],h=o[u.source],p=u.sourceLayer,m=f[p];if(m){let e=n[u.source];if(e||(e=n[u.source]=new Set),e.add(u.sourceLayer),u.refLayerId)l.set(u.uid,u.refLayerId);else{const e=this._createBucket(u);if(e){e.layerUIDs=[u.uid],e.layerExtent=m.extent,e.tileClipper=h;let t=i[u.source];t||(t=i[u.source]={});let r=t[p];r||(r=t[p]=[]),r.push(e),c.push(e),a[u.id.toLowerCase()]=e}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:r}=e;r.forEach(((e,r)=>{e=e.toLowerCase(),t[e]&&t[e].layerUIDs.push(r)}))}_filterFeatures(e){const{signal:t,sourceNameToTileData:s,sourceNameToUniqueSourceLayerBuckets:o,sourceNameToUniqueSourceLayers:i}=e,n=10*this._level,c=10*(this._level+1),l=[],u=[];for(const e of Object.keys(i)){i[e].forEach((t=>{l.push(t),u.push(e)}))}for(let e=0;e<l.length;e++){const i=u[e],f=l[e];if(!s[i]||!o[i])continue;const h=s[i][f],p=o[i][f];if(!p||0===p.length)continue;if(r(t))return;const m=h.getData();for(;m.nextTag(2);){const e=m.getMessage(),t=new a(e,h);e.release();const r=t.values;if(r){const e=r._minzoom;if(e&&e>=c)continue;const t=r._maxzoom;if(t&&t<=n)continue}for(const e of p)e.pushFeature(t)}}}_fetchResources(e,t,r){const s=[],o=this._tile.getWorkerTileHandler();let i,n;e.size>0&&(i=o.fetchSprites(e,this._client,r),s.push(i));for(const e in t){const i=t[e];i.size>0&&(n=o.fetchGlyphs(this._tile.tileKey,e,i,this._client,r),s.push(n))}return s}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()));for(const e of t)e.processFeatures(e.tileClipper);return t}_parseTileData(e){const t={};for(const r of Object.keys(e)){const s=e[r],o={};for(;s.next();)switch(s.tag()){case 3:{const e=s.getMessage(),t=new h(e);e.release(),o[t.name]=t;break}default:s.skip()}t[r]=o}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new l(e,this._level,new m(e.hasDataDrivenFill),new u,new _(e.hasDataDrivenOutline),new u)}_createLineBucket(e){return new f(e,this._level,new y(e.hasDataDrivenLine),new u)}_createCircleBucket(e){return new c(e,this._level,new k,new u)}_createSymbolBucket(e){const t=this._tile;return new p(e,this._level,new w(e.hasDataDrivenIcon),new u,new w(e.hasDataDrivenText),new u,t.placementEngine,t.getWorkerTileHandler())}}
