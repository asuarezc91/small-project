/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{numericHash as e}from"../../../../core/string.js";import t from"../../../../core/BidiEngine.js";import{C_DEG_TO_RAD as i,log2 as n,interpolate as a}from"./GeometryUtils.js";import{IconLayout as s,TextLayout as o}from"./style/StyleLayer.js";import{Point as r}from"../webgl/Geometry.js";import l from"./BaseBucket.js";import{SDF_GLYPH_SIZE as h,TextShaping as x}from"./TextShaping.js";import{TILE_PIXEL_RATIO as c,Anchor as d,TILE_COORD_SIZE as f}from"./Placement.js";function y(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class g extends l{constructor(e,t,i,n,a,s,o,r){if(super(e,t),this.type=3,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,e.hasDataDrivenIcon!==i.isDataDriven())throw new Error("incompatible icon buffer");if(e.hasDataDrivenText!==a.isDataDriven())throw new Error("incompatible text buffer");this._iconVertexBuffer=i,this._iconIndexBuffer=n,this._textVertexBuffer=a,this._textIndexBuffer=s,this._placementEngine=o,this._workerTileHandler=r}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(t,i,n){const a=this.layer,s=this.zoom,o=a.hasDataDrivenIcon,r=a.hasDataDrivenText;t&&t.setExtent(this.layerExtent);const l=a.getLayoutProperty("icon-image"),h=a.getLayoutProperty("text-field"),x=[];let c,d,f,y,u,m,p,_,M,I,b=[1,1,1,1],P=1,V=1,A=[1,1,1,1],L=1,w=1;for(const D of this._features){const z=D.getGeometry(t);if(!z||0===z.length)continue;let B,C;l&&(B=a.getLayoutValue("icon-image",s,D),l.isDataDriven||(B=this._replaceKeys(B,D.values)),B&&(i.add(B),c=a.getLayoutValue("icon-rotate",s,D),d=a.getLayoutValue("icon-anchor",s,D),f=a.getLayoutValue("icon-offset",s,D)));let S=!1;if(h&&(C=a.getLayoutValue("text-field",s,D),C&&!h.isDataDriven&&(C=this._replaceKeys(C,D.values)),C)){C=C.replace(/\\n/g,"\n");switch(a.getLayoutValue("text-transform",s,D)){case 2:C=C.toLowerCase();break;case 1:C=C.toUpperCase()}if(g._bidiEngine.hasBidiChar(C)){let e;e="rtl"===g._bidiEngine.checkContextual(C)?"IDNNN":"ICNNN",C=g._bidiEngine.bidiTransform(C,e,"VLYSN"),S=!0}const e=C.length;if(e>0){I=a.getLayoutValue("text-font",s,D);for(const t of I){let i=n[t];i||(i=n[t]=new Set);for(let t=0;t<e;t++){const e=C.charCodeAt(t);i.add(e)}}y=a.getLayoutValue("text-rotate",s,D),u=a.getLayoutValue("text-anchor",s,D),m=a.getLayoutValue("text-offset",s,D),p=a.getLayoutValue("text-justify",s,D),_=a.getLayoutValue("text-letter-spacing",s,D),M=a.getLayoutValue("text-max-width",s,D)}}if(!B&&!C)continue;const R=a.getLayoutValue("icon-size",s,D),v=a.getLayoutValue("text-size",s,D);a.hasDataDrivenIconColor&&(b=a.getPaintValue("icon-color",s,D)),a.hasDataDrivenIconOpacity&&(P=a.getPaintValue("icon-opacity",s,D)),a.hasDataDrivenIconSize&&(V=R),a.hasDataDrivenTextColor&&(A=a.getPaintValue("text-color",s,D)),a.hasDataDrivenTextOpacity&&(L=a.getPaintValue("text-opacity",s,D)),a.hasDataDrivenTextSize&&(w=v);const k=a.getLayoutValue("symbol-sort-key",s,D),T={sprite:B,label:C,rtl:S,type:D.type,geometry:z,hash:(C?e(C):0)^(B?e(B):0),priority:k,iconSize:R,iconRotate:c,ddIconValues:o?{color:b,opacity:P,size:V}:null,iconAnchor:d,iconOffset:f,textSize:v,textRotate:y,ddTextValues:r?{color:A,opacity:L,size:w}:null,textAnchor:u,textOffset:m,textJustify:p,textLetterSpacing:_,textMaxWidth:M,textFontArray:I};x.push(T)}this._symbolFeatures=x}processFeatures(e){e&&e.setExtent(this.layerExtent);const t=this.layer,n=this.zoom,a=t.getLayoutValue("symbol-placement",n),r=0!==a,l=t.getLayoutValue("symbol-spacing",n)*c,u=t.getLayoutProperty("icon-image"),m=t.getLayoutProperty("text-field"),p=u?new s(t,n,r):null,_=m?new o(t,n,r):null,M=this._workerTileHandler;let I;u&&(I=M.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const b=[];let P=1;_&&_.size&&(P=_.size/h);const V=_?_.maxAngle*i:0,A=_?_.size*c:0;for(const e of this._symbolFeatures){let t;p&&I&&e.sprite&&(t=I[e.sprite],t&&t.sdf&&(this._isIconSDF=!0));let i;!!t&&(p.size=e.iconSize,p.rotate=e.iconRotate,p.offset=e.iconOffset);let n=0;const s=e.label;if(s){_.size=e.textSize,_.rotate=e.textRotate,_.anchor=e.textAnchor,_.fontArray=e.textFontArray,_.justify=e.textJustify,_.letterSpacing=e.textLetterSpacing,_.maxWidth=e.textMaxWidth,_.offset=e.textOffset;const t=r?_.keepUpright:_.writingMode&&_.writingMode.indexOf(1)>=0;let a=.5;switch(_.anchor){case 5:case 1:case 7:a=0;break;case 6:case 2:case 8:a=1}let o=.5;switch(_.anchor){case 5:case 3:case 6:o=0;break;case 7:case 4:case 8:o=1}let l=.5;switch(_.justify){case 0:l=a;break;case 1:l=0;break;case 3:l=1}const d=_.letterSpacing*h,f=r?0:_.maxWidth*h,y=_.lineHeight*h;let g,u;if(g=_.fontArray.map((e=>M.getGlyphItems(e))),u=new x(g,f,y,d,a,o,l),i=u.getShaping(s,e.rtl,t),i&&i.length>0){let e=1e30,t=-1e30;for(const n of i)e=Math.min(e,n.x),t=Math.max(t,n.x);n=(t-e+2*h)*P*c}}for(let s of e.geometry){const o=[];if(1===a){if(i&&i.length>0&&_&&_.size){const e=_.size*c*(2+Math.min(2,4*Math.abs(_.offset[1])));s=g._smoothVertices(s,e)}g._pushAnchors(o,s,l,n)}else 2===a?g._pushCenterAnchor(o,s):3===e.type?g._pushCentroid(o,s):o.push(new d(s[0].x,s[0].y));for(const a of o){if(a.x<0||a.x>f||a.y<0||a.y>f)continue;if(r&&n>0&&0===_.rotationAlignment&&!g._honorsTextMaxAngle(s,a,n,V,A))continue;const o={shaping:i,line:s,iconMosaicItem:t,anchor:a,symbolFeature:e,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};b.push(o),this._processFeature(o,p,_)}}}b.sort(y),this._addPlacedGlyphs(),this._symbolInstances=b}serialize(){let e=13;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=g.symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;let t=0;const i=new Uint32Array(e),n=new Int32Array(i.buffer),a=new Float32Array(i.buffer);i[t++]=this.type,i[t++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)i[t++]=this.layerUIDs[e];i[t++]=this._isIconSDF?1:0,i[t++]=this._iconVertexBuffer.isDataDriven()?1:0,i[t++]=this._textVertexBuffer.isDataDriven()?1:0,i[t++]=this.markerPageMap.size,this.markerPageMap.forEach((([e,n],a)=>{i[t++]=a,i[t++]=e,i[t++]=n})),i[t++]=this.glyphsPageMap.size,this.glyphsPageMap.forEach((([e,n],a)=>{i[t++]=a,i[t++]=e,i[t++]=n})),i[t++]=this._iconVertexBuffer.index/4,i[t++]=this._textVertexBuffer.index/4,t=g.serializeSymbols(i,n,a,t,this._symbolInstances),i[t++]=this._iconVertexBuffer.array.length;for(let e=0;e<this._iconVertexBuffer.array.length;e++)n[t++]=this._iconVertexBuffer.array[e];i[t++]=this._iconIndexBuffer.array.length;for(let e=0;e<this._iconIndexBuffer.array.length;e++)i[t++]=this._iconIndexBuffer.array[e];i[t++]=this._textVertexBuffer.array.length;for(let e=0;e<this._textVertexBuffer.array.length;e++)n[t++]=this._textVertexBuffer.array[e];i[t++]=this._textIndexBuffer.array.length;for(let e=0;e<this._textIndexBuffer.array.length;e++)i[t++]=this._textIndexBuffer.array[e];return i.buffer}static symbolsSerializationLength(e){let t=0;t+=1;for(const i of e||[]){t+=4,t+=1;for(const e of i.textColliders)t+=10;for(const e of i.iconColliders)t+=10;t+=1,t+=2*i.textVertexRanges.length,t+=1,t+=2*i.iconVertexRanges.length}return t}static serializeSymbols(e,t,i,n,a){a=a||[],t[n++]=a.length;for(const e of a){t[n++]=e.anchor.x,t[n++]=e.anchor.y,t[n++]=e.symbolFeature.hash,t[n++]=e.symbolFeature.priority,t[n++]=e.textColliders.length+e.iconColliders.length;for(const a of e.textColliders)t[n++]=a.xTile,t[n++]=a.yTile,t[n++]=a.dxPixels,t[n++]=a.dyPixels,t[n++]=a.hard?1:0,t[n++]=a.partIndex,i[n++]=a.minLod,i[n++]=a.maxLod,t[n++]=a.width,t[n++]=a.height;for(const a of e.iconColliders)t[n++]=a.xTile,t[n++]=a.yTile,t[n++]=a.dxPixels,t[n++]=a.dyPixels,t[n++]=a.hard?1:0,t[n++]=a.partIndex,i[n++]=a.minLod,i[n++]=a.maxLod,t[n++]=a.width,t[n++]=a.height;t[n++]=e.textVertexRanges.length;for(const[i,a]of e.textVertexRanges)t[n++]=i,t[n++]=a;t[n++]=e.iconVertexRanges.length;for(const[i,a]of e.iconVertexRanges)t[n++]=i,t[n++]=a}return n}_replaceKeys(e,t){return e.replace(/{([^{}]+)}/g,(function(e,i){return i in t?t[i]:""}))}_processFeature(e,t,i){const a=e.line,s=e.iconMosaicItem,o=e.shaping,r=e.anchor,l=!!s;let h=!0;l&&(h=t.optional||!s);const x=o&&o.length>0;let c,d,f=!0;if(x&&(f=i.optional||!o||0===o.length),l&&(c=this._placementEngine.getIconPlacement(r,s,t)),(c||h)&&(x&&(d=this._placementEngine.getTextPlacement(r,o,a,i)),d||f)){if(c&&d||(f||h?f||d?h||c||(d=null):c=null:(c=null,d=null)),d&&(this._storePlacedGlyphs(e,d.shapes,this.zoom,i.rotationAlignment),d.textColliders)){e.textColliders=d.textColliders;for(const e of d.textColliders){e.minLod=Math.max(this.zoom+n(e.minLod),0),e.maxLod=Math.min(this.zoom+n(e.maxLod),25);const t=e.angle;if(t){const i=Math.cos(t),n=Math.sin(t),a=e.dxPixels*i-e.dyPixels*n,s=e.dxPixels*n+e.dyPixels*i,o=(e.dxPixels+e.width)*i-e.dyPixels*n,r=(e.dxPixels+e.width)*n+e.dyPixels*i,l=e.dxPixels*i-(e.dyPixels+e.height)*n,h=e.dxPixels*n+(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i-(e.dyPixels+e.height)*n,c=(e.dxPixels+e.width)*n+(e.dyPixels+e.height)*i,d=Math.min(a,o,l,x),f=Math.max(a,o,l,x),y=Math.min(s,r,h,c),g=Math.max(s,r,h,c);e.dxPixels=d,e.dyPixels=y,e.width=f-d,e.height=g-y}}}if(c&&(this._addPlacedIcons(e,c.shapes,this.zoom,s.page,1===t.rotationAlignment),c.iconColliders)){e.iconColliders=c.iconColliders;for(const e of c.iconColliders){e.minLod=Math.max(this.zoom+n(e.minLod),0),e.maxLod=Math.min(this.zoom+n(e.maxLod),25);const t=e.angle;if(t){const i=Math.cos(t),n=Math.sin(t),a=e.dxPixels*i-e.dyPixels*n,s=e.dxPixels*n+e.dyPixels*i,o=(e.dxPixels+e.width)*i-e.dyPixels*n,r=(e.dxPixels+e.width)*n+e.dyPixels*i,l=e.dxPixels*i-(e.dyPixels+e.height)*n,h=e.dxPixels*n+(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i-(e.dyPixels+e.height)*n,c=(e.dxPixels+e.width)*n+(e.dyPixels+e.height)*i,d=Math.min(a,o,l,x),f=Math.max(a,o,l,x),y=Math.min(s,r,h,c),g=Math.max(s,r,h,c);e.dxPixels=d,e.dyPixels=y,e.width=f-d,e.height=g-y}}}}}_addPlacedIcons(e,t,i,a,s){const o=e.symbolFeature.ddIconValues,r=Math.max(i-1,0),l=this._iconVertexBuffer,h=this._iconIndexBuffer,x=this._markerMap;for(const c of t){const t=s?0:Math.max(i+n(c.minzoom),r),d=s?25:Math.min(i+n(c.maxzoom),25);if(d<=t)continue;const f=c.tl,y=c.tr,g=c.bl,u=c.br,m=c.mosaicRect,p=c.labelAngle,_=c.minAngle,M=c.maxAngle,I=c.anchor,b=l.index,P=m.x,V=m.y,A=P+m.width,L=V+m.height,w=l.index;l.add(I.x,I.y,f.x,f.y,P,V,p,_,M,t,d,o),l.add(I.x,I.y,y.x,y.y,A,V,p,_,M,t,d,o),l.add(I.x,I.y,g.x,g.y,P,L,p,_,M,t,d,o),l.add(I.x,I.y,u.x,u.y,A,L,p,_,M,t,d,o),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===w?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([w,4]),h.add(b+0,b+1,b+2),h.add(b+1,b+2,b+3),x.has(a)?x.get(a)[1]+=6:x.set(a,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,i=this._glyphMap;this._glyphBufferDataStorage.forEach(((n,a)=>{for(const s of n){const n=e.index,o=s.symbolInstance,r=o.symbolFeature.ddTextValues,l=e.index;e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tl[0],s.tl[1],s.xmin,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tr[0],s.tr[1],s.xmax,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.bl[0],s.bl[1],s.xmin,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.br[0],s.br[1],s.xmax,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,r),o.textVertexRanges.length>0&&o.textVertexRanges[0][0]+o.textVertexRanges[0][1]===l?o.textVertexRanges[0][1]+=4:o.textVertexRanges.push([l,4]),t.add(n+0,n+1,n+2),t.add(n+1,n+2,n+3),i.has(a)?i.get(a)[1]+=6:i.set(a,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}})),this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,i,a){const s=Math.max(i-1,0),o=1===a;let r,l,h,x,c,d,f,y,g,u,m;for(const a of t){if(r=o?0:Math.max(i+n(a.minzoom),s),l=o?25:Math.min(i+n(a.maxzoom),25),l<=r)continue;h=a.tl,x=a.tr,c=a.bl,d=a.br,f=a.labelAngle,y=a.minAngle,g=a.maxAngle,u=a.anchor,m=a.mosaicRect,this._glyphBufferDataStorage.has(a.page)||this._glyphBufferDataStorage.set(a.page,[]);this._glyphBufferDataStorage.get(a.page).push({glyphAnchor:[u.x,u.y],tl:[h.x,h.y],tr:[x.x,x.y],bl:[c.x,c.y],br:[d.x,d.y],xmin:m.x,ymin:m.y,xmax:m.x+m.width,ymax:m.y+m.height,labelAngle:f,minAngle:y,maxAngle:g,minLod:r,maxLod:l,placementLod:s,symbolInstance:e})}}static _pushAnchors(e,t,i,n){i+=n;let s=0;const o=t.length-1;for(let e=0;e<o;e++)s+=r.distance(t[e],t[e+1]);let l=n||i;if(l*=.5,s<=l)return;const h=l/s;let x=0,c=-(i=s/Math.max(Math.round(s/i),1))/2;const f=t.length-1;for(let n=0;n<f;n++){const s=t[n],o=t[n+1],r=o.x-s.x,l=o.y-s.y,f=Math.sqrt(r*r+l*l);let y;for(;c+i<x+f;){c+=i;const t=(c-x)/f,g=a(s.x,o.x,t),u=a(s.y,o.y,t);void 0===y&&(y=Math.atan2(l,r)),e.push(new d(g,u,y,n,h))}x+=f}}static _pushCenterAnchor(e,t){let i=0;const n=t.length-1;for(let e=0;e<n;e++)i+=r.distance(t[e],t[e+1]);const s=i/2;let o=0;const l=t.length-1;for(let i=0;i<l;i++){const n=t[i],r=t[i+1],l=r.x-n.x,h=r.y-n.y,x=Math.sqrt(l*l+h*h);if(s<o+x){const t=(s-o)/x,c=a(n.x,r.x,t),f=a(n.y,r.y,t),y=Math.atan2(h,l);return void e.push(new d(c,f,y,i,0))}o+=x}}static _deviation(e,t,i){const n=(t.x-e.x)*(i.x-t.x)+(t.y-e.y)*(i.y-t.y),a=(t.x-e.x)*(i.y-t.y)-(t.y-e.y)*(i.x-t.x);return Math.atan2(a,n)}static _honorsTextMaxAngle(e,t,i,n,a){let s=0;const o=i/2;let l=new r(t.x,t.y),h=t.segment+1;for(;s>-o;){if(--h,h<0)return!1;s-=r.distance(e[h],l),l=e[h]}s+=r.distance(e[h],e[h+1]);const x=[];let c=0;const d=e.length;for(;s<o;){const t=e[h];let i,o=h;do{if(++o,o===d)return!1;i=e[o]}while(i.isEqual(t));let l,f=o;do{if(++f,f===d)return!1;l=e[f]}while(l.isEqual(i));const y=this._deviation(t,i,l);for(x.push({deviation:y,distToAnchor:s}),c+=y;s-x[0].distToAnchor>a;)c-=x.shift().deviation;if(Math.abs(c)>n)return!1;s+=r.distance(i,l),h=o}return!0}static _smoothVertices(e,t){if(t<=0)return e;let i=e.length;if(i<3)return e;const n=[];let a=0,s=0;n.push(0);for(let t=1;t<i;t++){const i=r.distance(e[t],e[t-1]);i>0&&(a+=i,n.push(a),s++,s!==t&&(e[s]=e[t]))}if(i=s+1,i<3)return e;t=Math.min(t,.2*a);const o=e[0].x,l=e[0].y,h=e[i-1].x,x=e[i-1].y,c=r.sub(e[0],e[1]);c.normalize(),e[0].x+=t*c.x,e[0].y+=t*c.y,c.assignSub(e[i-1],e[i-2]),c.normalize(),e[i-1].x+=t*c.x,e[i-1].y+=t*c.y,n[0]-=t,n[i-1]+=t;const d=[];d.push(new r(o,l));const f=1e-6,y=.5*t;for(let a=1;a<i-1;a++){let s=0,o=0,l=0;for(let i=a-1;i>=0;i--){const r=y+n[i+1]-n[a];if(r<0)break;const h=n[i+1]-n[i],x=n[a]-n[i]<y?1:r/h;if(x<f)break;const c=x*x,d=x*r-.5*c*h,g=x*h/t,u=e[i+1],m=e[i].x-u.x,p=e[i].y-u.y;s+=g/d*(u.x*x*r+.5*c*(r*m-h*u.x)-c*x*h*m/3),o+=g/d*(u.y*x*r+.5*c*(r*p-h*u.y)-c*x*h*p/3),l+=g}for(let r=a+1;r<i;r++){const i=y-n[r-1]+n[a];if(i<0)break;const h=n[r]-n[r-1],x=n[r]-n[a]<y?1:i/h;if(x<f)break;const c=x*x,d=x*i-.5*c*h,g=x*h/t,u=e[r-1],m=e[r].x-u.x,p=e[r].y-u.y;s+=g/d*(u.x*x*i+.5*c*(i*m-h*u.x)-c*x*h*m/3),o+=g/d*(u.y*x*i+.5*c*(i*p-h*u.y)-c*x*h*p/3),l+=g}d.push(new r(s/l,o/l))}return d.push(new r(h,x)),e[0].x=o,e[0].y=l,e[i-1].x=h,e[i-1].y=x,d}static _pushCentroid(e,t){const i=4096,n=4096,a=t.length-1;let s=0,o=0,r=0,l=t[0].x,h=t[0].y;l>i&&(l=i),l<0&&(l=0),h>n&&(h=n),h<0&&(h=0);for(let e=1;e<a;e++){let a=t[e].x,x=t[e].y,c=t[e+1].x,d=t[e+1].y;a>i&&(a=i),a<0&&(a=0),x>n&&(x=n),x<0&&(x=0),c>i&&(c=i),c<0&&(c=0),d>n&&(d=n),d<0&&(d=0);const f=(a-l)*(d-h)-(c-l)*(x-h);s+=f*(l+a+c),o+=f*(h+x+d),r+=f}s/=3*r,o/=3*r,isNaN(s)||isNaN(o)||e.push(new d(s,o))}}g._bidiEngine=new t;export default g;
