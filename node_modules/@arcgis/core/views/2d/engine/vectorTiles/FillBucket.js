/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../core/ArrayPool.js";import{earcut as t,deviation as l}from"../../../../core/libs/earcut/earcut.js";import{Point as i}from"../webgl/Geometry.js";import r from"../webgl/mesh/Tesselator.js";import n from"./BaseBucket.js";const o=new r;class a extends n{constructor(e,t,l,i,r,n){if(super(e,t),this.type=1,e.hasDataDrivenFill!==l.isDataDriven())throw new Error("incompatible fill buffer");if(e.hasDataDrivenOutline!==r.isDataDriven())throw new Error("incompatible outline buffer");this._fillVertexBuffer=l,this._fillIndexBuffer=i,this._outlineVertexBuffer=r,this._outlineIndexBuffer=n}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,l=this.zoom,i=t.hasDataDrivenFill,r=t.hasDataDrivenOutline;e&&e.setExtent(this.layerExtent);const n=t.getPaintValue("fill-pattern",l);let o=t.getPaintValue("fill-antialias",l)&&void 0===n,a=[1,1,1,1],s=[1,1,1,1],f=1;if(t.outlineUsesFillColor){if(o&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",l),i=t.getPaintValue("fill-opacity",l+1);e<1&&i<1&&(o=!1)}if(o&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",l),i=t.getPaintValue("fill-color",l+1);e[3]<1&&i[3]<1&&(o=!1)}}for(const u of this._features){let h,d;!n&&t.hasDataDrivenColor&&(a=t.getPaintValue("fill-color",l,u)),t.hasDataDrivenOpacity&&(f=t.getPaintValue("fill-opacity",l,u)),!n&&t.hasDataDrivenOutlineColor&&(s=t.getPaintValue("fill-outline-color",l,u)),i&&(h={color:a,opacity:f}),r&&(d={color:t.outlineUsesFillColor?a:s,opacity:f});const x=u.getGeometry(e),y=null==e?void 0:e.validateTessellation;this._processFeature(x,o,t.outlineUsesFillColor,h,d,y)}}serialize(){let e=12;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length;let t=0;const l=new Uint32Array(e),i=new Int32Array(l.buffer);l[t++]=this.type,l[t++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)l[t++]=this.layerUIDs[e];l[t++]=this._fillIndexStart,l[t++]=this._fillIndexCount,l[t++]=this._outlineIndexStart,l[t++]=this._outlineIndexCount,l[t++]=this._fillVertexBuffer.isDataDriven()?1:0,l[t++]=this._outlineVertexBuffer.isDataDriven()?1:0,l[t++]=this._fillVertexBuffer.array.length;for(let e=0;e<this._fillVertexBuffer.array.length;e++)i[t++]=this._fillVertexBuffer.array[e];l[t++]=this._fillIndexBuffer.array.length;for(let e=0;e<this._fillIndexBuffer.array.length;e++)l[t++]=this._fillIndexBuffer.array[e];l[t++]=this._outlineVertexBuffer.array.length;for(let e=0;e<this._outlineVertexBuffer.array.length;e++)i[t++]=this._outlineVertexBuffer.array[e];l[t++]=this._outlineIndexBuffer.array.length;for(let e=0;e<this._outlineIndexBuffer.array.length;e++)l[t++]=this._outlineIndexBuffer.array[e];return l.buffer}_processFeature(e,t,l,i,r,n){if(!e)return;const o=e.length;if(t&&(!l||!r||r.color[3]*r.opacity==1))for(let t=0;t<o;t++)this._processOutline(e[t],r);let s;for(let t=0;t<o;t++){const l=a._area(e[t]);l>128?(void 0!==s&&this._processFill(e,s,i,n),s=[t]):l<-128&&void 0!==s&&s.push(t)}void 0!==s&&this._processFill(e,s,i,n)}_processOutline(e,t){const l=this._outlineVertexBuffer,r=this._outlineIndexBuffer,n=r.index;let o,a,s;const f=new i(0,0),u=new i(0,0),h=new i(0,0);let d=-1,x=-1,y=-1,c=-1,_=-1,g=!1;let I=e.length;if(I<2)return;const p=e[0];let B=e[I-1];for(;I&&B.isEqual(p);)--I,B=e[I-1];if(!(I-0<2)){for(let i=0;i<I;++i){0===i?(o=e[I-1],a=e[0],s=e[1],f.assignSub(a,o),f.normalize(),f.rightPerpendicular()):(o=a,a=s,s=i!==I-1?e[i+1]:e[0],f.assign(u));const n=this._isClipEdge(o,a);-1===c&&(g=n),u.assignSub(s,a),u.normalize(),u.rightPerpendicular();const p=f.x*u.y-f.y*u.x;h.assignAdd(f,u),h.normalize();const B=-h.x*-f.x+-h.y*-f.y;let D=Math.abs(0!==B?1/B:1);D>8&&(D=8),p>=0?(y=l.add(a.x,a.y,f.x,f.y,0,1,t),-1===c&&(c=y),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y),x=l.add(a.x,a.y,D*-h.x,D*-h.y,0,-1,t),-1===_&&(_=x),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y),d=x,x=y,y=l.add(a.x,a.y,h.x,h.y,0,1,t),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y),x=l.add(a.x,a.y,u.x,u.y,0,1,t),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y)):(y=l.add(a.x,a.y,D*h.x,D*h.y,0,1,t),-1===c&&(c=y),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y),x=l.add(a.x,a.y,-f.x,-f.y,0,-1,t),-1===_&&(_=x),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y),d=x,x=y,y=l.add(a.x,a.y,-h.x,-h.y,0,-1,t),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y),d=l.add(a.x,a.y,-u.x,-u.y,0,-1,t),d>=0&&x>=0&&y>=0&&!n&&r.add(d,x,y))}d>=0&&x>=0&&c>=0&&!g&&r.add(d,x,c),d>=0&&c>=0&&_>=0&&!g&&r.add(d,_,c),this._outlineIndexCount+=3*(r.index-n)}}_processFill(i,r,n,a){let s;r.length>1&&(s=[]);let f=0;for(const e of r)0!==f&&s.push(f),f+=i[e].length;const u=2*f,h=e.acquire();for(const e of r){const t=i[e],l=t.length;for(let e=0;e<l;++e)h.push(t[e].x,t[e].y)}const d=t(h,s,2);if(a&&l(h,s,2,d)>0){const e=[],t=[];if(function(e,t,l,i){let r,n;o.beginPolygon(e,t);for(const e of i){const t=l[e];if(!(t.length<3)){o.beginContour();for(let e=0;e<t.length;++e){r=t[e].x,n=t[e].y;const l=[r,n,0];o.addVertex(l,l)}o.endContour()}}o.endPolygon()}(e,t,i,r),t.length>0){const l=this._fillVertexBuffer.index;let i=0;for(;i<e.length;)this._fillVertexBuffer.add(e[i++],e[i++],n);let r=0;for(;r<t.length;)this._fillIndexBuffer.add(l+t[r+0],l+t[r+1],l+t[r+2]),r+=3;this._fillIndexCount+=t.length}}else{const e=d.length;if(e>0){const t=this._fillVertexBuffer.index;let l=0;for(;l<u;)this._fillVertexBuffer.add(h[l++],h[l++],n);let i=0;for(;i<e;)this._fillIndexBuffer.add(t+d[i++],t+d[i++],t+d[i++]);this._fillIndexCount+=e}}e.release(h)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const l=e.length-1;for(let i=0;i<l;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[l].x-e[0].x)*(e[l].y+e[0].y),.5*t}}export default a;
