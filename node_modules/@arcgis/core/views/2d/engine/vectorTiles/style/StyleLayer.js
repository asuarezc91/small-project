/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"./Filter.js";import{StyleDefinition as i}from"./StyleDefinition.js";import e from"./StyleProperty.js";import{THIN_LINE_THRESHOLD as a}from"../../webgl/definitions.js";class n{constructor(t,e,a,n){switch(this.type=t,this.typeName=e.type,this.id=e.id,this.source=e.source,this.sourceLayer=e["source-layer"],this.minzoom=e.minzoom,this.maxzoom=e.maxzoom,this.filter=e.filter,this.layout=e.layout,this.paint=e.paint,this.z=a,this.uid=n,t){case 0:this._layoutDefinition=i.backgroundLayoutDefinition,this._paintDefinition=i.backgroundPaintDefinition;break;case 1:this._layoutDefinition=i.fillLayoutDefinition,this._paintDefinition=i.fillPaintDefinition;break;case 2:this._layoutDefinition=i.lineLayoutDefinition,this._paintDefinition=i.linePaintDefinition;break;case 3:this._layoutDefinition=i.symbolLayoutDefinition,this._paintDefinition=i.symbolPaintDefinition;break;case 4:this._layoutDefinition=i.circleLayoutDefinition,this._paintDefinition=i.circlePaintDefinition}this._layoutProperties=this._parseLayout(this.layout),this._paintProperties=this._parsePaint(this.paint)}getFeatureFilter(){return void 0!==this._featureFilter?this._featureFilter:this._featureFilter=t.createFilter(this.filter)}getLayoutProperty(t){return this._layoutProperties[t]}getPaintProperty(t){return this._paintProperties[t]}getLayoutValue(t,i,e){let a;const n=this._layoutProperties[t];n&&(a=n.getValue(i,e));const o=this._layoutDefinition[t];return void 0===a&&(a=o.default),"enum"===o.type?a=o.values.indexOf(a):"array"===o.type&&"enum"===o.value&&(a=a.map((t=>o.values.indexOf(t)))),a}getPaintValue(t,i,e){let a;const n=this._paintProperties[t];n&&(a=n.getValue(i,e));const o=this._paintDefinition[t];return void 0===a&&(a=o.default),"enum"===o.type&&(a=o.values.indexOf(a)),a}isPainterDataDriven(){const t=this._paintProperties;if(t)for(const i in t)if(t[i].isDataDriven)return!0;return!1}_parseLayout(t){const i={};for(const a in t){const n=this._layoutDefinition[a];n&&(i[a]=new e(n,t[a]))}return i}_parsePaint(t){const i={};for(const a in t){const n=this._paintDefinition[a];n&&(i[a]=new e(n,t[a]))}return i}}class o extends n{constructor(t,i,e,a){super(t,i,e,a)}}class s extends n{constructor(t,i,e,a){super(t,i,e,a);const n=this.getPaintProperty("fill-color");this.hasDataDrivenColor=!!n&&n.isDataDriven;const o=this.getPaintProperty("fill-opacity");this.hasDataDrivenOpacity=!!o&&o.isDataDriven,this.hasDataDrivenFill=this.hasDataDrivenColor||this.hasDataDrivenOpacity;const s=this.getPaintProperty("fill-outline-color");this.outlineUsesFillColor=!s,this.hasDataDrivenOutlineColor=!!s&&s.isDataDriven,this.hasDataDrivenOutline=(s?this.hasDataDrivenOutlineColor:this.hasDataDrivenColor)||this.hasDataDrivenOpacity}}class r extends n{constructor(t,e,n,o){super(t,e,n,o);const s=this.getPaintProperty("line-color");this.hasDataDrivenColor=!!s&&s.isDataDriven;const r=this.getPaintProperty("line-opacity");this.hasDataDrivenOpacity=!!r&&r.isDataDriven;const h=this.getPaintProperty("line-width");this.hasDataDrivenWidth=!!h&&h.isDataDriven,this.hasDataDrivenLine=this.hasDataDrivenColor||this.hasDataDrivenOpacity||this.hasDataDrivenWidth;let l=e.paint["line-width"];l||(l=i.linePaintDefinition["line-width"].default),this.isThinLine=!this.hasDataDrivenWidth&&"number"==typeof l&&l<a}}class h extends n{constructor(t,i,e,a){super(t,i,e,a);const n=this.getPaintProperty("icon-color");this.hasDataDrivenIconColor=!!n&&n.isDataDriven;const o=this.getPaintProperty("icon-opacity");this.hasDataDrivenIconOpacity=!!o&&o.isDataDriven;const s=this.getLayoutProperty("icon-size");this.hasDataDrivenIconSize=!!s&&s.isDataDriven,this.hasDataDrivenIcon=this.hasDataDrivenIconColor||this.hasDataDrivenIconOpacity||this.hasDataDrivenIconSize;const r=this.getPaintProperty("text-color");this.hasDataDrivenTextColor=!!r&&r.isDataDriven;const h=this.getPaintProperty("text-opacity");this.hasDataDrivenTextOpacity=!!h&&h.isDataDriven;const l=this.getLayoutProperty("text-size");this.hasDataDrivenTextSize=!!l&&l.isDataDriven,this.hasDataDrivenText=this.hasDataDrivenTextColor||this.hasDataDrivenTextOpacity||this.hasDataDrivenTextSize}}class l extends n{constructor(t,i,e,a){super(t,i,e,a);const n=this.getPaintProperty("circle-radius");this.hasDataDrivenRadius=!!n&&n.isDataDriven;const o=this.getPaintProperty("circle-color");this.hasDataDrivenColor=!!o&&o.isDataDriven;const s=this.getPaintProperty("circle-opacity");this.hasDataDrivenOpacity=!!s&&s.isDataDriven;const r=this.getPaintProperty("circle-stroke-width");this.hasDataDrivenStrokeWidth=!!r&&r.isDataDriven;const h=this.getPaintProperty("circle-stroke-color");this.hasDataDrivenStrokeColor=!!h&&h.isDataDriven;const l=this.getPaintProperty("circle-stroke-opacity");this.hasDataDrivenStrokeOpacity=!!l&&l.isDataDriven;const D=this.getPaintProperty("circle-blur");this.hasDataDrivenBlur=!!D&&D.isDataDriven}}class D{constructor(t,i,e,a){this.allowOverlap=t.getLayoutValue("icon-allow-overlap",i,a),this.anchor=t.getLayoutValue("icon-anchor",i,a),this.ignorePlacement=t.getLayoutValue("icon-ignore-placement",i,a),this.keepUpright=t.getLayoutValue("icon-keep-upright",i,a),this.offset=t.getLayoutValue("icon-offset",i,a),this.optional=t.getLayoutValue("icon-optional",i,a),this.padding=t.getLayoutValue("icon-padding",i,a),this.rotate=t.getLayoutValue("icon-rotate",i,a),this.rotationAlignment=t.getLayoutValue("icon-rotation-alignment",i,a),this.size=t.getLayoutValue("icon-size",i,a),2===this.rotationAlignment&&(this.rotationAlignment=e?0:1)}}class u{constructor(t,i,e,a){this.allowOverlap=t.getLayoutValue("text-allow-overlap",i,a),this.anchor=t.getLayoutValue("text-anchor",i,a),this.fontArray=t.getLayoutValue("text-font",i,a),this.ignorePlacement=t.getLayoutValue("text-ignore-placement",i,a),this.justify=t.getLayoutValue("text-justify",i,a),this.keepUpright=t.getLayoutValue("text-keep-upright",i,a),this.letterSpacing=t.getLayoutValue("text-letter-spacing",i,a),this.lineHeight=t.getLayoutValue("text-line-height",i,a),this.maxAngle=t.getLayoutValue("text-max-angle",i,a),this.maxWidth=t.getLayoutValue("text-max-width",i,a),this.offset=t.getLayoutValue("text-offset",i,a),this.optional=t.getLayoutValue("text-optional",i,a),this.padding=t.getLayoutValue("text-padding",i,a),this.rotate=t.getLayoutValue("text-rotate",i,a),this.rotationAlignment=t.getLayoutValue("text-rotation-alignment",i,a),this.size=t.getLayoutValue("text-size",i,a),this.transform=t.getLayoutValue("text-transform",i,a),this.writingMode=t.getLayoutValue("text-writing-mode",i,a),2===this.rotationAlignment&&(this.rotationAlignment=e?0:1)}}export{o as BackgroundStyleLayer,l as CircleStyleLayer,s as FillStyleLayer,D as IconLayout,r as LineStyleLayer,n as StyleLayer,h as SymbolStyleLayer,u as TextLayout};
