/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../../../../../Color.js";import{o as e,c as r}from"../../../../../chunks/expression.js";import{interpolate as i}from"../GeometryUtils.js";class a{constructor(t,i){let l;switch(this.isDataDriven=!1,t.type){case"number":l=!0;break;case"color":l=!0,i=a._parseColor(i);break;case"array":l="number"===t.value;break;default:l=!1}if(null==i&&(i=t.default),Array.isArray(i)&&i.length>0&&e[i[0]]){try{const e=r(i);this.getValue=this._buildExpression(e,t),this.isDataDriven=!0}catch(e){console.log(e.message),this.getValue=this._buildSimple(t.default)}return}l&&"interval"===i.type&&(l=!1);const s=i&&i.stops&&i.stops.length>0;if(s)for(const e of i.stops)e[1]=this._validate(e[1],t);if(this.isDataDriven=!!i&&!!i.property,this.isDataDriven)if(void 0!==i.default&&(i.default=this._validate(i.default,t)),s)switch(i.type){case"identity":this.getValue=this._buildIdentity(i,t);break;case"categorical":this.getValue=this._buildCategorical(i,t);break;default:this.getValue=l?this._buildInterpolate(i,t):this._buildInterval(i,t)}else this.getValue=this._buildIdentity(i,t);else s?this.getValue=l?this._buildZoomInterpolate(i):this._buildZoomInterval(i):(i=this._validate(i,t),this.getValue=this._buildSimple(i))}_validate(t,e){if("number"===e.type){if(t<e.minimum)return e.minimum;if(t>e.maximum)return e.maximum}return t}_buildSimple(t){return()=>t}_buildExpression(t,e){return(r,i)=>{try{let l=t.evaluate(i,r);return"color"===e.type&&(l=a._parseColor(l)),void 0===l?e.default:this._validate(l,e)}catch(t){return console.log(t.message),e.default}}}_buildIdentity(t,e){return(r,i)=>{let l;return i&&(l=i.values[t.property],"color"===e.type&&(l=a._parseColor(l))),void 0===l&&(l=t.default),void 0!==l?this._validate(l,e):e.default}}_buildCategorical(t,e){return(r,i)=>{let a;return i&&(a=i.values[t.property]),a=this._categorical(a,t.stops),void 0!==a?a:void 0!==t.default?t.default:e.default}}_buildInterval(t,e){return(r,i)=>{let a;return i&&(a=i.values[t.property]),"number"==typeof a?this._interval(a,t.stops):void 0!==t.default?t.default:e.default}}_buildInterpolate(t,e){return(r,i)=>{let a;return i&&(a=i.values[t.property]),"number"==typeof a?this._interpolate(a,t.stops,t.base||1):void 0!==t.default?t.default:e.default}}_buildZoomInterpolate(t){return e=>this._interpolate(e,t.stops,t.base||1)}_buildZoomInterval(t){return e=>this._interval(e,t.stops)}_categorical(t,e){const r=e.length;for(let i=0;i<r;i++)if(e[i][0]===t)return e[i][1]}_interval(t,e){const r=e.length;let i=0;for(let a=0;a<r&&e[a][0]<=t;a++)i=a;return e[i][1]}_interpolate(t,e,r){let a,l;const s=e.length;for(let r=0;r<s;r++){const i=e[r];if(!(i[0]<=t)){l=i;break}a=i}if(a&&l){const e=l[0]-a[0],s=t-a[0],o=1===r?s/e:(Math.pow(r,s)-1)/(Math.pow(r,e)-1);if(Array.isArray(a[1])){const t=a[1],e=l[1],r=[];for(let a=0;a<t.length;a++)r.push(i(t[a],e[a],o));return r}return i(a[1],l[1],o)}return a?a[1]:l?l[1]:void 0}static _isEmpty(t){for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}static _parseColor(e){if(Array.isArray(e))return e;if("string"==typeof e){const r=new t(e);return this._isEmpty(r)?void 0:t.toUnitRGBA(r)}return e&&e.default&&(e.default=a._parseColor(e.default)),e&&e.stops&&(e.stops=e.stops.map((t=>[t[0],a._parseColor(t[1])]))),e}}export default a;
