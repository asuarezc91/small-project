/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t,unwrap as s}from"../../../../core/maybe.js";import{createResolver as r}from"../../../../core/promiseUtils.js";import{create as i}from"../../../../geometry/support/aaBoundingRect.js";import o from"../../tiling/TileKey.js";import l from"../../tiling/TileCoverage.js";import{TiledDisplayObject as n}from"../webgl/TiledDisplayObject.js";import{WGLDrawPhase as a}from"../webgl/enums.js";import d from"../webgl/TileContainer.js";import{drawGridIndex as h,drawColliders as c}from"./decluttering/debugging.js";import{SymbolFader as y}from"./decluttering/SymbolFader.js";function u(e,t){if(e){const s=e.getLayoutProperty("visibility");if(!s||"none"!==s.getValue()&&(void 0===e.minzoom||e.minzoom<t+1e-6)&&(void 0===e.maxzoom||e.maxzoom>=t-1e-6))return!0}return!1}class p extends d{constructor(e){super(e),this._backgroundTiles=[],this._pointToCallbacks=new Map,this._fading=!1}destroy(){this.children.forEach((e=>e.destroy())),this.removeAllChildren(),this._spriteMosaic&&(this._spriteMosaic.dispose(),this._spriteMosaic=null),this._glyphMosaic&&(this._glyphMosaic.dispose(),this._glyphMosaic=null),e(this._symbolFader)&&(this._symbolFader.clear(),this._symbolFader=null),this._styleRepository=null,this._backgroundTiles=[],this._pointToCallbacks.clear()}setStyleResources(e,r,i){if(this._spriteMosaic=e,this._glyphMosaic=r,this._styleRepository=i,t(this._symbolFader)){const e=new y(this._styleRepository,this.children);e.on("fade-start",(()=>{this.emit("fade-start"),this._fading=!0,this.requestRender()})),e.on("fade-complete",(()=>{this.emit("fade-complete"),this._fading=!1,this.requestRender()})),this._symbolFader=e}s(this._symbolFader).styleRepository=i}deleteStyleLayers(t){e(this._symbolFader)&&this._symbolFader.deleteStyleLayers(t)}async hitTest(e,t){const s=[e,t],i=r();return this._pointToCallbacks.set(s,i),this.requestRender(),i.promise}enterTileInvalidation(){for(const e of this.children)e.invalidating=!0}createRenderParams(e){return{...super.createRenderParams(e),renderPass:null,styleLayer:null,styleLayerUID:-1,glyphMosaic:this._glyphMosaic,spriteMosaic:this._spriteMosaic,hasClipping:!!this._clippingInfos}}doRender(e){!this.visible||e.drawPhase!==a.MAP&&e.drawPhase!==a.DEBUG||void 0===this._spriteMosaic||super.doRender(e)}addChild(t){return super.addChild(t),e(this._symbolFader)?this._symbolFader.addTile(t):t.decluttered=!0,this.requestRender(),t}removeChild(t){return e(this._symbolFader)&&this._symbolFader.removeTile(t),this.requestRender(),super.removeChild(t)}renderChildren(e){if(e.drawPhase!==a.DEBUG){if(this._doRender(e),this._pointToCallbacks.size>0){const{context:t}=e,s=t.getBoundFramebufferObject();e.drawPhase=a.HITTEST;const r=e.painter.effects.hittest;r.bind(e),this._doRender(e),r.draw(e,this._pointToCallbacks),t.bindFramebuffer(s)}}else super.renderChildren(e)}removeAllChildren(){for(let t=0;t<this.children.length;t++){const s=this.children[t];e(this._symbolFader)&&this._symbolFader.removeTile(s),s.dispose()}super.removeAllChildren()}getStencilTarget(){return this.children.filter((e=>e.neededForCoverage&&e.hasData()))}restartDeclutter(){e(this._symbolFader)&&this._symbolFader.restartDeclutter()}_doRender(t){const{context:s}=t,r=this._styleRepository;if(!r)return;const i=r.layers;let o=!0;t.drawPhase===a.HITTEST&&(o=!1),r.backgroundBucketIds.length>0&&(t.renderPass="background",this._renderBackgroundLayers(t,r.backgroundBucketIds)),super.renderChildren(t);const l=this.children.filter((e=>e.visible&&e.hasData()));if(l&&0!==l.length){for(const e of l)e.triangleCount=0;s.setStencilWriteMask(0),s.setColorMask(!0,!0,!0,!0),s.setStencilOp(7680,7680,7681),s.setStencilTestEnabled(!0),s.setBlendingEnabled(!1),s.setDepthTestEnabled(!0),s.setDepthWriteEnabled(!0),s.setDepthFunction(515),s.setClearDepth(1),s.clear(s.gl.DEPTH_BUFFER_BIT),t.renderPass="opaque";for(let e=i.length-1;e>=0;e--)this._renderStyleLayer(i[e],t,l);s.setDepthWriteEnabled(!1),s.setBlendingEnabled(o),s.setBlendFunctionSeparate(1,771,1,771),t.renderPass="translucent";for(let e=0;e<i.length;e++)this._renderStyleLayer(i[e],t,l);s.setDepthTestEnabled(!1),t.renderPass="symbol";for(let e=0;e<i.length;e++)this._renderStyleLayer(i[e],t,l);if(s.bindVAO(),s.setStencilTestEnabled(!0),s.setBlendingEnabled(!0),t.drawPhase===a.MAP){this._fade(t.displayLevel,t.state);const s=window.COLLISION_DEBUG_CTX;if(s&&e(this._symbolFader)&&(s.clearRect(0,0,s.canvas.width,s.canvas.height),!this._fading||window.COLLISION_XRAY))for(const e of this.children)if(e.symbols){const t=[];if(e.symbols.forEach((e=>{t.push(...e)})),window.COLLISION_SHOW_GRID){var n,d,y;const e=null==(n=this._symbolFader)||null==(d=n._symbolDeclutterer)||null==(y=d._collisionJob)?void 0:y._gridIndex;e&&h(s,e)}c(s,t)}}}}_fade(t,s){e(this._symbolFader)&&(this._symbolFader.update(t,s)||this.requestRender())}_renderStyleLayer(e,t,s){const{painter:r,renderPass:i}=t;if(void 0===e)return;const o=e.getLayoutProperty("visibility");if(o&&"none"===o.getValue())return;let l;switch(e.type){case 0:return;case 1:if("opaque"!==i&&"translucent"!==t.renderPass)return;l="vtlFill";break;case 2:if("translucent"!==i)return;l="vtlLine";break;case 4:if("symbol"!==i)return;l="vtlCircle";break;case 3:if("symbol"!==i)return;l="vtlSymbol"}if(s=3===e.type?s.filter((e=>e.decluttered)):s.filter((e=>e.neededForCoverage)),"vtlSymbol"!==l){const r=t.displayLevel;if(0===s.length||void 0!==e.minzoom&&e.minzoom>=r+1e-6||void 0!==e.maxzoom&&e.maxzoom<r-1e-6)return}const n=e.uid;t.styleLayerUID=n,t.styleLayer=e;for(const e of s)if(e.layerData.has(n)){r.renderObjects(t,s,l);break}}_renderBackgroundLayers(t,s){const{context:r,displayLevel:d,painter:h,state:c}=t,y=this._styleRepository;let p=!1;for(const e of s)if(u(y.getLayerById(e),d)){p=!0;break}if(!p)return;const m=this._tileInfoView.getTileCoverage(t.state,0,"smallest"),{spans:f,lodInfo:_}=m,{level:b}=_,g=i(),T=[];if(this._renderPasses){const s=this._renderPasses[0];e(this._clippingInfos)&&(s.brushes[0].prepareState(t,this._clippingInfos[0]),s.brushes[0].drawMany(t,this._clippingInfos))}const v=this._backgroundTiles;let C,F=0;for(const{row:e,colFrom:t,colTo:s}of f)for(let r=t;r<=s;r++){if(F<v.length)C=v[F],C.key.set(b,e,_.normalizeCol(r),_.getWorldForColumn(r)),this._tileInfoView.getTileBounds(g,C.key,!1),C.bounds=g,C.coords[0]=g[0],C.coords[1]=g[3];else{const t=new o(b,e,_.normalizeCol(r),_.getWorldForColumn(r));C=new n(t,this._tileInfoView.getTileBounds(i(),t),[512,512],[4096,4096]),v.push(C)}C.setTransform(c,this._tileInfoView.getTileResolution(C.key)),T.push(C),F++}r.setStencilWriteMask(0),r.setColorMask(!0,!0,!0,!0),r.setStencilOp(7680,7680,7681),r.setStencilFunction(514,0,255);let w=!0;t.drawPhase===a.HITTEST&&(w=!1),r.setStencilTestEnabled(w);for(const e of s){const s=y.getLayerById(e);u(s,d)&&(t.styleLayerUID=s.uid,t.styleLayer=s,h.renderObjects(t,T,"vtlBackground"))}l.pool.release(m)}}export{p as VectorTileContainer};
