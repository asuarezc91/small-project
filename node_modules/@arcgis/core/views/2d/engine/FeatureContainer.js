/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{createResolver as e,all as t}from"../../../core/promiseUtils.js";import{create as r}from"../../../geometry/support/aaBoundingRect.js";import s from"../../../core/Queue.js";import{TileData as i}from"./webgl/TileData.js";import{WGLTile as o}from"./webgl/WGLTile.js";import{AttributeStoreView as a}from"./webgl/AttributeStoreView.js";import n from"./webgl/TileContainer.js";import{WGLRendererInfo as d}from"./webgl/WGLRendererInfo.js";class l extends n{constructor(e){super(e),this._rendererInfo=new d,this._materialItemsRequestQueue=new s,this.attributeView=new a}destroy(){this.removeAllChildren(),this.children.forEach((e=>e.destroy())),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(e,t,r){this._rendererInfo.setInfo(e,t,r),this.requestRender()}async getMaterialItems(t,r){if(!t||0===t.length)return null;const s=e();return this._materialItemsRequestQueue.push({items:t,abortOptions:r,resolver:s}),this.requestRender(),s.promise}onTileData(e,t){if(t.addOrUpdate&&"tileDisplayData"in t.addOrUpdate)e.setData(t);else{const r=t.addOrUpdate&&i.decode(t.addOrUpdate),s={...t,addOrUpdate:r};e.setData(s)}this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}doRender(e){if(e.context.capabilities.textureFloat,e.context.capabilities.vao,this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}super.doRender(e)}renderChildren(e){for(const t of this.children)t.commitChanges(e);this._rendererInfo.update(e.state),super.renderChildren(e)}createTile(e){const t=this._tileInfoView.getTileBounds(r(),e);return new o(e,t)}destroyTile(e){this.removeChild(e),e.destroy()}createRenderParams(e){return{...super.createRenderParams(e),rendererInfo:this._rendererInfo,attributeView:this.attributeView}}_processMaterialItemRequest(e,{items:r,abortOptions:s,resolver:i}){const{painter:o,pixelRatio:a}=e,n=r.map((e=>o.textureManager.rasterizeItem(e.symbol,a,e.glyphIds,s)));t(n).then((e=>{if(!this.stage)return void i.reject();const t=e.map(((e,t)=>({id:r[t].id,mosaicItem:e})));i.resolve(t)}),i.reject)}}export{l as FeatureContainer};
