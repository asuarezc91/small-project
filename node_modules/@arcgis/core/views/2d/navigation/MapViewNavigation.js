/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import n from"../../../core/Accessor.js";import e from"../../../geometry/Point.js";import s from"../../../Viewpoint.js";import{rotateBy as a,translateBy as r,padAndScaleAndRotateBy as c}from"../viewpointUtils.js";import m from"./ZoomBox.js";import p from"./actions/Pan.js";import h from"./actions/Pinch.js";import u from"./actions/Rotate.js";const l=new s({targetGeometry:new e}),v=[0,0];let w=class extends n{constructor(t){super(t),this._endTimer=null,this.animationManager=null}initialize(){this.pan=new p({navigation:this}),this.rotate=new u({navigation:this}),this.pinch=new h({navigation:this}),this.zoomBox=new m({view:this.view,navigation:this})}destroy(){this.zoomBox.destroy(),this.zoomBox=null,this.animationManager=null}begin(){this._set("interacting",!0)}end(){this._lastEventTimestamp=performance.now(),this._startTimer(250)}async zoom(t,i=this._getDefaultAnchor()){if(this.stop(),this.begin(),this.view.constraints.snapToZoom&&this.view.constraints.effectiveLODs)return t<1?this.zoomIn(i):this.zoomOut(i);this.setViewpoint(i,t,0,[0,0])}async zoomIn(t){const i=this.view,o=i.constraints.snapToNextScale(i.scale);return this._zoomToScale(o,t)}async zoomOut(t){const i=this.view,o=i.constraints.snapToPreviousScale(i.scale);return this._zoomToScale(o,t)}setViewpoint(t,i,o,n){this.begin(),this.view.state.viewpoint=this._scaleRotateTranslateViewpoint(this.view.viewpoint,t,i,o,n),this.end()}setViewpointImmediate(t,i=0,o=[0,0],n=this._getDefaultAnchor()){this.view.state.viewpoint=this._scaleRotateTranslateViewpoint(this.view.viewpoint,n,t,i,o)}continousRotateClockwise(){const t=this.get("view.viewpoint");this.animationManager.animateContinous(t,(t=>{a(t,t,-1)}))}continousRotateCounterclockwise(){const t=this.get("view.viewpoint");this.animationManager.animateContinous(t,(t=>{a(t,t,1)}))}resetRotation(){this.view.rotation=0}continousPanLeft(){this._continuousPan([-10,0])}continousPanRight(){this._continuousPan([10,0])}continousPanUp(){this._continuousPan([0,10])}continousPanDown(){this._continuousPan([0,-10])}stop(){this.pan.stopMomentumNavigation(),this.animationManager.stop(),this.end(),null!==this._endTimer&&(clearTimeout(this._endTimer),this._endTimer=null,this._set("interacting",!1))}_continuousPan(t){const i=this.get("view.viewpoint");this.animationManager.animateContinous(i,(i=>{r(i,i,t),this.view.constraints.constrainByGeometry(i)}))}_startTimer(t){return null!==this._endTimer||(this._endTimer=setTimeout((()=>{this._endTimer=null;const t=performance.now()-this._lastEventTimestamp;t<250?this._endTimer=this._startTimer(t):this._set("interacting",!1)}),t)),this._endTimer}_getDefaultAnchor(){const{size:t,padding:{left:i,right:o,top:n,bottom:e}}=this.view;return v[0]=.5*(t[0]-o+i),v[1]=.5*(t[1]-e+n),v}async _zoomToScale(t,i=this._getDefaultAnchor()){const{view:o}=this,{constraints:n,scale:e,viewpoint:s,size:a,padding:r}=o,m=n.canZoomInTo(t),p=n.canZoomOutTo(t);if(!(t<e&&!m||t>e&&!p))return c(l,s,t/e,0,i,a,r),n.constrainByGeometry(l),o.goTo(l,{animate:!0})}_scaleRotateTranslateViewpoint(t,i,o,n,e){const{view:s}=this,{size:a,padding:m,constraints:p,scale:h,viewpoint:u}=s,l=h*o,v=p.canZoomInTo(l),w=p.canZoomOutTo(l);return(o<1&&!v||o>1&&!w)&&(o=1),r(u,u,e),c(t,u,o,n,i,a,m),p.constrainByGeometry(t)}};t([i()],w.prototype,"animationManager",void 0),t([i({type:Boolean,readOnly:!0})],w.prototype,"interacting",void 0),t([i()],w.prototype,"pan",void 0),t([i()],w.prototype,"pinch",void 0),t([i()],w.prototype,"rotate",void 0),t([i()],w.prototype,"view",void 0),t([i()],w.prototype,"zoomBox",void 0),w=t([o("esri.views.2d.navigation.MapViewNavigation")],w);var g=w;export default g;
