/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../core/maybe.js";import r from"../../core/Error.js";function t(){return Promise.all([import("../webgl.js"),import("./mapViewDeps.js")])}const a=()=>t().then((()=>import("./layers/TileLayerView2D.js"))),s=()=>t().then((()=>import("./layers/FeatureLayerView2D.js"))),i={"base-dynamic":()=>t().then((()=>import("./layers/BaseDynamicLayerView2D.js"))),"base-tile":a,"bing-maps":a,csv:s,"geo-rss":()=>t().then((()=>import("./layers/GeoRSSLayerView2D.js"))),feature:s,geojson:s,graphics:()=>t().then((()=>import("./layers/GraphicsLayerView2D.js"))),group:()=>t().then((()=>import("./layers/GroupLayerView2D.js"))),imagery:()=>t().then((()=>import("./layers/ImageryLayerView2D.js"))),"imagery-tile":()=>t().then((()=>import("./layers/ImageryTileLayerView2D.js"))),kml:()=>t().then((()=>import("./layers/KMLLayerView2D.js"))),"map-image":()=>t().then((()=>import("./layers/MapImageLayerView2D.js"))),"map-notes":()=>t().then((()=>import("./layers/MapNotesLayerView2D.js"))),"ogc-feature":s,"open-street-map":a,route:()=>t().then((()=>import("./layers/RouteLayerView2D.js"))),stream:()=>t().then((()=>import("./layers/StreamLayerView2D.js"))),tile:a,"vector-tile":()=>t().then((()=>import("./layers/VectorTileLayerView2D.js"))),wcs:()=>t().then((()=>import("./layers/ImageryTileLayerView2D.js"))),"web-tile":a,wms:()=>t().then((()=>import("./layers/WMSLayerView2D.js"))),wmts:()=>t().then((()=>import("./layers/WMTSLayerView2D.js"))),"base-elevation":null,"building-scene":null,elevation:null,"integrated-mesh":null,"point-cloud":null,scene:null,unknown:null,unsupported:null};const o={hasLayerViewModule:r=>e(i[r.type]),importLayerView:t=>{const a=i[t.type];if(!e(a))throw function(e){const t=e.declaredClass?e.declaredClass.slice(e.declaredClass.lastIndexOf(".")+1):"Unknown",a=t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new r(`${a}:view-not-supported`,`${t} is not supported in 2D`)}(t);return a(t)}};export{o as layerView2DImporter};
