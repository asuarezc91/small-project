/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import o from"../../geometry/Point.js";import r from"../../geometry/Extent.js";import"../../geometry.js";import{t as n}from"../../chunks/common.js";import a from"../../Viewpoint.js";import{a as p}from"../../chunks/vec2f64.js";import{s as h,i as c,a as m,r as l,m as f}from"../../chunks/mat3.js";import{c as u,t as w}from"../../chunks/vec2.js";import{i as v,t as d,r as j,a as y}from"../../chunks/mat2d.js";import{c as R}from"../../chunks/mat2df64.js";import{copy as _,getMatrix as x,getResolution as z,getExtent as g,getTransform as S,getTransformNoRotation as k,getWorldScreenWidth as M}from"./viewpointUtils.js";import{c as N}from"../../chunks/mat2df32.js";import{c as T}from"../../chunks/mat3f32.js";import{f as D}from"../../chunks/vec2f32.js";import{isVec2 as V}from"../../core/libs/gl-matrix-2/types/vec2.js";var b;const E=[0,0];let G=b=class extends e{constructor(...t){super(...t),this._viewpoint2D={center:p(),rotation:0,scale:0,spatialReference:null},this.center=[0,0],this.extent=new r,this.id=0,this.inverseTransform=R(),this.resolution=0,this.rotation=0,this.scale=0,this.transform=R(),this.transformNoRotation=R(),this.displayMat3=T(),this.displayViewMat3=T(),this.viewMat3=T(),this.viewMat2d=N(),this.worldScreenWidth=0,this.size=[0,0]}set pixelRatio(t){this._set("pixelRatio",t),this._update()}set size(t){this._set("size",t),this._update()}set viewpoint(t){if(t){const s=this._viewpoint2D,i=t.targetGeometry;s.center[0]=i.x,s.center[1]=i.y,s.rotation=t.rotation,s.scale=t.scale,s.spatialReference=i.spatialReference}this._update()}copy(t){const s=this.size,i=this.viewpoint;return i&&s?(this.viewpoint=_(i,t.viewpoint),this._set("size",u(s,t.size))):(this.viewpoint=t.viewpoint.clone(),this._set("size",[t.size[0],t.size[1]])),this._set("pixelRatio",t.pixelRatio),this}clone(){return new b({size:this.size,viewpoint:this.viewpoint.clone(),pixelRatio:this.pixelRatio})}toMap(t,s,i){return V(s)?w(t,s,this.inverseTransform):(E[0]=s,E[1]=i,w(t,E,this.inverseTransform))}toScreen(t,s,i){return V(s)?w(t,s,this.transform):(E[0]=s,E[1]=i,w(t,E,this.transform))}toScreenNoRotation(t,s,i){return V(s)?w(t,s,this.transformNoRotation):(E[0]=s,E[1]=i,w(t,E,this.transformNoRotation))}getScreenTransform(t,s){const{center:i}=this._viewpoint2D,e=this._get("pixelRatio")||1,o=this._get("size");return x(t,i,o,s,0,e),t}_update(){const{center:t,spatialReference:s,scale:i,rotation:e}=this._viewpoint2D,r=this._get("pixelRatio")||1,p=this._get("size"),w=new a({targetGeometry:new o(t[0],t[1],s),scale:i,rotation:e});if(this._set("viewpoint",w),!p||!s||!i)return;this.resolution=z(w),this.rotation=e,this.scale=i,this.spatialReference=s,u(this.center,t);const R=0!==p[0]?2/p[0]:0,_=0!==p[1]?-2/p[1]:0;h(this.displayMat3,R,0,0,0,_,0,-1,1,1);const x=c(this.viewMat3),N=D(p[0]/2,p[1]/2),T=D(-p[0]/2,-p[1]/2),V=n(e);m(x,x,N),l(x,x,V),m(x,x,T),f(this.displayViewMat3,this.displayMat3,x);const b=v(this.viewMat2d);return d(b,b,N),j(b,b,V),d(b,b,T),g(this.extent,w,p),S(this.transform,w,p,r),y(this.inverseTransform,this.transform),k(this.transformNoRotation,w,p,r),this.worldScreenWidth=M(this.spatialReference,this.resolution),this._set("id",this.id+1),this}};t([s({readOnly:!0})],G.prototype,"id",void 0),t([s({value:1,json:{write:!0}})],G.prototype,"pixelRatio",null),t([s({json:{write:!0}})],G.prototype,"size",null),t([s({type:a,json:{write:!0}})],G.prototype,"viewpoint",null),G=b=t([i("esri.views.2d.ViewState")],G);var O=G;export default O;
