/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{getInfo as t}from"../../../geometry/support/spatialReferenceUtils.js";import r from"./TileKey.js";function o(t,r){return[t,r]}function i(t,r,o){return t[0]=r,t[1]=o,t}const e=new r("0/0/0/0");class s{constructor(t,r,o,i,e,s,n,l,h,a,u,m){this.level=t,this.resolution=r,this.scale=o,this.origin=i,this.first=e,this.last=s,this.size=n,this.norm=l,this.worldStart=h,this.worldEnd=a,this.worldSize=u,this.wrap=m}static create(r,e,n){const l=t(r.spatialReference),h=o(r.origin.x,r.origin.y),a=o(r.size[0]*e.resolution,r.size[1]*e.resolution),u=o(-1/0,-1/0),m=o(1/0,1/0),g=o(1/0,1/0);let w,d,c,f;return n&&(i(u,Math.max(0,Math.floor((n.xmin-h[0])/a[0])),Math.max(0,Math.floor((h[1]-n.ymax)/a[1]))),i(m,Math.max(0,Math.floor((n.xmax-h[0])/a[0])),Math.max(0,Math.floor((h[1]-n.ymin)/a[1]))),i(g,m[0]-u[0]+1,m[1]-u[1]+1)),r.isWrappable?(w=o(Math.ceil(Math.round((l.valid[1]-l.valid[0])/e.resolution)/r.size[0]),g[1]),d=o(Math.floor((l.origin[0]-h[0])/a[0]),u[1]),c=o(w[0]+d[0]-1,m[1]),f=!0):(d=u,c=m,w=g,f=!1),new s(e.level,e.resolution,e.scale,h,u,m,g,a,d,c,w,f)}normalizeCol(t){if(!this.wrap)return t;const r=this.worldSize[0];return t<0?r-1-Math.abs((t+1)%r):t%r}denormalizeCol(t,r){return this.wrap?this.worldSize[0]*r+t:t}getWorldForColumn(t){return this.wrap?Math.floor(t/this.worldSize[0]):0}getFirstColumnForWorld(t){return t*this.worldSize[0]+this.first[0]}getLastColumnForWorld(t){return t*this.worldSize[0]+this.first[0]+this.size[0]-1}getColumnForX(t){return(t-this.origin[0])/this.norm[0]}getXForColumn(t){return this.origin[0]+t*this.norm[0]}getRowForY(t){return(this.origin[1]-t)/this.norm[1]}getYForRow(t){return this.origin[1]-t*this.norm[1]}getTileBounds(t,r,o=!1){e.set(r);const i=o?e.col:this.denormalizeCol(e.col,e.world),s=e.row;return function(t,r,o,i,e){t[0]=r,t[1]=o,t[2]=i,t[3]=e}(t,this.getXForColumn(i),this.getYForRow(s+1),this.getXForColumn(i+1),this.getYForRow(s)),t}getTileCoords(t,r,o=!1){e.set(r);const s=o?e.col:this.denormalizeCol(e.col,e.world);return Array.isArray(t)?i(t,this.getXForColumn(s),this.getYForRow(e.row)):(t.x=this.getXForColumn(s),t.y=this.getYForRow(e.row)),t}}export default s;
