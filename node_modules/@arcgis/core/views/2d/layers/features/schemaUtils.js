/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../core/has.js";import{clone as t}from"../../../../core/lang.js";import{isSome as i,unwrapOr as r}from"../../../../core/maybe.js";import n from"../../../../core/Logger.js";import l from"../../../../core/Error.js";import{pt2px as s}from"../../../../core/screenUtils.js";import{f as a}from"../../../../chunks/symbols.js";import{createClusterRenderer as o}from"../support/clusterUtils.js";import{WGLGeometryType as u}from"../../engine/webgl/enums.js";import{createMaterialKey as d,hydrateMaterialKey as c}from"../../engine/webgl/materialKey/MaterialKey.js";import{getVVType as f}from"../../engine/webgl/Utils.js";import{getVVFlags as p}from"../../engine/webgl/util/vvFlagUtils.js";import{simplifyVisualVariables as m}from"./support/rendererUtils.js";import{toJSONGeometryType as y}from"../support/util.js";const g=n.getLogger("esri.views.2d.layers.features.schemaUtils"),b={esriGeometryPoint:["above-right","above-center","above-left","center-center","center-left","center-right","below-center","below-left","below-right"],esriGeometryPolygon:["always-horizontal"],esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};function h(e){return c(e)}function x(e){switch(e.type){case"line-marker":var t;return{type:"line-marker",color:null==(t=e.color)?void 0:t.toJSON(),placement:e.placement,style:e.style};default:return a(e.toJSON()).toJSON()}}function v(e,t,r){if(!e)return null;let n=0,l=!1;switch(i(t)&&"visualVariables"in t&&(n=p(t.visualVariables||[]),l="dot-density"===t.type),e.type){case"simple-fill":case"picture-fill":return function(e,t,i,r){const n=d(u.FILL,t,!1,i),l=r?h(n):n,s=e.clone(),a=s.outline;s.outline=null;const o=[],c={materialKey:l,hash:s.hash(),...x(s)};if(o.push(c),a){const e=d(u.LINE,t,!0,!1),i={materialKey:r?h(e):e,hash:a.hash(),...x(a)};o.push(i)}return{type:"composite-symbol",layers:o,hash:o.reduce(((e,t)=>t.hash+e),"")}}(e,n,l,r);case"simple-marker":case"picture-marker":return function(e,t,i){const r=d(u.MARKER,t,!1,!1),n=i?h(r):r,l=x(e);return{materialKey:n,hash:e.hash(),...l,angle:e.angle}}(e,n,r);case"simple-line":return function(e,t,i){const r=d(u.LINE,t,!1,!1),n=i?h(r):r,l=e.clone(),s=l.marker;l.marker=null;const a=[];if(a.push({materialKey:n,hash:l.hash(),...x(l)}),s){var o;const e=d(u.MARKER,t,!1,!1),r=i?h(e):e;s.color=null!=(o=s.color)?o:l.color,a.push({materialKey:r,hash:s.hash(),lineWidth:l.width,...x(s)})}return{type:"composite-symbol",layers:a,hash:a.reduce(((e,t)=>t.hash+e),"")}}(e,n,r);case"text":return function(e,t,i){const r=d(u.TEXT,t,!1,!1),n=i?h(r):r,l=x(e);return{materialKey:n,hash:e.hash(),...l,angle:e.angle}}(e,n,r);case"label":return function(e,t,i){const r=d(u.LABEL,t,!1,!1,e.labelPlacement);return{materialKey:i?h(r):r,hash:e.hash(),...e.toJSON(),labelPlacement:e.labelPlacement}}(e,n,r);case"cim":return{type:"cim",rendererKey:n,data:e.data};case"web-style":return{...x(e),type:"web-style",hash:e.hash(),rendererKey:n};default:throw new Error(`symbol not supported ${e.type}`)}}function w(e,i){const r=t(e);return r.some((e=>function(e,t){const i=e.labelPlacement,r=b[t];if(!e.symbol)return g.warn("No LabelClass symbol specified."),!0;if(!r)return g.error(new l("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${t} is not supported`)),!0;if(!r.some((e=>e===i))){const n=r[0];i&&g.warn(`Found invalid label placement type ${i} for ${t}. Defaulting to ${n}`),e.labelPlacement=n}return!1}(e,i)))?[]:r}function E(t){return e("esri-2d-update-debug")&&console.debug("Created new schema",I(t,!0)),I(t)}function I(e,t=!1){try{var i,r;const n=function(e,t=!1){const i=new Array;return i.push(function(e,t,i=!1){const r={indexCount:0,fields:{}},n="featureReduction"in e&&e.featureReduction,s=n?"aggregate":"feature";switch(e.renderer.type){case"heatmap":{const{blurRadius:t,fieldOffset:i,field:n}=e.renderer;return{type:"heatmap",aggregateFields:[],attributes:r,target:s,storage:null,mesh:{blurRadius:t,fieldOffset:i,field:z(r,{target:s,field:n,resultType:"numeric"}).field}}}default:{const t=[],a="aggregate"===s?o(t,e.renderer,n,null):e.renderer;R(r,t);const u=j(r,s,a,i),d=function(e,t,i){switch(i.type){case"dot-density":return function(e,t,i){if(!i||!i.length)return{type:"dot-density",mapping:[],target:t};return{type:"dot-density",mapping:i.map(((i,r)=>{const{field:n,fieldIndex:l}=z(e,{valueExpression:i.valueExpression,field:i.field,resultType:"numeric",target:t});return{binding:r,field:n,fieldIndex:l}})),target:t}}(e,t,i.attributes);case"simple":case"class-breaks":case"unique-value":return function(e,t,i){if(!i||!i.length)return{type:"visual-variable",mapping:[],target:t};const r={storage:!0},n="numeric";return{type:"visual-variable",mapping:m(i).map((i=>{var l;const s=f(i.type),{field:a,fieldIndex:o}=z(e,{target:t,valueExpression:i.valueExpression,field:i.field,context:r,resultType:n});switch(i.type){case"size":return"$view.scale"===i.valueExpression?null:{type:"size",binding:s,field:a,fieldIndex:o,normalizationField:z(e,{target:t,field:i.normalizationField,context:r,resultType:n}).field,valueRepresentation:null!=(l=i.valueRepresentation)?l:null};case"color":return{type:"color",binding:s,field:a,fieldIndex:o,normalizationField:z(e,{target:t,field:i.normalizationField,context:r,resultType:n}).field};case"opacity":return{type:"opacity",binding:s,field:a,fieldIndex:o,normalizationField:z(e,{target:t,field:i.normalizationField,context:r,resultType:n}).field};case"rotation":return{type:"rotation",binding:s,field:a,fieldIndex:o}}})).filter((e=>e)),target:t}}(e,t,i.visualVariables);case"heatmap":case"dictionary":return null}}(r,s,a),c=y(e.geometryType);let p=e.labelsVisible&&e.labelingInfo||[],g=[];if(n){if("selection"===n.type)throw new l("ValidationError","Mapview does not support `selection` reduction type",n);g=n&&n.labelsVisible&&n.labelingInfo||[]}p=w(p,c),g=w(g,c);let b=0;const h=[...p.map((e=>V(a,r,e,"feature",b++,i))),...g.map((e=>V(a,r,e,"aggregate",b++,i)))];return{type:"symbol",target:s,attributes:r,aggregateFields:t,storage:d,mesh:{matcher:u,labels:h}}}}}(e,t)),i}(e,t),a={};n.map((t=>function(e,t,i){switch(i.target){case"feature":return void T(e,S(t),i);case"aggregate":{const r=t.featureReduction;if("selection"===r.type)throw new l("ValidationError","Mapview does not support `selection` reduction type",r);return T(e,S(t),i),void function(e,t,i){e.aggregate||(e.aggregate={name:"aggregate",input:"feature",filters:null,attributes:{},params:{clusterRadius:s(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(s(t.clusterMaxSize)/64),fields:i.aggregateFields}});F(e.aggregate,i.attributes.fields)}(e,r,i)}}}(a,e,t)));return{source:{definitionExpression:e.definitionExpression,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:null==(i=e.historicMoment)?void 0:i.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:null==(r=e.timeExtent)?void 0:r.toJSON()},attributes:{fields:{},indexCount:0},processors:n,targets:a}}catch(e){if("ValidationError"===e.fieldName)return g.error(e),null;throw e}}function F(e,t){for(const i in t){const r=t[i];if(r.target!==e.name)continue;const n=e.attributes[i];n?(n.context.mesh=n.context.mesh||r.context.mesh,n.context.storage=n.context.storage||r.context.storage):e.attributes[i]=r}return e}function S(e){var t,i,r,n,l;return[null!=(t=null==(i=e.filter)?void 0:i.toJSON())?t:null,null!=(r=null==(n=e.effect)||null==(l=n.filter)?void 0:l.toJSON())?r:null]}function T(e,t,i){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),F(e.feature,i.attributes.fields),e}function z(e,t){return t.field?N(e,{...t,type:"field",field:t.field}):t.valueExpression?N(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:null,fieldIndex:null}}function N(e,t){switch(t.type){case"expression":{const i=t.valueExpression;if(!e.fields[i]){const r=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:r}}return{fieldIndex:e.fields[i].fieldIndex}}case"label-expression":{const i=JSON.stringify(t.label);if(!e.fields[i]){const r=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:r}}return{fieldIndex:e.fields[i].fieldIndex}}case"field":{const i=t.field;return"aggregate"===t.target&&e.fields[i]||(e.fields[i]={...t,name:i}),{field:i}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function V(e,t,i,r,n,l=!1){const s=N(t,{type:"label-expression",target:r,context:{mesh:!0},resultType:"string",label:{labelExpression:i.labelExpression,labelExpressionInfo:i.labelExpressionInfo?{expression:i.labelExpressionInfo.expression}:null,symbol:!!i.symbol,where:i.where}}),{fieldIndex:a}=s;return{...v(i,e,l),fieldIndex:a,target:r,index:n}}function R(e,t){const i={mesh:!0,storage:!0};for(const r of t){const{name:t,outStatistic:n}=r,{statisticType:l,onStatisticField:s}=n;let a=null,o=null,u=null;const d="numeric",c="feature";if("onStatisticValueExpression"in n){o=N(e,{type:"expression",target:c,valueExpression:n.onStatisticValueExpression,resultType:d}).fieldIndex}else if("onStatisticNormalizationField"in n){a=N(e,{type:"field",target:c,field:s,resultType:d}).field,u=n.onStatisticNormalizationField}else{a=N(e,{type:"field",target:c,field:s,resultType:d}).field}N(e,{type:"statistic",target:"aggregate",name:t,context:i,inField:a,inNormalizationField:u,inFieldIndex:o,statisticType:l})}}function j(e,t,i,n=!1){const s=r(e,{indexCount:0,fields:{}});switch(i.type){case"simple":case"dot-density":return function(e,t,i,r=!1){const n=t.getSymbols();return{type:"simple",symbol:v(n.length?n[0]:null,t,r),isDotDensity:i}}(0,i,"dot-density"===i.type,n);case"class-breaks":return function(e,t,i,r=!1){const n={mesh:!0,use:"renderer.field"},l=i.backgroundFillSymbol,{field:s,fieldIndex:a}=z(e,{target:t,field:i.field,valueExpression:i.valueExpression,resultType:"numeric",context:n}),o=i.normalizationType,u="log"===o?"esriNormalizeByLog":"percent-of-total"===o?"esriNormalizeByPercentOfTotal":"field"===o?"esriNormalizeByField":null,d=i.classBreakInfos.map((e=>({symbol:v(e.symbol,i,r),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:s,fieldIndex:a,backgroundFillSymbol:v(l,i,r),defaultSymbol:v(i.defaultSymbol,i,r),intervals:d,normalizationField:i.normalizationField,normalizationTotal:i.normalizationTotal,normalizationType:u,isMaxInclusive:i.isMaxInclusive}}(s,t,i,n);case"unique-value":return function(e,t,i,r=!1){const n=[],s=i.backgroundFillSymbol,a={target:t,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new l("ValidationError","Expected renderer.field to be a string",i);const{field:o,fieldIndex:u}=z(e,{...a,field:i.field,valueExpression:i.valueExpression});for(const e of i.uniqueValueInfos)n.push({value:""+e.value,symbol:v(e.symbol,i,r)});return{type:"map",attributes:e.fields,field:o,fieldIndex:u,field2:z(e,{...a,field:i.field2}).field,field3:z(e,{...a,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter,backgroundFillSymbol:v(s,i),defaultSymbol:v(i.defaultSymbol,i),map:n}}(s,t,i,n);case"dictionary":return function(e,t,i=!1){return{type:"dictionary",renderer:t.toJSON()}}(0,i,n)}}export{R as addAggregateFields,j as createMatcherSchema,E as createSchema,v as createSymbolSchema};
