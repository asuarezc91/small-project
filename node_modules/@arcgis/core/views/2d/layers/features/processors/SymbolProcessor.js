/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../core/has.js";import{andThen as r,unwrap as s,isNone as o,isSome as i}from"../../../../../core/maybe.js";import a from"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../../../../core/accessorSupport/decorators/subclass.js";import"../../../../../core/Error.js";import"../../../../../core/urlUtils.js";import"../../../../../core/uuid.js";import"../../../../../portal/support/resourceExtension.js";import{throwIfAborted as c,isAbortError as l}from"../../../../../core/promiseUtils.js";import m from"../../../../../geometry/SpatialReference.js";import{diff as p,hasDiff as d}from"../../../../../core/accessorSupport/diffUtils.js";import{COLLISION_EARLY_REJECT_BUCKET_SIZE as u}from"../../../engine/webgl/definitions.js";import{bidiText as h}from"../../../engine/webgl/util/BidiText.js";import{createMatcher as g}from"../../../engine/webgl/mesh/factories/matcherUtils.js";import{codepoints as y}from"../textUtils.js";import{WGLTemplateStore as f}from"../../../engine/webgl/mesh/templates/WGLTemplateStore.js";import{WGLMeshFactory as _}from"../../../engine/webgl/mesh/factories/WGLMeshFactory.js";import{isAggregateId as b}from"../support/AttributeStore.js";import{CollisionGrid as j}from"../../../engine/webgl/collisions/CollisionGrid.js";import w from"./BaseProcessor.js";a.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");let S=class extends w{constructor(){super(...arguments),this.type="symbol"}destroy(){}get supportsTileUpdates(){return!0}async update(e,r){const s=r.schema.processors[0];if("symbol"!==s.type)return;const o=p(this._schema,s);d(o,"mesh")&&(t("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",o),e.mesh=!0,e.why.mesh.push("Symbology changed"),this._schema=s,this._factory=this._createFactory(s),this._factory.update(s,this.tileStore.tileScheme.tileInfo))}onTileData(e,t,r){return c(r),this._onTileData(e,t,r)}onTileError(e,t,r){const s=r.signal,o={tileKey:e.id,error:t};return this.remoteClient.invoke("tileRenderer.onTileError",o,{signal:s})}_createFactory(e){const{geometryType:t,objectIdField:r,fields:s}=this.service,o={geometryType:t,fields:s,spatialReference:m.fromJSON(this.spatialReference)},i=new f(((e,t)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",e,t)),!1);return this._store=i,this._matcher=g(e.mesh.matcher,i,o),new _(t,r,i)}async _onTileData(e,t,o){const{type:i,addOrUpdate:a,remove:n,end:l}=t;if(!a){const t={type:i,addOrUpdate:null,remove:n,clear:!1,end:l};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},o)}const m=this._processFeatures(e,a,o),p=o.signal;try{const t=await m,o=r(t,(e=>e.message)),a=r(t,(e=>e.transferList))||[],d={type:i,addOrUpdate:o,remove:n,clear:!1,end:l},u={transferList:s(a)||[],signal:p};return c(u),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:d},u)}catch(t){this._handleError(e,t,o)}}async _processFeatures(e,t,r){if(o(t)||!t.hasFeatures)return null;const s={transform:e.transform,hasZ:!1,hasM:!1},i=this._factory,a={viewingMode:"",scale:e.scale},n=await this._matcher;c(r);const l=this._getLabelInfos(e,t);return await i.analyze(t.getCursor(),n,s,a),c(r),this._writeFeatureSet(e,t,s,l,i)}_writeFeatureSet(e,t,r,s,o){const a=o.createMeshData(t.getApproximateSize()),n={viewingMode:"",scale:e.scale},c=t.getCursor();for(;c.next();)try{const t=c.getDisplayId(),l=i(s)?s.get(t):null;o.writeCursor(a,c,r,n,e.level,l)}catch(e){}return this._encodeDisplayData(a)}_encodeDisplayData(e){const t={},r=new Array;return e.encode(t,r),{message:t,transferList:r}}_handleError(e,t,r){if(!l(t)){const s={tileKey:e.id,error:t.message};return this.remoteClient.invoke("tileRenderer.onTileError",s,{signal:r.signal})}}_shouldDiscard(e,t){switch(this.service.geometryType){case"esriGeometryPoint":{const r=t.readLegacyPointGeometry();return!r||e.checkOverlap(r.x,r.y)}case"esriGeometryPolygon":{const r=t.readLegacyCentroid();return!r||e.checkOverlap(r.x,r.y)}default:return!1}}_markUsed(e,t){switch(this.service.geometryType){case"esriGeometryPoint":{const{x:r,y:s}=t.readLegacyPointGeometry();return e.markUsed(r,s)}case"esriGeometryPolygon":{const{x:r,y:s}=t.readLegacyCentroid();return e.markUsed(r,s)}}}_getLabelInfos(e,t){const s=this._schema.mesh.labels,i=r(s,(t=>t.filter((t=>function(e,t){return(!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}(t,e.scale)))));if(o(i)||0===i.length)return null;const a=new Map,n=new j(u),c=t.getCursor();for(;c.next();){const e=c.getDisplayId();if(this._shouldDiscard(n,c)){a.has(e)||a.set(e,null);continue}let t=!1;const r=[],s=b(e),o=s&&1!==c.readAttribute("cluster_count")?"aggregate":"feature";for(const a of i){if(a.target!==o)continue;const i=c.getStorage(),n=s&&"feature"===o?i.getComputedStringAtIndex(c.readAttribute("referenceId"),a.fieldIndex):i.getComputedStringAtIndex(e,a.fieldIndex);if(!n)continue;const l=h(n.toString()),m=l[0],p=l[1];this._store.getMosaicItem(a.symbol,y(m)).then((e=>{r[a.index]={glyphs:e.glyphMosaicItems,rtl:p,index:a.index}})),t=!0}a.set(e,r),t&&this._markUsed(n,c)}return a}};S=e([n("esri.views.2d.layers.features.processors.SymbolProcessor")],S);var x=S;export default x;
