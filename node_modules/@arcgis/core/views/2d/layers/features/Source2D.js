/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../core/has.js";import{isSome as t,andThen as s,isNone as i}from"../../../../core/maybe.js";import{all as r}from"../../../../core/promiseUtils.js";import o from"../../../../TimeExtent.js";import{diff as n,hasDiff as a,hasDiffAny as u}from"../../../../core/accessorSupport/diffUtils.js";import l from"../../../../tasks/support/Query.js";import{TILE_SIZE as h}from"../../engine/webgl/definitions.js";import{createSource as d}from"./sources/createSource.js";import{getPow2NeighborTile as c}from"./support/tileUtils.js";import{UpdateToken as p}from"./support/UpdateToken.js";let f=0;class _{constructor(e,t){this.didSend=!1,this.dataTileCount=0,this.update=p.all(),this._abortController=new AbortController,this.invalid=!1,this.displayTile=e,this._pixelBuffer=t,this.partitions=m(e,t)}setUpdate(e,t){this.update=e,this.dataTileCount=0,t!==this._pixelBuffer&&(this._pixelBuffer=t,this.partitions=m(this.displayTile,t)),e.mesh&&(this.didSend=!1)}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class y{constructor(e,t,s){this.resolved=!1,this.tile=t,this.offset=e,this.extent=s}reset(){this.resolved=!1}}function m(e,t){const s=[];if(s.push(new y([0,0],e,null)),0===t)return s;const i=Math.min(t,h),r=h;return s.push(new y([-r,-r],c(e,-1,-1),[r-i,r-i,r,r])),s.push(new y([0,-r],c(e,0,-1),[0,r-i,r,r])),s.push(new y([r,-r],c(e,1,-1),[0,r-i,i,r])),s.push(new y([-r,0],c(e,-1,0),[r-i,0,r,r])),s.push(new y([r,0],c(e,1,0),[0,0,i,r])),s.push(new y([-r,r],c(e,-1,1),[r-i,0,r,i])),s.push(new y([0,r],c(e,0,1),[0,0,r,i])),s.push(new y([r,r],c(e,1,1),[0,0,i,i])),s}class b{constructor(e,t,s){this.type="remote",this._pendingEdits=new Set,this._queryInfo=null,this._subscriptions={display:new Map},this._invalid={outFields:!1,queryFilterParameters:!1};const i=this._onDataTileRequest.bind(this);this._source=d(e,t,s,i,(()=>this.canAcceptPatch())),this._serviceInfo=e,this._geometryType=e.geometryType,this._outSR=t}destroy(){this._getSubscriptions().map((({displayTile:e})=>this.unsubscribe(e))),this._source.destroy()}get updating(){return this._source.updating||this._getSubscriptions().some((e=>!e.didSend))}get isStream(){return"geoevent"===this._source.type}get sourceEvents(){return"geoevent"===this._source.type?{type:"geoevent",events:this._source.events}:{type:"feature",events:this._source.events}}enableEvent(e,t){this._source.enableEvent(e,t)}setViewState(e){this._source.setViewState(e)}update(t,s){var i,r,l,h;const d=this._serviceInfo.fields.length,c=null!=(i=null==(r=this._schema)?void 0:r.outFields)?i:[],p=null!=(l=null==(h=this._schema)?void 0:h.pixelBuffer)?l:0,f=s.outFields.filter((e=>-1===c.indexOf(e))),_=[...c,...f],y=0===s.pixelBuffer?0:Math.max(s.pixelBuffer,p);s.pixelBuffer=y,s.outFields=_.length>=.75*d?["*"]:_,s.outFields.sort();const m=n(this._schema,s);if(this._subscriptions.display.forEach((e=>{e.invalid&&(t.queryFilter=!0)})),!m)return;const b=this._schema&&a(m,"outFields"),g=this._schema&&a(m,"pixelBuffer"),v=this._schema&&u(m,["definitionExpression","gdbVersion","historicMoment"]);e("esri-2d-update-debug")&&console.debug("Applying Update - Source:",m);const w={returnCentroid:"esriGeometryPolygon"===this._geometryType,returnGeometry:!0,outFields:s.outFields,outSpatialReference:this._outSR,orderByFields:[`${this._serviceInfo.objectIdField} ASC`],where:s.definitionExpression||"1=1",gdbVersion:s.gdbVersion,historicMoment:s.historicMoment?new Date(s.historicMoment):null,timeExtent:o.fromJSON(s.timeExtent)};t.source=!0,g&&(t.why.mesh.push("Pixel buffer changed"),t.mesh=!0),v&&(t.why.mesh.push("Layer filter changed"),t.why.source.push("Layer filter changed"),t.mesh=!0,t.queryFilter=!0,this._invalid.queryFilterParameters=!0),b&&(t.why.source.push("Layer required fields changed"),this._invalid.outFields=!0),this._schema=s,this._source.update(w),this._queryInfo=w}subscribe(e){this._subscriptions.display.has(e.id)||this._subscribeDisplayTile(e)}unsubscribe(e){if(!this._subscriptions.display.has(e.id))return;const t=this._subscriptions.display.get(e.id);this._subscriptions.display.delete(e.id),this._source.unsubscribe(e),t.abort()}forEachRequest(e,t){this._source.forEachRequest(e,t)}query(e){return this._source.query(e)}createQuery(){return new l({...this._queryInfo})}createTileQuery(e){if("stream"===this._serviceInfo.type)throw new Error("Service does not support tile  queries");const t=this.createQuery();return t.quantizationParameters=e.getQuantizationParameters(),t.resultType="tile",t.geometry=e.extent,"esriGeometryPolyline"===this._serviceInfo.geometryType&&(t.maxAllowableOffset=e.resolution),this._serviceInfo.capabilities.query.supportsQuantization||(t.quantizationParameters=null,t.maxAllowableOffset=e.resolution),t}invalidate(){this._subscriptions.display.forEach((e=>e.invalid=!0))}forEachPendingEdit(e){this._getSubscriptions().some((({invalid:e})=>e))?this._pendingEdits.forEach(e):this._pendingEdits.clear()}async onEdits(e){const t=e.addedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),s=e.updatedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),i=e.deletedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),o=[...t,...s];i.forEach((e=>{this._pendingEdits.has(e)&&this._pendingEdits.delete(e)})),o.forEach((e=>this._pendingEdits.add(e)));const n=this._getSubscriptions().map((({displayTile:e})=>e)).map((e=>{const t=this.createTileQuery(e);return t.objectIds=o,{tile:e,query:t}})).map((async({tile:e,query:t})=>({tile:e,result:await this._source.query(t)})));(await r(n)).forEach((({tile:e,result:t})=>{const r=this._subscriptions.display.get(e.key.id);if(!r)return;const o=r.signal,n=p.all();this.onDisplayTilePatch({type:"update",id:e.key.id,version:f++,update:n,addOrUpdate:t,remove:[...s,...i],end:!0,noData:!1},{signal:o})})),this.invalidate()}async resubscribe(e,t=!1){const s=this._schema.pixelBuffer;this._subscriptions.display.forEach((t=>t.setUpdate(e,s)));let i=!1;if(this._subscriptions.display.forEach((e=>{e.invalid&&(i=!0)})),this._invalid.outFields&&(this._invalid.outFields=!1),t||this._invalid.queryFilterParameters||i){const e=this._getSubscriptions().map((({displayTile:e})=>e));e.forEach((e=>this.unsubscribe(e))),e.forEach((e=>this.subscribe(e))),this._source.resume(),this._invalid.queryFilterParameters=!1}else e.mesh?await this._source.resend({dataTileOnly:!1}):await this._source.resend({dataTileOnly:!0})}pause(){this._source.pause()}resume(){this._source.resume()}_getSubscriptions(){const e=[];return this._subscriptions.display.forEach((t=>{e.push(t)})),e}_subscribeDisplayTile(e){const s=new _(e,this._schema.pixelBuffer);this._subscriptions.display.set(e.id,s),this._source.subscribe(e);for(const i of s.partitions){const s=i.tile,r=this._source.get(s.id);if(t(r))for(const t of r.requests.done)this._onPartitionMessage(e.id,i,t.request,"new")}}_onDataTileRequest(e,t,s){const i=this._subscriptions.display.get(e.id);if(s&&s.dataTileOnly){for(const s of i.partitions)if(s.tile.id===e.id){this._onPartitionMessage(e.id,s,e,t);break}}else{for(const s of i.partitions)if(s.tile.id===e.id){this._onPartitionMessage(e.id,s,e,t);break}this._subscriptions.display.forEach(((s,i)=>{if(i!==e.id)for(const r of s.partitions)if(r.tile.id===e.id){this._onPartitionMessage(i,r,e,t);break}}))}}_onPartitionMessage(e,r,o,n){const a=s(o.features,(e=>function(e,t){if(i(t.extent))return e;const{offset:s,extent:r}=t,[o,n,a,u]=r,[l,h]=s;return e.extent(o,n,a,u).transform(l,h)}(e,r))),u=this._subscriptions.display.get(e),l=u.signal;let h=u.update;u.didSend||(n="replace"),t(a)&&!a.seen&&(h=p.all(),a.seen=!0);let d=!1;o.end&&(r.resolved=!0,d=e===r.tile.id),u.didSend=!0,this.onDisplayTilePatch({type:n,id:e,version:f++,update:h,addOrUpdate:a,remove:o.remove||[],noData:o.noData,end:d},{signal:l})}}export{b as Source2D};
