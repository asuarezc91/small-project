/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../../core/Logger.js";import t from"../../../../../core/Error.js";import{isAbortError as r,throwIfAborted as s,throwIfNotAbortError as i}from"../../../../../core/promiseUtils.js";import{BaseFeatureSource as o}from"./BaseFeatureSource.js";const n=e.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class u extends o{constructor(e){super(e)}async _fetchDataTile(e){const i=this._subscriptions.get(e.key.id);let o=!1,u=0,a=0;const c=(t,r)=>{a--,s(i);const n=t.reader,u=t.query;if(!n.exceededTransferLimit){if(o=!0,0!==r&&!n.hasFeatures){const t={tile:e,id:e.id,features:n,end:0===a};return i.requests.done.push({request:t,query:u}),void this._onRequest(t,"new")}const t={tile:e,id:e.id,features:n,end:0===a};return i.requests.done.push({request:t,query:u}),void this._onRequest(t,"new")}const c={tile:e,id:e.id,features:n,end:o&&0===a};i.requests.done.push({request:c,query:u}),this._onRequest(c,"new")};let d=0,h=0;for(;!o&&h++<20;){let h;for(let s=0;s<d+1;s++){const s=u++;a++,h=this._fetchDataTilePage(e,s,i).then((e=>e&&c(e,s))).catch((s=>{o=!0,r(s)||(n.error(new t("mapview-query-error","Encountered error when fetching tile",{tile:e,error:s})),this._onRequest({tile:e,id:e.id,features:null,end:o},"new"))}))}await h,s(i),d=Math.min(d+2,6)}}async _fetchDataTilePage(e,t,r){const o=this._sourceQueryInfo,n=this._createQuery(e,{start:8e3*t,num:8e3,maxRecordCountFactor:3,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()});try{const i=r.signal,u=await this._queue.push({tile:e,query:n,signal:i,depth:t});return s(r),u?o!==this._sourceQueryInfo?this._fetchDataTilePage(e,t,r):{reader:u,query:n}:null}catch(e){return i(e),null}}}export{u as PagedFeatureSource};
