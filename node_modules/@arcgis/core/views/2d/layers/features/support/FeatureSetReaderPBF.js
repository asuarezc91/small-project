/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../../core/Logger.js";import t from"../../../../../core/Error.js";import r from"../../../../../layers/graphics/OptimizedFeature.js";import s from"../../../../../layers/graphics/OptimizedGeometry.js";import{convertToGeometry as i,unquantizeOptimizedGeometry as a}from"../../../../../layers/graphics/featureConversionUtils.js";import{FeatureSetReader as n}from"./FeatureSetReader.js";import h from"../../../../../core/pbf.js";import{parseHeader as o}from"./FeatureSetReaderPBFHeader.js";const d=e.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF");function u(e){for(;e.next();)switch(e.tag()){case 1:return e.getMessage();default:e.skip()}return null}class c extends n{constructor(e,t,r,s){super(e),this._hasNext=!1,this._isPoints=!1,this._isPolygons=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=s,this._reader=t,this._header=r,this._hasNext=r.hasFeatures,this._isPoints="esriGeometryPoint"===s,this._isPolygons="esriGeometryPolygon"===s}static fromBuffer(e,r){const s=function(e){try{const t=2,r=new h(new Uint8Array(e),new DataView(e));for(;r.next();)switch(r.tag()){case t:return u(r.getMessage());default:r.skip()}}catch(e){const r=new t("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});d.error(r)}return null}(e),i=o(s,"esriGeometryPoint"===r),a=n.createInstance();return new c(a,s,i,r)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getApproximateSize(){if(this._hasFilter){const e=Math.abs(this._xmax-this._xmin)*Math.abs(this._ymax-this._ymin),t=this.size*e/262144;return Math.max(Math.round(t),0)}return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fieldIndexMap.forEach((t=>{e+=this._readAttributeAtIndex(t)+"."})),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){var e;const t=this.readCentroid(),r={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:null!=(e=t&&{x:t.coords[0],y:t.coords[1]})?e:null};return this._cache.legacyFeature=r,r}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new r(this.readGeometry(),this.readAttributes(),this.readCentroid());return this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrate(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return e*t.scale[0]+t.translate[0]}getYHydrate(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return t.translate[1]-e*t.scale[1]}readLegacyPointGeometry(){return{x:this._header.centroid[2*this._featureIndex]+this._tx,y:this._header.centroid[2*this._featureIndex+1]+this._ty}}readLegacyGeometry(){const e=this.readGeometry();return i(e,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,r]=e.coords;return{x:t,y:r}}readGeometryArea(){return this._cache.area||this.readGeometry(),this._cache.area}readUnquantizedGeometry(){if(void 0===this._cache.unquantGeometry){const e=this.readGeometry();if(!e)return this._cache.unquantGeometry=null,null;const t=e.clone(),r=t.lengths,s=t.coords;for(let e=0,t=2;e<r.length;e++,t+=2){const i=r[e];for(let e=1;e<i;e+=1,t+=2)s[t]+=s[t-2],s[t+1]+=s[t-1]}return this._cache.unquantGeometry=t,t}return this._cache.unquantGeometry}readHydratedGeometry(){const e=this.readGeometry();if(!e)return null;const t=e.clone();return this._isPoints&&(t.coords[0]-=this._tx,t.coords[1]-=this._ty),a(t,t,this.hasZ,this.hasM,this.getQuantizationTransform()),t}readGeometry(){if(void 0===this._cache.geometry){let e=null;if(this._isPoints){const t=this._header.centroid[2*this._featureIndex]+this._tx,r=this._header.centroid[2*this._featureIndex+1]+this._ty;e=new s([],[t,r])}else{const t=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===t)return null;r.move(t);try{e=this._parseGeometry(r)}catch(e){return console.error("Failed to parse geometry!",e),null}}return this._cache.geometry=e,e}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,r=this._header.centroid[2*this._featureIndex+1]+this._ty;return 268435455===t?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new s([],[t,r]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new c(this.instance,e,this._header,this.geometryType);return this.copyInto(t),t}next(){if(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,!this._hasFilter)return++this._featureIndex<this.size;for(;++this._featureIndex<this.size&&!this._passesFilter(););return this._featureIndex<this.size}_readAttribute(e,t){const r=this._header.hasFieldIndex(e)?e:function(e){return e.toLowerCase().trim()}(e),s=this._header.getFieldIndex(r);if(null==s)return;const i=this._readAttributeAtIndex(s);if(!t)return i;return this._header.isDateField(r)?new Date(i):i}_readAttributes(){const e={};return this._header.fieldIndexMap.forEach(((t,r)=>{e[r]=this._readAttributeAtIndex(t)})),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_passesFilter(){if(!this._hasFilter)return!0;let e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];if(268435455===e){if(this._isPolygons&&!this.readCentroid())return!1;e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1]}return e>=this._xmin&&e<=this._xmax&&t>=this._ymin&&t<=this._ymax}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;return r.move(t),function(e){const t=e.getLength(),r=e.pos()+t;for(;e.pos()<r&&e.next();)switch(e.tag()){case 1:{const t=e.getString();return""===t?null:t}case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(r)}_preprocessPolygon(e,t){let r=0,i=0,a=0,n=!1,h=!1,o=!1,d=-1;const u=[];let c=0,_=!1;for(let s=0;s<t.length;s++){const f=t[s];let l=e[2*r],g=e[2*r+1],y=0;for(let t=1;t<f;t++){const s=l,i=g,a=l+e[2*(r+t)],n=g+e[2*(r+t)+1];l=a,g=n,y+=.5*((a-s)*(n+i))}const m=y>0;if(m&&_&&(i+=f),m||(d++,_=!1),d>=1e6)break;c+=y,n&&m&&h&&(o=!0);{e[2*a]=e[2*i],e[2*a+++1]=e[2*i+++1];let t=1,r=e[2*i],s=e[2*i+++1];for(let n=2;n<f;n++){const n=e[2*i],h=e[2*i+++1];r*h-n*s==0?(r+=n,s+=h):(e[2*a]=r,e[2*a+++1]=s,t++,r=n,s=h)}e[2*a]=r,e[2*a+++1]=s,t++,u.push(t)}n=!1,h=!0,r+=f}return u.length?(this._cache.area=Math.abs(c),new s(u,e,o)):null}_parseGeometry(e){const t=e.getLength(),r=e.pos()+t,i=[],a=[];for(;e.pos()<r&&e.next();)switch(e.tag()){case 2:{const t=e.getUInt32(),r=e.pos()+t;for(;e.pos()<r;)a.push(e.getUInt32());break}case 3:{const t=e.getUInt32(),r=e.pos()+t;for(;e.pos()<r;)i.push(e.getSInt32()),i.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}case 1:default:e.skip()}let n=0;for(const e of a)i[2*n]+=this._tx,i[2*n+1]+=this._ty,n+=e;return this._isPolygons?this._preprocessPolygon(i,a):new s(a,i)}}export{c as FeatureSetReaderPBF};
