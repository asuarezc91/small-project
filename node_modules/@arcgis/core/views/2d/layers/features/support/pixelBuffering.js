/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{all as t}from"../../../../../core/promiseUtils.js";import{pt2px as e}from"../../../../../core/screenUtils.js";import{AVERAGE_GLYPH_MOSAIC_ITEM as r}from"../../../engine/webgl/definitions.js";import i from"../../../../../symbols/cim/Rect.js";import{CIMSymbolHelper as n}from"../../../../../symbols/cim/CIMSymbolHelper.js";import{getTextSymbolSize as s}from"../../graphics/graphicsUtils.js";const o={"simple-marker":1,"picture-marker":1,text:0,"simple-line":0,"simple-fill":0,"picture-fill":0,cim:1,"web-style":1};async function a(r,i,n){if(!r||n&&"cluster"===n.type)return 0;if("heatmap"===r.type)return Math.round(3*r.blurRadius);if("dot-density"===r.type)return 0;if("dictionary"===r.type)return"esriGeometryPoint"===i||"esriGeometryMultipoint"===i?100:200;const s=r.getSymbols(),o=function(t){if(!("visualVariables"in t))return 0;if(!t.hasVisualVariables("size"))return 0;const e=t.getVisualVariablesForType("size");if(!e[0])return 0;const r=e[0];return"stops"===r.transformationType?r.stops.map((t=>t.size)).reduce(h,0):"clamped-linear"===r.transformationType?"number"==typeof r.maxSize?r.maxSize:r.maxSize.stops.map((t=>t.size)).reduce(h,0):"real-world-size"===r.transformationType?30:void 0}(r),a=[];for(const t of s)a.push(l(t,o));const c=await t(a);return e(c.reduce(h,0))}const c=[0,0,0,0];function m(t,e){return null==t?e:t}const u={sdf:!0,code:99,metrics:r.metrics,rect:new i(0,0,24,24),page:0,textureBinding:2};async function p(t,e){if("simple-marker"===t.type){const r=Math.max(m(t.size,12),e);return f(t)+.707*r}if("picture-marker"===t.type){const r=Math.max(m(t.height,12),e),i=m(t.width,12)*(r/m(t.height,12))/2,n=r/2;return f(t)+Math.sqrt(i*i+n*n)}if("text"===t.type){const e=function(t){const e=t.text&&t.text.length;if(!e)return{glyphMosaicItems:[u]};const r=[];for(let i=0;i<e;i++)r.push({...u,code:t.text.charCodeAt(i)});return{glyphMosaicItems:r}}(t);s(c,t.toJSON(),e);const r=Math.abs(c[0]),i=Math.abs(c[1]),n=c[2],o=c[3];return Math.max(r,i)+Math.max(n,o)}if("simple-line"===t.type){const r=t,i=Math.max(m(r.width,.75),e)/2;return r.marker?Math.max(6*r.width,2*e):i}if("simple-fill"===t.type||"picture-fill"===t.type)return Math.max(function(t,e){return null==t.outline?e:m(t.outline.width,e)}(t,0),e)/2;if("cim"===t.type){const e=n.getEnvelope(t.data);return e?Math.sqrt(e.width*e.width+e.height*e.height):0}return"web-style"===t.type?p(await t.fetchCIMSymbol(),e):0}async function l(t,e){return function(t){return t.type in o}(t)?Math.min(await p(t,e),75):0}function f(t){const e=m(t.xoffset,0),r=m(t.yoffset,0);return Math.sqrt(e*e+r*r)}function h(t,e){return Math.max(t,e)}export{a as computePxBuffer};
