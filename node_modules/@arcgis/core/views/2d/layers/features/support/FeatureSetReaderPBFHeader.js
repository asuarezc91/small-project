/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../../core/Error.js";import{parseTransform as t,parseFieldType as s}from"../../../../../tasks/operations/pbfFeatureServiceParser.js";class r{constructor(){this.hasFeatures=!1,this.fieldIndexMap=new Map,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.dateFields=new Set,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasFieldIndex(e){return this.fieldIndexMap.has(e)}isDateField(e){return this.dateFields.has(e)}getFieldIndex(e){return this.fieldIndexMap.get(e)}}function n(e){const t=e.getLength(),r=e.pos()+t,n={name:"",isDate:!1};for(;e.pos()<r&&e.next();)switch(e.tag()){case 1:n.name=e.getString();break;case 2:"esriFieldTypeDate"===s(e.getEnum())&&(n.isDate=!0);break;default:e.skip()}return n}function a(s,a){const i=s.pos(),o=new r;let d=0,c=0;let f=null,g=null,l=null,u=!1;for(;s.next();)switch(s.tag()){case 1:f=s.getString();break;case 3:g=s.getString();break;case 12:l=s.processMessage(t);break;case 9:o.exceededTransferLimit=s.getBool(),o.exceededTransferLimit&&(o.offsets.geometry=new Int32Array(8e3),o.centroid=new Int32Array(16e3));break;case 13:{const e=n(s),t=e.name.toLowerCase().trim(),r=d++;o.fieldIndexMap.set(e.name,r),o.fieldIndexMap.set(t,r),e.isDate&&(o.dateFields.add(e.name),o.dateFields.add(t));break}case 15:{const e=s.getLength(),t=s.pos()+e;if(!o.exceededTransferLimit){const e=o.offsets.geometry,t=o.centroid;e.push(0),t.push(268435455),t.push(268435455)}!u&&o.exceededTransferLimit&&(u=!0,o.offsets.attributes=new Uint32Array(8e3*d));let r=c*d;for(;s.pos()<t&&s.next();)switch(s.tag()){case 1:{if(u)o.offsets.attributes[r++]=s.pos();else{o.offsets.attributes.push(s.pos())}const e=s.getLength();s.skipLen(e);break}case 2:if(a){const e=s.getLength(),t=s.pos()+e;for(;s.pos()<t&&s.next();)switch(s.tag()){case 3:{s.getUInt32();const e=s.getSInt32(),t=s.getSInt32();o.centroid[2*c]=e,o.centroid[2*c+1]=t;break}default:s.skip()}}else{o.offsets.geometry[c]=s.pos();const e=s.getLength();s.skipLen(e)}break;case 4:{const e=s.getLength(),t=s.pos()+e;for(;s.pos()<t&&s.next();)switch(s.tag()){case 3:{s.getUInt32();const e=s.getSInt32(),t=s.getSInt32();o.centroid[2*c]=e,o.centroid[2*c+1]=t;break}default:s.skip()}break}default:s.skip()}c++,o.hasFeatures=!0;break}default:s.skip()}const p=f||g;if(!p)throw new e("FeatureSet has no objectId or globalId field name");return o.featureCount=c,o.fieldCount=d,o.objectIdFieldIndex=o.getFieldIndex(p),o.transform=l,o.displayIds=new Uint32Array(o.featureCount),o.groupIds=new Uint16Array(o.featureCount),s.move(i),o}export{r as FeatureSetHeader,a as parseHeader};
