/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{resolve as t,all as o,create as r}from"../../../core/promiseUtils.js";import{schedule as l}from"../../../core/scheduling.js";import{canProject as a,project as n}from"../../../geometry/support/webMercatorUtils.js";import h from"../../../geometry/Extent.js";import p from"../../../core/Collection.js";import c from"../../../request.js";import m from"../../../core/Handles.js";import{whenTrueOnce as d}from"../../../core/watchUtils.js";import{GraphicsCollection as y}from"../../../support/GraphicsCollection.js";import{fetchService as w,parseKML as _,getGraphics as g}from"../../../layers/support/kmlUtils.js";import u from"../../layers/LayerView.js";import V from"./graphics/GraphicsView2D.js";import{Bitmap as f}from"../engine/Bitmap.js";import{BitmapContainer as v}from"../engine/BitmapContainer.js";import{LayerView2DMixin as b}from"./LayerView2D.js";let C=class extends(b(u)){constructor(){super(...arguments),this._handles=new m,this._bitmapIndex=new Map,this._mapImageContainer=new v,this._featuresMap=new Map,this.allVisiblePoints=new y,this.allVisiblePolylines=new y,this.allVisiblePolygons=new y,this.allVisibleMapImages=new p}hitTest(e,i){if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return t(null);const s=[this._pointsView.hitTest(e,i),this._polylinesView.hitTest(e,i),this._polygonsView.hitTest(e,i)];return o(s).then((e=>e.filter((e=>(e&&(e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new V({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate()}),this.container.addChild(this._polygonsView.container),this._polylinesView=new V({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate()}),this.container.addChild(this._polylinesView.container),this._pointsView=new V({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate()}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(()=>this._refreshCollections())),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating")}))}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&c(e.href,{responseType:"image"}).then((({data:i})=>{let s=h.fromJSON(e.extent);a(s,this.view.spatialReference)&&(s=n(s,this.view.spatialReference));const t=new f(i);t.x=s.xmin,t.y=s.ymax,t.resolution=s.width/i.naturalWidth,t.rotation=e.rotation,this._mapImageContainer.addChild(t),this._bitmapIndex.set(e,t)}))}_fetchService(){return this._handles.remove("refresh-collections"),this._getParsedKML().then((e=>this._fetchSublayerService(this.layer,e)))}_fetchSublayerService(e,i){const s=e.sublayers;if(!s||0===s.length)return t();const a=[];return s.forEach((e=>{const s=d(e,"visible").then((()=>e.load())).then((()=>this._getGraphicsForSublayer(e,i))).then((i=>r((s=>{e.networkLink?s():(this._featuresMap.set(e,i),this._handles.add(l((()=>{this._refreshCollections(),s()})),"refresh-collections"))})))).then((()=>this._fetchSublayerService(e,e.sourceJSON||i)));e.visible&&a.push(s)})),o(a).then((()=>{}))}_getParsedKML(){return w(this.layer.url,this.view.spatialReference,this.layer.refreshInterval).then((e=>_(e.data)))}async _getGraphicsForSublayer(e,i){let s=null;return i.sublayers.some((i=>(s=i,i.id===e.id)))?{points:s.points&&await g(s.points),polylines:s.polylines&&await g(s.polylines),polygons:s.polygons&&await g(s.polygons),mapImages:s.mapImages}:null}_refreshCollections(){const e=this.get("layer.visibleSublayers");this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),e&&e.length&&e.forEach((e=>{const i=this._featuresMap.get(e);i&&(this.allVisiblePoints.addMany(i.points),this.allVisiblePolylines.addMany(i.polylines),this.allVisiblePolygons.addMany(i.polygons),this.allVisibleMapImages.addMany(i.mapImages))}))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e))}};e([i()],C.prototype,"_pointsView",void 0),e([i()],C.prototype,"_polylinesView",void 0),e([i()],C.prototype,"_polygonsView",void 0),e([i()],C.prototype,"_fetchingPromise",void 0),e([i({dependsOn:["_fetchingPromise","_pointsView.updating","_polygonsView.updating","_polylinesView.updating"]})],C.prototype,"updating",void 0),C=e([s("esri.views.2d.layers.KMLLayerView2D")],C);var j=C;export default j;
