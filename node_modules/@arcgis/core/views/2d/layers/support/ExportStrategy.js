/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as e}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{debounce as i,resolve as r,all as s}from"../../../../core/promiseUtils.js";import a from"../../../../core/Accessor.js";import{getInfo as p}from"../../../../geometry/support/spatialReferenceUtils.js";import n from"../../../../geometry/Extent.js";import{create as m}from"../../../../geometry/support/aaBoundingRect.js";import l from"../../../../layers/support/TileInfo.js";import h from"../../tiling/TileKey.js";import c from"../../tiling/TileInfoView.js";import{getOuterSize as d,getBBox as u}from"../../viewStateUtils.js";import{Bitmap as g}from"../../engine/Bitmap.js";const f=m(),x=[0,0],y=new h(0,0,0,0),j=2048,v=2048,_=!1,S=!1,R=!1;let M=class extends a{constructor(t){super(t),this._imagePromise=null,this.hidpi=R,this.imageMaxWidth=j,this.imageMaxHeight=v,this.imageRotationSupported=_,this.imageNormalizationSupported=S,this.update=i((async(t,e)=>{const o=t.state,i=p(o.spatialReference),r=this.hidpi?t.pixelRatio:1;if(!t.stationary||this.destroyed)return;this.imageRotationSupported?(x[0]=o.size[0],x[1]=o.size[1]):d(x,o);const s=Math.floor(x[0]*r)>this.imageMaxWidth||Math.floor(x[1]*r)>this.imageMaxHeight,a=i&&(o.extent.xmin<i.valid[0]||o.extent.xmax>i.valid[1]),n=!this.imageNormalizationSupported&&a,m=!s&&!n,l=this.imageRotationSupported?o.rotation:0;if(m)this._imagePromise=this._singleExport(o,x,l,r,e);else{let t=Math.min(this.imageMaxWidth,this.imageMaxHeight);n&&(t=Math.min(o.worldScreenWidth,t)),this._imagePromise=this._tiledExport(o,t,l,r,e)}return this._imagePromise.then((async t=>{this._imagePromise=null,await Promise.all(t.map((t=>(this.container.addChild(t),t.fadeIn()))));for(const e of this.container.children)t.includes(e)||e.fadeOut().then((()=>{this.container.removeChild(e)}))})).catch((t=>{throw this._imagePromise=null,t}))}),5e3)}destroy(){}get updating(){return null!==this._imagePromise}updateExports(t){for(const e of this.container.children){if(!e.visible||!e.stage)return;t(e)?console.error("ExportStrategy.updateExports doesn't support promise yet"):(e.invalidateTexture(),e.requestRender())}}_export(t,e,o,i,s,a){return r().then((()=>this.fetchSource(t,Math.floor(e*s),Math.floor(o*s),{rotation:i,pixelRatio:s,signal:a}))).then((o=>{const r=new g(o);return r.x=t.xmin,r.y=t.ymax,r.resolution=t.width/e,r.rotation=i,r.pixelRatio=s,r}))}_singleExport(t,e,o,i,r){u(f,t.center,t.resolution,e);const s=new n(f[0],f[1],f[2],f[3],t.spatialReference);return this._export(s,e[0],e[1],o,i,r).then((t=>[t]))}_tiledExport(t,e,o,i,r){const a=l.create({size:e,spatialReference:t.spatialReference,scales:[t.scale]}),p=new c(a),m=p.getTileCoverage(t);if(!m)return null;const h=[];return m.forEach(((s,a,m,l)=>{y.set(s,a,m,l),p.getTileBounds(f,y);const c=new n(f[0],f[1],f[2],f[3],t.spatialReference);h.push(this._export(c,e,e,o,i,r))})),s(h)}};t([e()],M.prototype,"_imagePromise",void 0),t([e()],M.prototype,"container",void 0),t([e()],M.prototype,"fetchSource",void 0),t([e()],M.prototype,"hidpi",void 0),t([e()],M.prototype,"imageMaxWidth",void 0),t([e()],M.prototype,"imageMaxHeight",void 0),t([e()],M.prototype,"imageRotationSupported",void 0),t([e()],M.prototype,"imageNormalizationSupported",void 0),t([e()],M.prototype,"requestUpdate",void 0),t([e({dependsOn:["_imagePromise"]})],M.prototype,"updating",null),M=t([o("esri.views.2d.layers.support.ExportStrategy")],M);var w=M;export default w;
