/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../../core/has.js";import{polygonContainsPoint as t}from"../../../../geometry/support/contains.js";import{getPolygonExtent as i}from"../../../../geometry/support/extentUtils.js";import{getJsonType as r}from"../../../../geometry/support/jsonUtils.js";import{pt2px as s}from"../../../../core/screenUtils.js";import{getMetersPerUnit as o}from"../../../../core/unitUtils.js";import{fromValues as n,intersects as a,pad as u,create as h,clone as l}from"../../../../geometry/support/aaBoundingRect.js";import{normalizeMapX as c}from"../../../../geometry/support/normalizeUtils.js";import{r as m}from"../../../../chunks/rbush.js";import{getTextSymbolBounds as d,getMarkerSymbolBounds as p,isPointOnPolyline as g,getCIMMarkerBounds as y,graphicGeometryToNumber as _}from"./graphicsUtils.js";import f from"./GraphicStoreItem.js";const b={minX:0,minY:0,maxX:0,maxY:0},x=h(),G=[];function z(e,t,i,r,s){return b.minX=t,b.minY=i,b.maxX=r,b.maxY=s,e.search(b)}export default class{constructor(t,i,r,s,n,a){this._graphics=s,this._onAdd=n,this._onRemove=a,this._index=m(9,e("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=t,this._uidFieldName=r;const u=t.getClosestInfoForScale(i);u&&(this._currentLevel=u.level,this._resolution=this._tileInfoView.getTileResolution(u.level)),this._metersPerUnit=o(t.spatialReference)}hitTest(e,o,u,h,l){e=c(e,this._tileInfoView.spatialReference);const m=.5*h*u;x[0]=e-m,x[1]=o-m,x[2]=e+m,x[3]=o+m;const f=.5*h*(u+50),b=z(this._index,e-f,o-f,e+f,o+f);if(!b||0===b.length)return[];const G={x:e,y:o},I=[];let B;for(const u of b)if(u.graphic.visible)switch(r(u.geometry)){case"esriGeometryPoint":{const e=u.symbol;if(!e)continue;const i=u.geometry,{x:r,y:s}=i,o=h*this._metersPerUnit;let n;switch(e.type){case"esriTS":n=d(r,s,e,u.size,h,l);break;case"expanded-cim":n=y(r,s,e,h,o,l);break;case"esriSMS":case"esriPMS":n=p(r,s,e,h,o,l)}t(n,G)&&I.push(u)}break;case"esriGeometryPolyline":{const t=u.symbol;if(!t||!t.layers.length)continue;const i=t.layers[0];B=1.5*h*window.devicePixelRatio*s(i.width),g(u.geometry,e,o,B)&&I.push(u)}break;case"esriGeometryEnvelope":{const e=u.geometry,t=n(e.xmin,e.ymin,e.xmax,e.ymax);a(t,x)&&I.push(u);break}case"esriGeometryPolygon":{if(t(u.geometry,G)){I.push(u);break}const e=i(u.geometry);if(Math.abs(e.ymax-e.ymin)<5*h||Math.abs(e.xmax-e.xmin)<5*h){const t=n(e.xmin,e.ymin,e.xmax,e.ymax);a(t,x)&&I.push(u)}break}case"esriGeometryMultipoint":{const e=u.symbol;if(!e)continue;const i=u.geometry.points;let r;for(let s=0;s<i.length;s++)if(r="esriTS"===e.type?d(i[s][0],i[s][1],e,u.size,h,l):p(i[s][0],i[s][1],e,h,h*this._metersPerUnit,l),t(r,G)){I.push(u);break}break}}return I.sort(((e,t)=>{const i=_(e.graphic),r=_(t.graphic);return i===r?t.zorder-e.zorder:i-r})),I.map((e=>e.graphic))}getGraphicsData(e,t,i){const r=z(this._index,t.bounds[0],t.bounds[1],t.bounds[2],t.bounds[3]);if(0===r.length||0===i.length)return[];r.sort(((e,t)=>e.zorder-t.zorder)),r[0].insertAfter=-1;for(let e=1;e<r.length;e++)r[e].insertAfter=r[e-1].graphic.uid;r.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let s,o=0,n=0;const a=[],u={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const t of i){for(n=-2;o<r.length;)if(s=r[o],o++,t.uid===s.graphic.uid){n=s.insertAfter;break}if(!s.geometry||-2===n)continue;const i=s.getGeometryQuantized(u),h={...s.graphic.attributes};h[this._uidFieldName]=t.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),a.push({centroid:f.getCentroidQuantized(s,u),geometry:i,attributes:h,symbol:s.symbol,groupId:s.groupId,insertAfter:n,zorder:s.zorder})}return a.sort(((e,t)=>e.zorder-t.zorder)),a}queryTileData(e,t){const i=50*t.resolution,r=u(t.bounds,i,h()),s=z(this._index,r[0],r[1],r[2],r[3]),o=[];return this._createTileGraphics(o,e,s,{originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]}),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,i){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const r=f.acquire(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,r),i&&this._index.insert(r),r.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let r=0;r<e.length;r++)i=e[r],t=this._itemByGraphic.get(i),t&&(t.zorder=r)}update(e,t,i){const r=this._itemByGraphic.get(e);r.groupId=null;const s=l(r.bounds);return r.size[0]=r.size[1]=0,this._index.remove(r),r.set(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),i&&this._index.insert(r),{oldBounds:s,newBounds:r.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),G.length=0,this._itemByGraphic.forEach((e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&G.push(e)})),this._index.load(G)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,r){const s=this._uidFieldName;let o,n,a,u;i.sort(((e,t)=>e.zorder-t.zorder));for(let h=0;h<i.length;h++){a=i[h],o=a.graphic,n=a.getGeometryQuantized(r),u=0===h?-1:i[h-1].graphic.uid;const l={...a.graphic.attributes};l[s]=o.uid,null==a.groupId&&(a.groupId=t.createTemplateGroup(a.symbol,null)),e.push({centroid:f.getCentroidQuantized(a,r),geometry:n,attributes:l,symbol:a.symbol,groupId:a.groupId,insertAfter:u,zorder:a.zorder})}}}
