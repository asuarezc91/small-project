/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../../core/has.js";import{isNone as e,isSome as r,disposeMaybe as t}from"../../../core/maybe.js";import{createTask as s,all as i}from"../../../core/promiseUtils.js";import{clamp as a}from"../../../core/mathUtils.js";import o from"../../../request.js";import n from"../../../core/Handles.js";import{init as h}from"../../../core/watchUtils.js";import"../../../chunks/builtins.js";import m from"../../webgl/BufferObject.js";import l from"../../webgl/Texture.js";import d from"../../webgl/VertexArrayObject.js";import"../../webgl/FramebufferObject.js";import"../../webgl/RenderingContext.js";import{DisplayObject as u}from"../engine/DisplayObject.js";import{loadMagnifierResources as c}from"../../magnifier/resources.js";import{WGLDrawPhase as _}from"../engine/webgl/enums.js";import{createMagnifierProgram as p,magnifierProgramTemplate as g}from"../engine/webgl/shaders/MagnifierPrograms.js";export default class extends u{constructor(){super(),this._handles=new n,this._resourcePixelRatio=1,this.visible=!1}destroy(){this._handles.destroy(),this._handles=null,this._disposeRenderResources(),this._resourcesTask&&(this._resourcesTask.abort(),this._resourcesTask=null)}get background(){return this._background}set background(e){this._background=e,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(e){this._magnifier=e,this._handles.removeAll(),this._handles.add([h(e,"version",(()=>{this.visible=e.visible&&r(e.position)&&e.size>0,this.requestRender()})),e.watch(["mask","overlay"],(()=>this._reloadResources())),e.watch("size",(()=>{this._disposeRenderResources(),this.requestRender()}))])}doRender(r){var t;const s=r.context;if(!this._resourcesTask)return void this._reloadResources();if(r.drawPhase!==_.MAP||!this._canRender())return;this._updateResources(r);const i=this._magnifier;if(e(i.position))return;const o=r.pixelRatio,n=i.size*o,h=1/i.factor,m=Math.ceil(h*n);this._readbackTexture.resize(m,m);const{size:l}=r.state,d=o*l[0],u=o*l[1],c=.5*m,p=.5*m,g=a(o*i.position.x,c,d-c-1),f=a(u-o*i.position.y,p,u-p-1),b=g-c,x=f-p,y=this._readbackTexture;s.bindTexture(y,0),s.gl.copyTexImage2D(y.descriptor.target,0,y.descriptor.pixelFormat,b,x,m,m,0);const k=null==(t=this.background)?void 0:t.color,T=k?[k.a*k.r/255,k.a*k.g/255,k.a*k.b/255,k.a]:[1,1,1,1],R=(g+i.offsetX*o)/d*2-1,v=(f-i.offsetY*o)/u*2-1,w=n/d*2,j=n/u*2,M=this._program;s.bindVAO(this._vertexArrayObject),s.bindTexture(this._overlayTexture,6),s.bindTexture(this._maskTexture,7),s.bindProgram(M),M.setUniform4fv("u_background",T),M.setUniform1i("u_readbackTexture",0),M.setUniform1i("u_overlayTexture",6),M.setUniform1i("u_maskTexture",7),M.setUniform4f("u_drawPos",R,v,w,j),M.setUniform1i("u_maskEnabled",i.maskEnabled?1:0),M.setUniform1i("u_overlayEnabled",i.overlayEnabled?1:0),s.setStencilTestEnabled(!1),s.drawArrays(5,0,4),s.bindVAO()}_canRender(){return this.mask&&this.overlay&&null!=this._magnifier}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const t=r(this._magnifier)?this._magnifier.mask:null,a=r(this._magnifier)?this._magnifier.overlay:null;this._resourcesTask=s((async s=>{const n=e(t)||e(a)?c(s):null,h=r(t)?o(t,{responseType:"image",signal:s}).then((e=>e.data)):n.then((e=>e.mask)),m=r(a)?o(a,{responseType:"image",signal:s}).then((e=>e.data)):n.then((e=>e.overlay)),[l,d]=await i([h,m]);this.mask=l,this.overlay=d,this._disposeRenderResources(),this.requestRender()}))}_disposeRenderResources(){this._readbackTexture=t(this._readbackTexture),this._overlayTexture=t(this._overlayTexture),this._maskTexture=t(this._maskTexture),this._vertexArrayObject=t(this._vertexArrayObject),this._program=t(this._program)}_updateResources(e){if(e.pixelRatio!==this._resourcePixelRatio&&this._disposeRenderResources(),this._readbackTexture)return;const r=e.context;this._resourcePixelRatio=e.pixelRatio;const t=Math.ceil(this._magnifier.size*e.pixelRatio);this._program=p(r);const s=new Uint16Array([0,1,0,0,1,1,1,0]),i=g.attributes;this._vertexArrayObject=new d(r,i,{geometry:[{name:"a_pos",count:2,type:5123,offset:0,stride:4,normalized:!1,divisor:0}]},{geometry:m.createVertex(r,35044,s)}),this.overlay.width=t,this.overlay.height=t,this._overlayTexture=new l(r,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0},this.overlay),this.mask.width=t,this.mask.height=t,this._maskTexture=new l(r,{target:3553,pixelFormat:6406,internalFormat:6406,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0},this.mask);const a=1/this._magnifier.factor;this._readbackTexture=new l(r,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!1,width:Math.ceil(a*t),height:Math.ceil(a*t)})}}
