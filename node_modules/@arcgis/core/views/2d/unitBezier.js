/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
function e(e,t,n,r){const a=3*e,i=3*(n-e)-a,u=1-a-i,s=3*t,o=3*(r-t)-s,f=1-s-o;function c(e){return((u*e+i)*e+a)*e}return function(e,t=1e-6){return n=function(e,t){let n,r,s,o,f,l;for(s=e,l=0;l<8;l++){if(o=c(s)-e,Math.abs(o)<t)return s;if(f=(3*u*(b=s)+2*i)*b+a,Math.abs(f)<1e-6)break;s-=o/f}var b;if(n=0,r=1,s=e,s<n)return n;if(s>r)return r;for(;n<r;){if(o=c(s),Math.abs(o-e)<t)return s;e>o?n=s:r=s,s=.5*(r-n)+n}return s}(e,t),((f*n+o)*n+s)*n;var n}}const t=/^cubic-bezier\((.*)\)/,n={};function r(r){let a=n[r]||null;if(!a){const n=t.exec(r);if(n){const t=n[1].split(",").map((e=>parseFloat(e.trim())));4!==t.length||t.some((e=>isNaN(e)))||(a=e.apply(e,t))}}return a}n.ease=e(.25,.1,.25,1),n.linear=e(0,0,1,1),n.easeIn=n["ease-in"]=e(.42,0,1,1),n.easeOut=n["ease-out"]=e(0,0,.58,1),n.easeInOut=n["ease-in-out"]=e(.42,0,.58,1);export{n as easingFunctions,r as parse,e as unitBezier};
