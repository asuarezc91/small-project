/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import s from"../core/Accessor.js";import i from"../core/Handles.js";import{isRefreshableLayerView as a}from"./layers/RefreshableLayerView.js";let n=class extends s{constructor(){super(...arguments),this._handles=new i,this._currentTick=0}initialize(){this._handles.add([this.view.allLayerViews.on("after-changes",(()=>{this.notifyChange("tickInterval"),this._handles.remove("layerViewsUpdating"),this._handles.add(this._getLayerViewHandles(),"layerViewsUpdating")})),this.watch("tickInterval",(()=>this._restartTicking())),this.watch("view.ready",(()=>this._restartTicking()))]),this._restartTicking()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null,this._intervalID&&clearInterval(this._intervalID),this._currentTick=0)}get tickInterval(){const e=this.view.allLayerViews.filter((e=>a(e)));return this._getCommonInterval(e)}_restartTicking(){this._currentTick=0,this._intervalID&&clearInterval(this._intervalID),this.get("view.ready")&&this.tickInterval&&(this._intervalID=setInterval((()=>{const e=Date.now();this._currentTick+=this.tickInterval,this.view.allLayerViews.forEach((r=>{if(a(r)){const t=Math.round(6e4*r.refreshInterval),s=this._currentTick%t==0,i=e-r.refreshTimestamp<5400;t&&s&&!i&&r.refresh(e)}}))}),this.tickInterval))}_getLayerViewHandles(){const e=[],r=()=>this.notifyChange("tickInterval");return this.view.allLayerViews.forEach((t=>{a(t)&&t.layer&&e.push(t.watch("refreshInterval",r),t.layer.on("refresh",(()=>{t.refresh(Date.now())})))})),e}_getCommonInterval(e){const r=(e,t)=>isNaN(e)||isNaN(t)?0:t<=0?e:r(t,e%t);return e.toArray().reduce(((e,t)=>r(Math.round(6e4*t.refreshInterval),e)),0)}};e([r()],n.prototype,"view",void 0),e([r({readOnly:!0})],n.prototype,"tickInterval",null),n=e([t("esri.views.RefreshManager")],n);var o=n;export default o;
