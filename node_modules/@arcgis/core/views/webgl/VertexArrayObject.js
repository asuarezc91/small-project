/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{bindVertexBufferLayout as t,unbindVertexBufferLayout as i}from"./Util.js";let e=0;export default class{constructor(t,i,s,n,r){this._context=t,this._locations=i,this._layout=s,this._buffers=n,this._indexBuffer=r,this._glName=null,this.id=e++,this._initialized=!1,t.instanceCounter.increment(2,this)}get glName(){return this._glName}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get size(){return Object.keys(this._buffers).reduce(((t,i)=>t+this._buffers[i].size),this._indexBuffer?this._indexBuffer.size:0)}get layout(){return this._layout}get locations(){return this._locations}dispose(t=!0){if(!this._context)return;const i=this._context.capabilities.vao;i&&this._glName&&(i.deleteVertexArray(this._glName),this._glName=null);if(this._context.getBoundVAO()===this&&this._context.bindVAO(null),t){for(const t in this._buffers)this._buffers[t].dispose(),delete this._buffers[t];this._indexBuffer&&(this._indexBuffer.dispose(),this._indexBuffer=null)}this._context.instanceCounter.decrement(2,this),this._context=null}initialize(){if(this._initialized)return;const t=this._context.capabilities.vao;if(t){const i=t.createVertexArray();t.bindVertexArray(i),this._bindLayout(),t.bindVertexArray(null),this._glName=i}this._initialized=!0}bind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const i=this._buffers,e=!!this._context.capabilities.vao,s=this._layout,n=this._indexBuffer;i||console.error("Vertex buffer dictionary is empty!");const r=this._context.gl;for(const e in i){const n=i[e];n||console.error("Vertex buffer is uninitialized!");const r=s[e];r||console.error("Vertex element descriptor is empty!"),t(this._context,this._locations,n,r)}n&&(e?r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,n.glName):this._context.bindBuffer(n))}unbind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const t=this._buffers,e=this._layout;t||console.error("Vertex buffer dictionary is empty!");for(const s in t){const n=t[s];n||console.error("Vertex buffer is uninitialized!");const r=e[s];i(this._context,this._locations,n,r)}const s=this._indexBuffer;s&&this._context.unbindBuffer(s.bufferType)}}
