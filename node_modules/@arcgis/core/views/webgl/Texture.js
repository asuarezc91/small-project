/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as t}from"../../core/maybe.js";import{isPowerOfTwo as e}from"../../core/mathUtils.js";class i{constructor(t,e,i=null){this._context=null,this._glName=null,this.id=a++,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._boundToUnits=new Set,t.instanceCounter.increment(0,this),this._context=t,this._descriptor={target:3553,samplingMode:9729,wrapMode:10497,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,...e},this.setData(i)}get glName(){return this._glName}get descriptor(){return this._descriptor}dispose(){if(this._context&&this._context.gl){if(this._glName){const t=this._context.gl;this._boundToUnits.forEach((t=>{this._context.bindTexture(null,t)})),t.deleteTexture(this._glName),this._glName=null}this._context.instanceCounter.decrement(0,this),this._context=null}}release(){this.dispose()}resize(t,e){const i=this._descriptor;i.width===t&&i.height===e||(i.width=t,i.height=e,this.setData(null))}setData(e){if(!this._context||!this._context.gl)return;const a=this._context.gl;this._glName||(this._glName=a.createTexture()),void 0===e&&(e=null),null===e&&(this._descriptor.width=this._descriptor.width||4,this._descriptor.height=this._descriptor.height||4);const s=this._context.getBoundTexture(0);this._context.bindTexture(this,0);const o=this._descriptor;i._validateTexture(o),a.pixelStorei(a.UNPACK_ALIGNMENT,o.unpackAlignment),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,o.flipped?1:0),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.preMultiplyAlpha?1:0);const r=o.pixelFormat;let n=o.internalFormat?o.internalFormat:r;if(e instanceof ImageData||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||e instanceof HTMLVideoElement){let t=e.width,i=e.height;e instanceof HTMLVideoElement&&(t=e.videoWidth,i=e.videoHeight),o.width&&o.height&&console.assert(t===o.width&&i===o.height),a.texImage2D(a.TEXTURE_2D,0,n,r,o.dataType,e),o.hasMipmap&&this.generateMipmap(),void 0===o.width&&(o.width=t),void 0===o.height&&(o.height=i)}else{null!=o.width&&null!=o.height||console.error("Width and height must be specified!"),a.DEPTH24_STENCIL8&&n===a.DEPTH_STENCIL&&(n=a.DEPTH24_STENCIL8);let i=o.width,s=o.height;if(function(e){return t(e)&&"type"in e&&"compressed"===e.type}(e)){const t=Math.round(Math.log(Math.max(i,s))/Math.LN2)+1;o.hasMipmap=o.hasMipmap&&t===e.levels.length;for(let t=0;;++t){const r=e.levels[Math.min(t,e.levels.length-1)];if(a.compressedTexImage2D(a.TEXTURE_2D,t,n,i,s,0,r),1===i&&1===s||!o.hasMipmap)break;i=Math.max(1,i>>1),s=Math.max(1,s>>1)}}else if(t(e))a.texImage2D(a.TEXTURE_2D,0,n,i,s,0,r,o.dataType,e),o.hasMipmap&&this.generateMipmap();else for(let t=0;a.texImage2D(a.TEXTURE_2D,t,n,i,s,0,r,o.dataType,null),(1!==i||1!==s)&&o.hasMipmap;++t)i=Math.max(1,i>>1),s=Math.max(1,s>>1)}i._applySamplingMode(a,this._descriptor),i._applyWrapMode(a,this._descriptor),i._applyAnisotropicFilteringParameters(this._context,this._descriptor),this._context.bindTexture(s,0)}updateData(t,e,i,a,s,o){o||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const r=this._context.gl,n=this._descriptor,p=this._context.getBoundTexture(0);this._context.bindTexture(this,0),(e<0||i<0||a>n.width||s>n.height||e+a>n.width||i+s>n.height)&&console.error("An attempt to update out of bounds of the texture!"),r.pixelStorei(r.UNPACK_ALIGNMENT,n.unpackAlignment),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,n.flipped?1:0),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.preMultiplyAlpha?1:0),o instanceof ImageData||o instanceof HTMLImageElement||o instanceof HTMLCanvasElement||o instanceof HTMLVideoElement?r.texSubImage2D(r.TEXTURE_2D,t,e,i,n.pixelFormat,n.dataType,o):r.texSubImage2D(r.TEXTURE_2D,t,e,i,a,s,n.pixelFormat,n.dataType,o),this._context.bindTexture(p,0)}generateMipmap(){const t=this._descriptor;t.hasMipmap||(t.hasMipmap=!0,this._samplingModeDirty=!0,i._validateTexture(t)),9729===t.samplingMode?(this._samplingModeDirty=!0,t.samplingMode=9985):9728===t.samplingMode&&(this._samplingModeDirty=!0,t.samplingMode=9984);const e=this._context.getBoundTexture(0);this._context.bindTexture(this,0);const a=this._context.gl;a.generateMipmap(a.TEXTURE_2D),this._context.bindTexture(e,0)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,i._validateTexture(this._descriptor),this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,i._validateTexture(this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(i._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(i._applyWrapMode(t,e),this._wrapModeDirty=!1)}setBoundToUnit(t,e){e?this._boundToUnits.add(t):this._boundToUnits.delete(t)}static _validateTexture(t){(t.width<0||t.height<0)&&console.error("Negative dimension parameters are not allowed!");e(t.width)&&e(t.height)||("number"==typeof t.wrapMode?33071!==t.wrapMode&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):33071===t.wrapMode.s&&33071===t.wrapMode.t||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),t.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))}static _applySamplingMode(t,e){let i=e.samplingMode,a=e.samplingMode;9985===i||9987===i?(i=9729,e.hasMipmap||(a=9729)):9984!==i&&9986!==i||(i=9728,e.hasMipmap||(a=9728)),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,i),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,a)}static _applyWrapMode(t,e){"number"==typeof e.wrapMode?(t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){if(null==e.maxAnisotropy)return;const i=t.capabilities.textureFilterAnisotropic;if(!i)return;const a=t.gl;a.texParameterf(a.TEXTURE_2D,i.TEXTURE_MAX_ANISOTROPY,e.maxAnisotropy)}}let a=0;export default i;
