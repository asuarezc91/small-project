/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../core/has.js";import{isNone as e}from"../../core/maybe.js";function r(e,r){return e.vertexBuffers[r].size/t(e.layout[r])}function t(e){return e[0].stride}function n(e){switch(e){case 5126:case 5124:case 5125:return 4;case 5122:case 5123:return 2;case 5120:case 5121:return 1;default:throw new Error("Unknown data type")}}function i(e){switch(e){case 5120:return Int8Array;case 5126:return Float32Array;case 5124:return Int32Array;case 5122:return Int16Array;case 5121:return Uint8Array;case 5125:return Uint32Array;case 5123:return Uint16Array;default:throw new Error("Unknown data type")}}function o(e,r,t,i,o,s){const a=n(i);if(e.length>0){const n=e[0].stride,c=n+a*t;e.forEach((e=>e.stride=c)),e.push({name:r,count:t,type:i,offset:n,stride:c,normalized:o,divisor:s})}else e.push({name:r,count:t,type:i,offset:0,stride:a*t,normalized:o,divisor:s})}function s(e,r){for(let t=0;t<e.length;t++)if(e[t].name===r)return!0;return!1}function a(e,r){for(let t=0;t<e.length;t++)if(e[t].name===r)return e[t];return null}function c(e,r,t,n,i=0){const o=e.getBoundFramebufferObject(),s=e.getBoundTexture(0);e.bindFramebuffer(r),e.bindTexture(t,0),e.gl.copyTexImage2D(e.gl.TEXTURE_2D,i,t.descriptor.pixelFormat,n[0],n[1],n[2],n[3],0),e.gl.flush(),e.bindFramebuffer(o),e.bindTexture(s,0)}function u(e,r){const t={};for(const n in e)t[n]=e[n].map((e=>e.divisor?{...e,baseInstance:r}:e));return t}function f(e,r,t,n,i){const o=e.gl,s=e.capabilities.instancing;e.bindBuffer(t);for(const e of n){const t=r[e.name],n=(i||(0+e.baseInstance?e.baseInstance:0))*e.stride;if(void 0===t&&console.error(`There is no location for vertex attribute '${e.name}' defined.`),e.baseInstance&&!e.divisor&&console.error(`Vertex attribute '${e.name}' uses baseInstanceOffset without divisor.`),e.count<=4)o.vertexAttribPointer(t,e.count,e.type,e.normalized,e.stride,e.offset+n),o.enableVertexAttribArray(t),e.divisor&&e.divisor>0&&s&&s.vertexAttribDivisor(t,e.divisor);else if(9===e.count)for(let r=0;r<3;r++)o.vertexAttribPointer(t+r,3,e.type,e.normalized,e.stride,e.offset+12*r+n),o.enableVertexAttribArray(t+r),e.divisor&&e.divisor>0&&s&&s.vertexAttribDivisor(t+r,e.divisor);else if(16===e.count)for(let r=0;r<4;r++)o.vertexAttribPointer(t+r,4,e.type,e.normalized,e.stride,e.offset+16*r+n),o.enableVertexAttribArray(t+r),e.divisor&&e.divisor>0&&s&&s.vertexAttribDivisor(t+r,e.divisor);else console.error("Unsupported vertex attribute element count: "+e.count)}}function d(e,r,t,n){const i=e.gl,o=e.capabilities.instancing;e.bindBuffer(t);for(const e of n){const t=r[e.name];if(e.count<=4)i.disableVertexAttribArray(t),e.divisor&&e.divisor>0&&o&&o.vertexAttribDivisor(t,0);else if(9===e.count)for(let r=0;r<3;r++)i.disableVertexAttribArray(t+r),e.divisor&&e.divisor>0&&o&&o.vertexAttribDivisor(t+r,0);else if(16===e.count)for(let r=0;r<4;r++)i.disableVertexAttribArray(t+r),e.divisor&&e.divisor>0&&o&&o.vertexAttribDivisor(t+r,0);else console.error("Unsupported vertex attribute element count: "+e.count)}e.unbindBuffer(34962)}function l(e){switch(e){case 6406:case 6409:return 1;case 6410:return 2;case 6407:return 3;case 6408:case 34041:return 4;case 33325:return 2;case 33326:case 35898:case 33327:return 4;case 33328:case 34842:return 8;case 34836:return 16;case 33189:return 2;case 34041:return 4;case 32854:return 2;case 36168:return 1}return 0}function b(r){if(e(r))return 0;if("colorAttachment"in r)return r.glName?b(r.colorAttachment)+b(r.depthStencilAttachment):0;if("descriptor"in r)return r.glName?b(r.descriptor):0;const t=r.internalFormat||"pixelFormat"in r&&r.pixelFormat;if(!t)return 0;const n="hasMipmap"in r&&r.hasMipmap?1.3:1,i=r.width*r.height;return l(t)*i*n}export{o as addDescriptor,f as bindVertexBufferLayout,c as copyFramebufferToTexture,a as findAttribute,n as getBytesPerElement,l as getBytesPerElementFormat,b as getGpuMemoryUsage,t as getStride,i as getTypedArrayConstructor,s as hasAttribute,u as setBaseInstanceOffset,d as unbindVertexBufferLayout,r as vertexCount};
