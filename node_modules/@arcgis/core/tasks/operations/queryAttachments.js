/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{addProxy as t}from"../../core/urlUtils.js";import{addTokenParameter as o}from"../../kernel.js";import e from"../../request.js";import{mapParameters as r}from"./urlUtils.js";import s from"../../layers/support/AttachmentInfo.js";function n(t){const o=t.toJSON();return o.attachmentTypes&&(o.attachmentTypes=o.attachmentTypes.join(",")),o.keywords&&(o.keywords=o.keywords.join(",")),o.globalIds&&(o.globalIds=o.globalIds.join(",")),o.objectIds&&(o.objectIds=o.objectIds.join(",")),o.size&&(o.size=o.size.join(",")),o}function a(e,r){const n={};for(const a of e){const{parentObjectId:e,parentGlobalId:c,attachmentInfos:i}=a;for(const a of i){const{id:i}=a,l=t(o(`${r}/${e}/attachments/${i}`)),m=s.fromJSON(a);m.set({url:l,parentObjectId:e,parentGlobalId:c}),n[e]?n[e].push(m):n[e]=[m]}}return n}function c(t,o,s){let a={query:r({...t.query,f:"json",...n(o)})};return s&&(a={...s,...a,query:{...s.query,...a.query}}),e(t.path+"/queryAttachments",a)}export{c as executeAttachmentQuery,a as processAttachmentQueryResult};
