/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{JSONMap as o}from"../../core/jsonMap.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import s from"../../core/Accessor.js";import{getJsonType as i}from"../../geometry/support/jsonUtils.js";import{geometryTypes as p}from"../../geometry.js";const c=new o({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let m=class extends s{constructor(e){super(e),this.geometry1=null,this.geometry2=null,this.distanceUnit=null,this.geodesic=null}toJSON(){const e={},t=this.geometry1;t&&(e.geometry1=JSON.stringify({geometryType:i(t),geometry:t}),e.sr=JSON.stringify(this.geometry1.spatialReference.toJSON()));const o=this.geometry2;return o&&(e.geometry2=JSON.stringify({geometryType:i(o),geometry:o})),this.distanceUnit&&(e.distanceUnit=c.toJSON(this.distanceUnit)),this.geodesic&&(e.geodesic=this.geodesic),e}};e([t({types:p,json:{write:!0}})],m.prototype,"geometry1",void 0),e([t({types:p,json:{write:!0}})],m.prototype,"geometry2",void 0),e([t({type:String,json:{write:!0}})],m.prototype,"distanceUnit",void 0),e([t({type:Boolean,json:{write:!0}})],m.prototype,"geodesic",void 0),m=e([r("esri.tasks.support.DistanceParameters")],m);var n=m;export default n;
