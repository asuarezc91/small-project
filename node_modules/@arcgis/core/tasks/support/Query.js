/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{clone as e}from"../../core/lang.js";import{isSome as r}from"../../core/maybe.js";import"../../core/Logger.js";import{ensureClass as i}from"../../core/accessorSupport/ensureType.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{cast as s}from"../../core/accessorSupport/decorators/cast.js";import{JSONMap as a}from"../../core/jsonMap.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../../core/accessorSupport/decorators/writer.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as p}from"../../core/JSONSupport.js";import u from"../../geometry/SpatialReference.js";import{fromJSON as c}from"../../geometry/support/jsonUtils.js";import{geometryTypes as m}from"../../geometry.js";import{s as d}from"../../chunks/symbols.js";import y from"../../TimeExtent.js";import{D as h}from"../../chunks/DataLayerSource.js";import j from"./QuantizationParameters.js";import v from"./StatisticDefinition.js";var w;const S=new a({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),g=new a({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let f=w=class extends p{constructor(t){super(t),this.aggregateIds=null,this.cacheHint=void 0,this.datumTransformation=null,this.distance=void 0,this.dynamicDataSource=void 0,this.gdbVersion=null,this.geometry=null,this.geometryPrecision=void 0,this.groupByFieldsForStatistics=null,this.having=null,this.historicMoment=null,this.maxAllowableOffset=void 0,this.maxRecordCountFactor=1,this.multipatchOption=null,this.num=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.outStatistics=null,this.parameterValues=null,this.pixelSize=null,this.quantizationParameters=null,this.rangeValues=null,this.relationParameter=null,this.resultType=null,this.returnCentroid=!1,this.returnDistinctValues=!1,this.returnExceededLimitFeatures=!0,this.returnGeometry=!1,this.returnQueryGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.spatialRelationship="intersects",this.start=void 0,this.sqlFormat=null,this.text=null,this.timeExtent=null,this.units=null,this.where=null}static from(t){return i(w,t)}castDatumTransformation(t){return"number"==typeof t||"object"==typeof t?t:null}writeHistoricMoment(t,e){e.historicMoment=t&&t.getTime()}writeParameterValues(t,e){if(t){const r={};for(const e in t){const i=t[e];Array.isArray(i)?r[e]=i.map((t=>t instanceof Date?t.getTime():t)):i instanceof Date?r[e]=i.getTime():r[e]=i}e.parameterValues=r}}writeStart(t,e){e.resultOffset=this.start,e.resultRecordCount=this.num||10,e.where="1=1"}writeWhere(t,e){e.where=t||"1=1"}clone(){return new w(e({aggregateIds:this.aggregateIds,cacheHint:this.cacheHint,datumTransformation:this.datumTransformation,distance:this.distance,gdbVersion:this.gdbVersion,geometry:this.geometry,geometryPrecision:this.geometryPrecision,groupByFieldsForStatistics:this.groupByFieldsForStatistics,having:this.having,historicMoment:r(this.historicMoment)?new Date(this.historicMoment.getTime()):null,maxAllowableOffset:this.maxAllowableOffset,maxRecordCountFactor:this.maxRecordCountFactor,multipatchOption:this.multipatchOption,num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,outStatistics:this.outStatistics,parameterValues:this.parameterValues,pixelSize:this.pixelSize,quantizationParameters:this.quantizationParameters,rangeValues:this.rangeValues,relationParameter:this.relationParameter,resultType:this.resultType,returnDistinctValues:this.returnDistinctValues,returnGeometry:this.returnGeometry,returnCentroid:this.returnCentroid,returnExceededLimitFeatures:this.returnExceededLimitFeatures,returnQueryGeometry:this.returnQueryGeometry,returnM:this.returnM,returnZ:this.returnZ,dynamicDataSource:this.dynamicDataSource,spatialRelationship:this.spatialRelationship,start:this.start,sqlFormat:this.sqlFormat,text:this.text,timeExtent:this.timeExtent,units:this.units,where:this.where}))}};f.MAX_MAX_RECORD_COUNT_FACTOR=5,t([o({json:{write:!0}})],f.prototype,"aggregateIds",void 0),t([o({type:Boolean,json:{write:{writer:(t,e)=>{null!=t&&(e.cacheHint=t)}}}})],f.prototype,"cacheHint",void 0),t([o({json:{write:!0}})],f.prototype,"datumTransformation",void 0),t([s("datumTransformation")],f.prototype,"castDatumTransformation",null),t([o({type:Number,json:{write:{overridePolicy:t=>({enabled:t>0})}}})],f.prototype,"distance",void 0),t([o({type:h,json:{write:!0}})],f.prototype,"dynamicDataSource",void 0),t([o({type:String,json:{write:!0}})],f.prototype,"gdbVersion",void 0),t([o({types:m,json:{read:c,write:!0}})],f.prototype,"geometry",void 0),t([o({type:Number,json:{write:!0}})],f.prototype,"geometryPrecision",void 0),t([o({type:[String],json:{write:!0}})],f.prototype,"groupByFieldsForStatistics",void 0),t([o({type:String,json:{write:!0}})],f.prototype,"having",void 0),t([o({type:Date})],f.prototype,"historicMoment",void 0),t([l("historicMoment")],f.prototype,"writeHistoricMoment",null),t([o({type:Number,json:{write:!0}})],f.prototype,"maxAllowableOffset",void 0),t([o({type:Number,cast:t=>t<1?1:t>w.MAX_MAX_RECORD_COUNT_FACTOR?w.MAX_MAX_RECORD_COUNT_FACTOR:t,json:{write:{overridePolicy:t=>({enabled:t>1})}}})],f.prototype,"maxRecordCountFactor",void 0),t([o({type:String,json:{write:!0}})],f.prototype,"multipatchOption",void 0),t([o({type:Number,json:{read:{source:"resultRecordCount"}}})],f.prototype,"num",void 0),t([o({json:{write:!0}})],f.prototype,"objectIds",void 0),t([o({type:[String],json:{write:!0}})],f.prototype,"orderByFields",void 0),t([o({type:[String],json:{write:!0}})],f.prototype,"outFields",void 0),t([o({type:u,json:{read:{source:"outSR"},write:{target:"outSR"}}})],f.prototype,"outSpatialReference",void 0),t([o({type:[v],json:{write:{enabled:!0,overridePolicy(){return{enabled:r(this.outStatistics)&&this.outStatistics.length>0}}}}})],f.prototype,"outStatistics",void 0),t([o({json:{write:!0}})],f.prototype,"parameterValues",void 0),t([l("parameterValues")],f.prototype,"writeParameterValues",null),t([o({types:d,json:{write:!0}})],f.prototype,"pixelSize",void 0),t([o({type:j,json:{write:!0}})],f.prototype,"quantizationParameters",void 0),t([o({type:[Object],json:{write:!0}})],f.prototype,"rangeValues",void 0),t([o({type:String,json:{read:{source:"relationParam"},write:{target:"relationParam",overridePolicy(){return{enabled:"relation"===this.spatialRelationship}}}}})],f.prototype,"relationParameter",void 0),t([o({type:String,json:{write:!0}})],f.prototype,"resultType",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:t})}}})],f.prototype,"returnCentroid",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:t})}}})],f.prototype,"returnDistinctValues",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:!t})}}})],f.prototype,"returnExceededLimitFeatures",void 0),t([o({type:Boolean,json:{write:!0}})],f.prototype,"returnGeometry",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:t})}}})],f.prototype,"returnQueryGeometry",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:t})}}})],f.prototype,"returnM",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:t})}}})],f.prototype,"returnZ",void 0),t([o({type:String,json:{read:{source:"spatialRel",reader:S.read},write:{target:"spatialRel",writer:S.write}}})],f.prototype,"spatialRelationship",void 0),t([o({type:Number,json:{read:{source:"resultOffset"}}})],f.prototype,"start",void 0),t([l("start"),l("num")],f.prototype,"writeStart",null),t([o({type:String,json:{write:!0}})],f.prototype,"sqlFormat",void 0),t([o({type:String,json:{write:!0}})],f.prototype,"text",void 0),t([o({type:y,json:{write:!0}})],f.prototype,"timeExtent",void 0),t([o({type:String,json:{read:g.read,write:{writer:g.write,overridePolicy(t){return{enabled:t&&this.distance>0}}}}})],f.prototype,"units",void 0),t([o({type:String,json:{write:{overridePolicy(t){return{enabled:null!=t||this.start>0}}}}})],f.prototype,"where",void 0),t([l("where")],f.prototype,"writeWhere",null),f=w=t([n("esri.tasks.support.Query")],f);var R=f;export default R;
