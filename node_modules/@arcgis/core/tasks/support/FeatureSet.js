/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as t,unwrap as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{JSONMap as s}from"../../core/jsonMap.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../../core/accessorSupport/decorators/writer.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as l}from"../../core/JSONSupport.js";import a from"../../geometry/SpatialReference.js";import{fromJSON as y,isPolygon as u}from"../../geometry/support/jsonUtils.js";import{geometryTypes as m}from"../../geometry.js";import c from"../../Graphic.js";import f from"../../layers/support/Field.js";const h=new s({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let d=class extends l{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,r){const o=a.fromJSON(r.spatialReference),s=[];for(let r=0;r<e.length;r++){const i=e[r],n=c.fromJSON(i),p=i.geometry&&i.geometry.spatialReference;t(n.geometry)&&!p&&(n.geometry.spatialReference=o),s.push(n)}return s}writeGeometryType(e,r,o,s){if(e)return void h.write(e,r,o,s);const{features:i}=this;if(i)for(const e of i)if(e&&t(e.geometry))return void h.write(e.geometry.type,r,o,s)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,o=y(e);return!r&&t.spatialReference&&(o.spatialReference=a.fromJSON(t.spatialReference)),o}writeSpatialReference(e,r){if(e)return void(r.spatialReference=e.toJSON());const{features:o}=this;if(o)for(const e of o)e&&t(e.geometry)&&e.geometry.spatialReference&&(r.spatialReference=e.geometry.spatialReference.toJSON())}toJSON(e){const t=this.write(null);if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const o=t.features[r];if(o.geometry){const t=e&&e[r];o.geometry=t&&t.toJSON()||o.geometry}}return t}quantize(e){const{scale:[t,o],translate:[s,i]}=e,n=this.features,p=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-s)/t)),(e=>Math.round((i-e)/o)));for(let e=0,t=n.length;e<t;e++)p(r(n[e].geometry))||(n.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:r,transform:o}=this;if(!o)return this;const{translate:[s,i],scale:[n,p]}=o,l=this._getHydrationFunction(e,(e=>e*n+s),(e=>i-e*p));for(const{geometry:e}of r)t(e)&&l(e);return this.transform=null,this}_quantizePoints(e,t,r){let o,s;const i=[];for(let n=0,p=e.length;n<p;n++){const p=e[n];if(n>0){const e=t(p[0]),n=r(p[1]);e===o&&n===s||(i.push([e-o,n-s]),o=e,s=n)}else o=t(p[0]),s=r(p[1]),i.push([o,s])}return i.length>0?i:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const o=u(e)?e.rings:e.paths,s=[];for(let e=0,i=o.length;e<i;e++){const i=o[e],n=this._quantizePoints(i,t,r);n&&s.push(n)}return s.length>0?(u(e)?e.rings=s:e.paths=s,e):null}:"multipoint"===e?e=>{let o;return o=this._quantizePoints(e.points,t,r),o.length>0?(e.points=o,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y)}:"polyline"===e||"polygon"===e?e=>{const o=u(e)?e.rings:e.paths;let s,i;for(let e=0,n=o.length;e<n;e++){const n=o[e];for(let e=0,o=n.length;e<o;e++){const o=n[e];e>0?(s+=o[0],i+=o[1]):(s=o[0],i=o[1]),o[0]=t(s),o[1]=r(i)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax)}:"multipoint"===e?e=>{const o=e.points;let s,i;for(let e=0,n=o.length;e<n;e++){const n=o[e];e>0?(s+=n[0],i+=n[1]):(s=n[0],i=n[1]),n[0]=t(s),n[1]=r(i)}}:void 0}};e([o({type:String,json:{write:!0}})],d.prototype,"displayFieldName",void 0),e([o({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],d.prototype,"exceededTransferLimit",void 0),e([o({type:[c],json:{write:!0}})],d.prototype,"features",void 0),e([i("features")],d.prototype,"readFeatures",null),e([o({type:[f],json:{write:!0}})],d.prototype,"fields",void 0),e([o({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:h.read}}})],d.prototype,"geometryType",void 0),e([p("geometryType")],d.prototype,"writeGeometryType",null),e([o({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],d.prototype,"hasM",void 0),e([o({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],d.prototype,"hasZ",void 0),e([o({types:m,json:{write:!0}})],d.prototype,"queryGeometry",void 0),e([i("queryGeometry")],d.prototype,"readQueryGeometry",null),e([o({type:a,json:{write:!0}})],d.prototype,"spatialReference",void 0),e([p("spatialReference")],d.prototype,"writeSpatialReference",null),e([o({json:{write:!0}})],d.prototype,"transform",void 0),d=e([n("esri.tasks.support.FeatureSet")],d),d.prototype.toJSON.isDefaultToJSON=!0,d||(d={});var g=d;export default g;
