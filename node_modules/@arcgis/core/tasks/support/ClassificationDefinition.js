/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{JSONMap as s}from"../../core/jsonMap.js";import{subclass as e}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as t}from"../../core/JSONSupport.js";import p from"../../symbols/Symbol.js";import{types as i,fromJSON as a}from"./colorRamps.js";const c=new s({classBreaksDef:"class-breaks-definition",uniqueValueDef:"unique-value-definition"});let m=class extends t{constructor(){super(...arguments),this.baseSymbol=null,this.colorRamp=null,this.type=null}};o([r({type:p,json:{write:!0}})],m.prototype,"baseSymbol",void 0),o([r({types:i,json:{read:{reader:a},write:!0}})],m.prototype,"colorRamp",void 0),o([r({json:{read:c.read,write:c.write}})],m.prototype,"type",void 0),m=o([e("esri.tasks.support.ClassificationDefinition")],m);var l=m;export default l;
