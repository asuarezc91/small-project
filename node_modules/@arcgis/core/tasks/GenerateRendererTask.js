/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{resolve as r}from"../core/promiseUtils.js";import o from"../request.js";import{fromJSON as i}from"../renderers/support/jsonUtils.js";import{D as n}from"../chunks/DataLayerSource.js";import a from"./support/StatisticDefinition.js";import l from"./support/Query.js";import u from"./Task.js";import c from"./QueryTask.js";let p=class extends u{constructor(e){super(e),this._field=null,this.checkValueRange=null,this.gdbVersion=null,this.source=null}get parsedUrl(){const e=this._parseUrl(this.url);return e.path+="/generateRenderer",e}execute(e,s){const{classificationDefinition:t}=e,r={...e.toJSON(),f:"json"};if("esri.tasks.support.ClassBreaksDefinition"===t.declaredClass?this._field=t.classificationField:this._field=t.attributeField,this.source){var i;const e={source:null==(i=this.source)?void 0:i.toJSON()};r.layer=JSON.stringify(e)}this.gdbVersion&&(r.gdbVersion=this.gdbVersion),r.classificationDef&&(r.classificationDef=JSON.stringify(r.classificationDef));let n={query:r};return(this.requestOptions||s)&&(n={...this.requestOptions,...s,...n}),o(this.parsedUrl.path,n).then((e=>this._handleExecuteResponse(e)))}_handleExecuteResponse(e){const s=e&&e.data;if(!s)return;if(!this.checkValueRange){const e=this._processRendererJSON(s);return r(e)}const t=new c({url:this.url}),o=new a({statisticType:"min",onStatisticField:this._field}),i=new a({statisticType:"max",onStatisticField:this._field}),n=new l({outStatistics:[o,i]});return t.execute(n).then((e=>{const t=e.features[0].attributes;let r=null,o=null;for(const e in t)0===e.toLowerCase().indexOf("min")?r=t[e]:o=t[e];return this._processRendererJSON(s,r,o)}))}_processRendererJSON(e,s,t){if("classBreaks"===e.type){const r=i(e);return{classBreaks:r.classBreakInfos.map(((e,o)=>(0===o&&null!=s&&(e.minValue=s),o===r.classBreakInfos.length-1&&null!=t&&(e.maxValue=t),{minValue:e.minValue,maxValue:e.maxValue,label:e.label}))),normalizationTotal:r.normalizationTotal}}return{uniqueValues:e.uniqueValueInfos.map(((r,o)=>(0===o&&null!=s&&(r.value=s),o===e.uniqueValueInfos.length-1&&null!=t&&(r.value=t),{count:r.count,value:r.value,label:r.label})))}}};e([s()],p.prototype,"checkValueRange",void 0),e([s()],p.prototype,"gdbVersion",void 0),e([s({type:n})],p.prototype,"source",void 0),e([s({readOnly:!0,dependsOn:["url"]})],p.prototype,"parsedUrl",null),p=e([t("esri.tasks.GenerateRendererTask")],p);var f=p;export default f;
