/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../core/has.js";import{isSome as r}from"../core/maybe.js";import{create as o,isAborted as t}from"../core/promiseUtils.js";function n(n,s,c=!1,d){return o(((o,a)=>{if(t(d))return void a(i());let l=()=>{v(),a(new Error(`Unable to load ${s}`))},m=()=>{const e=n;v(),o(e)},u=()=>{if(!n)return;const e=n;v(),e.src="",a(i())};const v=()=>{e("esri-image-decode")||(n.removeEventListener("error",l),n.removeEventListener("load",m)),l=null,m=null,n=null,r(d)&&d.removeEventListener("abort",u),u=null,c&&URL.revokeObjectURL(s)};r(d)&&d.addEventListener("abort",u),e("esri-image-decode")?n.decode().then(m,l):(n.addEventListener("error",l),n.addEventListener("load",m))}))}function i(){try{return new DOMException("Aborted","AbortError")}catch{const e=new Error;return e.name="AbortError",e}}export{n as loadImageAsync};
