/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{reader as o}from"../../core/accessorSupport/decorators/reader.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{fixTimeInfoFields as s}from"../support/fieldUtils.js";import{timeUnitKebabDictionary as i}from"../support/timeUtils.js";import p from"../../TimeExtent.js";import m from"../../TimeInterval.js";import n from"../support/TimeInfo.js";function u(e){return void 0!==e.timeInfo}const f=u=>{let f=class extends u{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(e,t){const o=t.timeInfo.exportOptions;if(!o)return null;const r=o.timeOffset,s=i.fromJSON(o.timeOffsetUnits);return r&&s?new m({value:r,unit:s}):null}set timeInfo(e){s(e,this.fields),this._set("timeInfo",e)}};return e([t({type:p,json:{write:!1}})],f.prototype,"timeExtent",void 0),e([t({type:m})],f.prototype,"timeOffset",void 0),e([o("service","timeOffset",["timeInfo.exportOptions"])],f.prototype,"readOffset",null),e([t({value:null,type:n,json:{write:!0,origins:{"web-document":{read:!1,write:!1}}}})],f.prototype,"timeInfo",null),e([t({type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation"},origins:{"web-scene":{read:!1,write:!1}}}})],f.prototype,"useViewTime",void 0),f=e([r("esri.layers.mixins.TemporalLayer")],f),f};export{f as TemporalLayer,u as isTemporalLayer};
