/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as t}from"../../core/maybe.js";import r from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../../core/accessorSupport/decorators/writer.js";import n from"../../core/Error.js";import{urlToObject as l,join as p}from"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{debounce as d,reject as c,all as u}from"../../core/promiseUtils.js";import m from"../../geometry/SpatialReference.js";import y from"../../geometry/Extent.js";import h from"../../request.js";import f from"../../portal/Portal.js";import v from"../../portal/PortalItem.js";import{updateOrigins as g}from"../../core/accessorSupport/originUtils.js";import{titleFromUrlAndName as w,parse as S,cleanTitle as I,sanitizeUrlWithLayerId as x,writeUrlWithLayerId as b,isArcGISUrl as j}from"../support/arcgisLayerUrl.js";import _ from"../../geometry/HeightModelInfo.js";import{saveResources as R}from"../../webdoc/support/saveUtils.js";import{url as N}from"../support/commonProperties.js";const O=r.getLogger("esri.layers.mixins.SceneService"),T=r=>{let T=class extends r{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this._debouncedSaveOperations=d((async(e,t,r)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return m.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,o=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=o?new m(o):null}}readFullExtent(e,t){const r=t.store,o=this._readSpatialReference(t);return null==o||null==r||null==r.extent||!Array.isArray(r.extent)||r.extent.some((e=>e<U))?null:new y({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:o})}readVersion(e,t){const r=t.store,o=null!=r.version?r.version.toString():"",i={major:Number.NaN,minor:Number.NaN,versionString:o},s=o.split(".");return s.length>=2&&(i.major=parseInt(s[0],10),i.minor=parseInt(s[1],10)),i}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,r){const o=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return w(this.url,r.name);let i=r.name;if(!i&&this.url){const e=S(this.url);t(e)&&(i=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&o&&(i=o+" - "+i),I(i)}set url(e){const t=x(this,e,O);this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,o){b(this,e,"layers",t,o)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=l(e);return null!=this.layerId&&j(t.path)&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _verifyRootNodeAndUpdateExtent(e,t){if(e)try{return this._updateExtentFromRootPage(e,await this._fetchRootPage(e,t))}catch(e){}return this._updateExtentFromRootNode(await this._fetchRootNode(t))}async _fetchRootPage(e,t){if(!e)return c();const r=Math.floor(e.rootIndex/e.nodesPerPage),o=`${this.parsedUrl.path}/nodepages/${r}`;return(await h(o,{responseType:"json",signal:t})).data}_updateExtentFromRootPage(e,t){if(null==t||null==t.nodes)throw new n("sceneservice:invalid-node-page","Inavlid node page.");const r=t.nodes[e.rootIndex%e.nodesPerPage];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new n("sceneservice:invalid-node-page","Inavlid node page.");if(r.obb.center[0]<U)return;const o=r.obb.halfSize,i=r.obb.center[2],s=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);this.fullExtent.zmin=i-s,this.fullExtent.zmax=i+s}_updateExtentFromRootNode(e){if(null==e||null==this.fullExtent||this.fullExtent.hasZ)return;if(!Array.isArray(e.mbs)||4!==e.mbs.length||e.mbs[0]<U)return;const t=e.mbs[2],r=e.mbs[3];this.fullExtent.zmin=t-r,this.fullExtent.zmax=t+r}async _fetchRootNode(e){if(!this.rootNode)return;const t=p(this.parsedUrl.path,this.rootNode);try{return(await h(t,{query:{f:"json"},responseType:"json",signal:e})).data}catch(e){throw new n("sceneservice:root-node-missing","Root node missing.",{error:e,url:t})}}async _fetchService(e){if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await h(this.url,{query:{f:"json"},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await h(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=t.data;this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const o=t.getTypeKeywords();for(const t of o)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),1===r&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...A,...t};let o=v.from(e);o||(O.error("_saveAs(): requires a portal item parameter"),await c(new n("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),o.id&&(o=o.clone(),o.id=null);const i=o.portal||f.getDefault();await this._ensureLoadBeforeSave(),o.type=P,o.portal=i;const s={origin:"portal-item",url:null,messages:[],portal:i,portalItem:o,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},a={layers:[this.write(null,s)]};return await u(s.resources.pendingOperations),await this._validateAgainstJSONSchema(a,s,r),o.url=this.url,o.title||(o.title=this.title),this._updateTypeKeywords(o,r,1),await i._signIn(),await i.user.addItem({item:o,folder:r&&r.folder,data:a}),await R(this.resourceReferences,s,null),this.portalItem=o,g(s),s.portalItem=o,o}async _save(e){const t={...A,...e};this.portalItem||(O.error("_save(): requires the .portalItem property to be set"),await c(new n("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==P&&(O.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+P),await c(new n("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${P}"`))),await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&l(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||f.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write(null,r)]};return await u(r.resources.pendingOperations),await this._validateAgainstJSONSchema(o,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:o}),await R(this.resourceReferences,r,null),g(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let o=t.messages.filter((e=>"error"===e.type)).map((e=>new n(e.name,e.message,e.details)));if(r&&r.validationOptions.ignoreUnsupported&&(o=o.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r.validationOptions.enabled||E){const t=(await import("../support/schemaValidator.js")).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(O.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===r.validationOptions.failPolicy){const e=t.map((e=>new n("sceneservice:schema-validation",e))).concat(o);throw new n("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(o.length>0)throw new n("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:o})}};return e([o({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],T.prototype,"id",void 0),e([o({type:m})],T.prototype,"spatialReference",void 0),e([i("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],T.prototype,"readSpatialReference",null),e([o({type:y})],T.prototype,"fullExtent",void 0),e([i("fullExtent",["store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],T.prototype,"readFullExtent",null),e([o({readOnly:!0,type:_})],T.prototype,"heightModelInfo",void 0),e([o({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],T.prototype,"minScale",void 0),e([o({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],T.prototype,"maxScale",void 0),e([o({readOnly:!0})],T.prototype,"version",void 0),e([i("version",["store.version"])],T.prototype,"readVersion",null),e([o({type:String,json:{read:{source:"copyrightText"}}})],T.prototype,"copyright",void 0),e([o({type:String,json:{read:!1}})],T.prototype,"sublayerTitleMode",void 0),e([o({type:String})],T.prototype,"title",void 0),e([i("portal-item","title")],T.prototype,"readTitlePortalItem",null),e([i("service","title",["name"])],T.prototype,"readTitleService",null),e([o({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],T.prototype,"layerId",void 0),e([o(N)],T.prototype,"url",null),e([a("url")],T.prototype,"writeUrl",null),e([o({dependsOn:["layerId"]})],T.prototype,"parsedUrl",null),e([o({readOnly:!0})],T.prototype,"store",void 0),e([o({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],T.prototype,"rootNode",void 0),T=e([s("esri.layers.mixins.SceneService")],T),T},U=-1e38,E=!1,P="Scene Service",A={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{P as SCENE_SERVICE_ITEM_TYPE,T as SceneService};
