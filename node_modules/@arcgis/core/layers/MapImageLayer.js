/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{isSome as r}from"../core/maybe.js";import"../core/Logger.js";import{Integer as t}from"../core/accessorSupport/ensureType.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import{reader as o}from"../core/accessorSupport/decorators/reader.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../core/accessorSupport/decorators/writer.js";import p from"../core/Error.js";import"../core/urlUtils.js";import"../core/uuid.js";import{nameToId as m}from"../core/accessorSupport/PropertyOrigin.js";import"../portal/support/resourceExtension.js";import{resolve as n,reject as l,isAbortError as c}from"../core/promiseUtils.js";import u from"../geometry/Extent.js";import y from"../request.js";import{loadAll as h}from"../core/loadAll.js";import d from"./Layer.js";import f from"../TimeExtent.js";import{MultiOriginJSONMixin as g}from"../core/MultiOriginJSONSupport.js";import{url as j}from"./support/commonProperties.js";import{OperationalLayer as b}from"./mixins/OperationalLayer.js";import{ArcGISService as x}from"./mixins/ArcGISService.js";import{BlendLayer as v}from"./mixins/BlendLayer.js";import{CustomParametersMixin as S}from"./mixins/CustomParametersMixin.js";import{PortalLayer as w}from"./mixins/PortalLayer.js";import{RefreshableLayer as O}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as L}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as E}from"./mixins/TemporalLayer.js";import{HandleOwnerMixin as I}from"../core/HandleOwner.js";import{getScale as M}from"../geometry/support/scaleUtils.js";import{ArcGISMapService as q}from"./mixins/ArcGISMapService.js";import P from"./support/Sublayer.js";import{shouldWriteSublayerStructure as N}from"./support/sublayerUtils.js";import{SublayersOwner as R}from"./mixins/SublayersOwner.js";import{ExportImageParameters as J}from"./support/ExportImageParameters.js";let U=class extends(v(E(L(O(R(q(x(b(w(g(S(I(d))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.labelsVisible=!1,this.isReference=null,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const t=r(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),n(this)}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const o=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let i=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=m(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;i=N(o,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");i=N(o,e.sublayers,m(e.origin))}}const a=[],p={writeSublayerStructure:i,...s};let n=i;o.forEach((e=>{const r=e.write({},p);a.push(r),n=n||"user"===e.originOf("visible")}));a.some((e=>Object.keys(e).length>1))&&(r.layers=a),n&&(r.visibleLayers=o.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,r,t,s){const o=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const i=new J({layer:this,scale:M({extent:e,width:r})*o}),a=i.toJSON();i.destroy();const p=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},m=e&&e.spatialReference,n=m.wkid||JSON.stringify(m.toJSON());a.dpi*=o;const l={};if(null!=s&&s.timeExtent){const{start:e,end:r}=s.timeExtent.toJSON();l.time=e&&r&&e===r?""+e:`${null==e?"null":e},${null==r?"null":r}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(l.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:r+","+t,...a,...p,...l}}async fetchImage(e,r,t,s){const o={responseType:"image"};s&&s.timestamp&&(o.query={...o.query,_ts:s.timestamp}),s&&s.signal&&(o.signal=s.signal),this.customParameters&&Object.keys(this.customParameters).length&&(o.query={...this.customParameters,...o.query});const i=this.parsedUrl.path+"/export",a={...this.parsedUrl.query,...this.createExportImageParameters(e,r,t,s),f:"image",_ts:this.alwaysRefetch?Date.now():null};if(null!=a.dynamicLayers&&!this.capabilities.exportMap.supportsDynamicLayers)return l(new p("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:a}));o.query?o.query={...a,...o.query}:o.query=a;return y(i,o).then((e=>e.data)).catch((e=>{if(c(e))throw e;throw new p("mapimagelayer:image-fetch-error",`Unable to load image: ${i}`,{error:e})}))}async fetchRecomputedExtents(e={}){const r={...e,query:{returnUpdates:!0,f:"json"}},{data:t}=await y(this.url,r),{extent:s,fullExtent:o,timeExtent:i}=t,a=s||o;return{fullExtent:a&&u.fromJSON(a),timeExtent:i&&f.fromJSON({start:i[0],end:i[1]})}}loadAll(){return h(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:t}=await y(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:e});t&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}};e([s()],U.prototype,"alwaysRefetch",void 0),e([s()],U.prototype,"dpi",void 0),e([s()],U.prototype,"gdbVersion",void 0),e([s({json:{read:!1,write:!1}})],U.prototype,"popupEnabled",void 0),e([s()],U.prototype,"imageFormat",void 0),e([o("imageFormat",["supportedImageFormatTypes"])],U.prototype,"readImageFormat",null),e([s({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],U.prototype,"imageMaxHeight",void 0),e([s({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],U.prototype,"imageMaxWidth",void 0),e([s()],U.prototype,"imageTransparency",void 0),e([s({json:{read:!1,write:!1}})],U.prototype,"labelsVisible",void 0),e([s({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],U.prototype,"isReference",void 0),e([s({type:["ArcGISMapServiceLayer"]})],U.prototype,"operationalLayerType",void 0),e([s()],U.prototype,"sourceJSON",void 0),e([s({json:{write:{ignoreOrigin:!0}}})],U.prototype,"sublayers",void 0),e([a("sublayers",{layers:{type:[P]},visibleLayers:{type:[t]}})],U.prototype,"writeSublayers",null),e([s({type:["show","hide","hide-children"]})],U.prototype,"listMode",void 0),e([s({json:{read:!1},readOnly:!0,value:"map-image"})],U.prototype,"type",void 0),e([s(j)],U.prototype,"url",void 0),U=e([i("esri.layers.MapImageLayer")],U);var T=U;export default T;
