/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import o from"../config.js";import{isSome as r}from"../core/maybe.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import{reader as i}from"../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{getFilename as l}from"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{resolve as p}from"../core/promiseUtils.js";import n from"../symbols/Symbol.js";import a from"../symbols/SimpleLineSymbol.js";import m from"../request.js";import y from"../symbols/PictureMarkerSymbol.js";import c from"../symbols/SimpleFillSymbol.js";import u from"../symbols/SimpleMarkerSymbol.js";import"../chunks/symbols.js";import S from"./Layer.js";import{MultiOriginJSONMixin as d}from"../core/MultiOriginJSONSupport.js";import{legendEnabled as f,url as h}from"./support/commonProperties.js";import{OperationalLayer as j}from"./mixins/OperationalLayer.js";import{BlendLayer as b}from"./mixins/BlendLayer.js";import{PortalLayer as v}from"./mixins/PortalLayer.js";import{RefreshableLayer as g}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as x}from"./mixins/ScaleRangeLayer.js";const R=["atom","xml"],C={base:n,key:"type",typeMap:{"simple-line":a},errorContext:"symbol"},L={base:n,key:"type",typeMap:{"picture-marker":y,"simple-marker":u},errorContext:"symbol"},k={base:n,key:"type",typeMap:{"simple-fill":c},errorContext:"symbol"};let O=class extends(b(g(j(v(x(d(S))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,o){return"string"==typeof e?{url:e,...o}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?l(this.url,R)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,o){return o.featureCollection.layers.forEach((e=>{const o=e.layerDefinition.drawingInfo.renderer.symbol;o&&"esriSFS"===o.type&&o.outline&&-1!==o.outline.style.indexOf("esriSFS")&&(o.outline.style="esriSLSSolid")})),o.featureCollection.layers}load(e){const o=r(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then((()=>this._fetchService(o)),(()=>this._fetchService(o)))),p(this)}async _fetchService(e){const{data:r}=await m(o.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(r,{origin:"service"})}};e([t()],O.prototype,"description",void 0),e([t({dependsOn:["url"],json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],O.prototype,"title",null),e([t()],O.prototype,"featureCollections",void 0),e([i("service","featureCollections",["featureCollection.layers"])],O.prototype,"readFeatureCollections",null),e([t(f)],O.prototype,"legendEnabled",void 0),e([t({types:C,json:{write:!0}})],O.prototype,"lineSymbol",void 0),e([t({type:["show","hide"]})],O.prototype,"listMode",void 0),e([t({types:L,json:{write:!0}})],O.prototype,"pointSymbol",void 0),e([t({types:k,json:{write:!0}})],O.prototype,"polygonSymbol",void 0),e([t({type:["GeoRSS"]})],O.prototype,"operationalLayerType",void 0),e([t()],O.prototype,"outSpatialReference",void 0),e([t(h)],O.prototype,"url",void 0),e([t({readOnly:!0,json:{read:!1},value:"geo-rss"})],O.prototype,"type",void 0),O=e([s("esri.layers.GeoRSSLayer")],O);var F=O;export default F;
