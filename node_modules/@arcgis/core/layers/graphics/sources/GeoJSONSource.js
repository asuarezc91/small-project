/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/has.js";import{isSome as r,isNone as s}from"../../../core/maybe.js";import o from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import a from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{resolve as u}from"../../../core/promiseUtils.js";import l from"../../../geometry/Extent.js";import p from"../../../geometry/Polygon.js";import{typeKebabDictionary as c}from"../../../geometry/support/typeUtils.js";import"../../../geometry.js";import d from"../../../core/Loadable.js";import{open as m}from"../../../core/workers/workers.js";import h from"../../../tasks/support/FeatureSet.js";import y from"../../support/TimeInfo.js";import{queryCapabilities as f}from"../data/QueryEngineCapabilities.js";const g=o.getLogger("esri.layers.graphics.sources.GeoJSONSource");let j=class extends d{constructor(){super(...arguments),this.type="geojson",this.fullExtent=null,this.timeInfo=null}load(t){const e=r(t)?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),u(this)}destroy(){var t;null==(t=this._connection)||t.close(),this._connection=null}applyEdits(t){return this.load().then((()=>this._applyEdits(t)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryFeatures",t?t.toJSON():null,e))).then((t=>h.fromJSON(t)))}queryFeaturesJSON(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryFeatures",t?t.toJSON():null,e)))}queryFeatureCount(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)))}queryObjectIds(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)))}queryExtent(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryExtent",t?t.toJSON():null,e))).then((t=>({count:t.count,extent:l.fromJSON(t.extent)})))}_applyEdits(t){if(!this._connection)throw new a("geojson-layer-source:edit-failure","Memory source not loaded");const e=this.layer.objectIdField,r=[],s=[],o=[];if(t.addFeatures)for(const e of t.addFeatures)r.push(this._serializeFeature(e));if(t.deleteFeatures)for(const r of t.deleteFeatures)"objectId"in r&&null!=r.objectId?s.push(r.objectId):"attributes"in r&&null!=r.attributes[e]&&s.push(r.attributes[e]);if(t.updateFeatures)for(const e of t.updateFeatures)o.push(this._serializeFeature(e));return this._connection.invoke("applyEdits",{adds:r,updates:o,deletes:s}).then((({fullExtent:t,timeExtent:e,featureEditResults:r})=>{if(this.fullExtent=t,this.timeInfo){const t=this.timeInfo.clone();t.read({timeExtent:e}),this.timeInfo=t}return this._createEditsResult(r)}))}_createEditsResult(t){return{addFeatureResults:t.addResults?t.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:t.updateResults?t.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:t.deleteResults?t.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(t){const e=!0===t.success?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new a("geojson-layer-source:edit-failure",e.description,{code:e.code}):null}}_serializeFeature(t){const{attributes:e}=t,r=this._geometryForSerialization(t);return r?{geometry:r.toJSON(),attributes:e}:{attributes:e}}_geometryForSerialization(t){const{geometry:e}=t;return s(e)?null:"mesh"===e.type||"extent"===e.type?p.fromExtent(e.extent):e}async _startWorker(t){this._connection=await m("GeoJSONSourceWorker",{strategy:e("feature-layers-workers")?"dedicated":"local",signal:t});const{fields:r,spatialReference:s,hasZ:o,geometryType:i,objectIdField:n,url:a,timeInfo:u}=this.layer,p="defaults"===this.layer.originOf("spatialReference"),d={url:a,fields:r&&r.map((t=>t.toJSON())),geometryType:c.toJSON(i),hasZ:o,objectIdField:n,timeInfo:u?u.toJSON():null,spatialReference:p?null:s&&s.toJSON()},h=await this._connection.invoke("load",d,{signal:t});for(const t of h.warnings)g.warn(t.message,{layer:this.layer,warning:t});h.featureErrors.length&&g.warn(`Encountered ${h.featureErrors.length} validation errors while loading features`,h.featureErrors),this.fullExtent=l.fromJSON(h.layerDefinition.extent),this.timeInfo=y.fromJSON(h.layerDefinition.timeInfo),this.sourceJSON=h.layerDefinition,this.capabilities={attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:h.layerDefinition.hasZ},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!0,supportsDelete:!0,supportsEditing:!0,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!0,supportsExceedsLimitStatistics:!0},query:f,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0},editing:{supportsGeometryUpdate:!0,supportsGlobalId:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}};t([i()],j.prototype,"capabilities",void 0),t([i()],j.prototype,"type",void 0),t([i()],j.prototype,"fullExtent",void 0),t([i({constructOnly:!0})],j.prototype,"layer",void 0),t([i()],j.prototype,"sourceJSON",void 0),t([i()],j.prototype,"timeInfo",void 0),j=t([n("esri.layers.graphics.sources.GeoJSONSource")],j);var S=j;export default S;export{j as GeoJSONSource};
