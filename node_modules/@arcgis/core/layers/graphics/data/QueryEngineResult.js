/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isNone as t,isSome as e}from"../../../core/maybe.js";import{resolve as s,reject as i}from"../../../core/promiseUtils.js";import{isValid as r,equals as n}from"../../../geometry/support/spatialReferenceUtils.js";import{convertFromGeometry as a}from"../featureConversionUtils.js";import{project as o,projectMany as u}from"./projectionSupport.js";import{toQuantizationTransform as l}from"../../../geometry/support/quantizationUtils.js";import{getWhereClause as c}from"./attributeSupport.js";import h from"./AttributesBuilder.js";import{c as f,e as d,t as m}from"../../../chunks/spatialQuerySupport.js";import{getTimeOperator as p}from"./timeSupport.js";function g(t){return t.substr(24,12)+t.substr(19,4)+t.substr(16,2)+t.substr(14,2)+t.substr(11,2)+t.substr(9,2)+t.substr(6,2)+t.substr(4,2)+t.substr(2,2)+t.substr(0,2)}function y(t,e,s){return(s?t>e:t<e)?-1:(s?t<e:t>e)?1:0}function I(t,e,s){return s?e-t:t-e}function b(t,e,s,i){if(s&&"esriFieldTypeDate"===s.type){const s=new Date(t).getTime(),r=new Date(e).getTime();if(!isNaN(s)&&!isNaN(r))return I(s,r,i)}if("number"==typeof t&&"number"==typeof e)return I(t,e,i);if("string"==typeof t&&"string"==typeof e){const r=t.toUpperCase(),n=e.toUpperCase();return!s||"esriFieldTypeGUID"!==s.type&&"esriFieldTypeGlobalID"!==s.type?y(r,n,i):y(g(r),g(n),i)}return i?1:-1}class x{constructor(t,e,s){this.items=t,this.queryGeometry=e,this.definitionExpression=s.definitionExpression,this.geometryType=s.geometryType,this.hasM=s.hasM,this.hasZ=s.hasZ,this.objectIdField=s.objectIdField,this.spatialReference=s.spatialReference,this.fieldsIndex=s.fieldsIndex,this.timeInfo=s.timeInfo,this.featureAdapter=s.featureAdapter,this.aggregateAdapter=s.aggregateAdapter}get size(){return this.items.length}createQueryResponseForCount(t){const e=new h(t,this.featureAdapter,this.fieldsIndex);if(!t.outStatistics)return e.countDistinctValues(this.items);const{groupByFieldsForStatistics:s,having:i}=t;if(!!!(null==s?void 0:s.length))return 1;const r=new Map,n=new Map,a=new Set,o=t.outStatistics;for(const t of o){const{statisticType:o}=t,u="exceedslimit"!==o?t.onStatisticField:void 0;if(!n.has(u)){const t=[];for(const i of s){const s=this._getAttributeValues(e,i,r);t.push(s)}n.set(u,this._calculateUniqueValues(t))}const l=n.get(u);for(const t in l){const{data:s,items:r}=l[t],n=s.join(",");i&&!e.validateItems(r,i)||a.add(n)}}return a.size}createQueryResponse(t){let e;if(t.outStatistics){e=t.outStatistics.some((t=>"exceedslimit"===t.statisticType))?this._createExceedsLimitQueryResponse(t):this._createStatisticsQueryResponse(t)}else e=this._createFeatureQueryResponse(t);return t.returnQueryGeometry&&(r(t.outSR)&&!n(this.queryGeometry.spatialReference,t.outSR)?e.queryGeometry=f({spatialReference:t.outSR,...o(this.queryGeometry,this.queryGeometry.spatialReference,t.outSR)}):e.queryGeometry=f({spatialReference:t.outSR,...this.queryGeometry})),e}executeAttributesQuery(t){const e=c(t.where,this.fieldsIndex);if(!e)return s(this);if(e.isStandardized){let i=0;const r=[];for(const t of this.items)e.testFeature(t,this.featureAdapter)&&(r[i++]=t);const n=new x(r,this.queryGeometry,this);return n.definitionExpression=t.where,s(n)}return i(new TypeError("Where clause is not standardized"))}executeAggregateIdsQuery(e){if(!e.aggregateIds||!e.aggregateIds.length||t(this.aggregateAdapter))return s(this);const i=new Set;for(const t of e.aggregateIds){this.aggregateAdapter.getFeatureObjectIds(t).forEach((t=>i.add(t)))}const r=this.featureAdapter.getObjectId;return s(new x(this.items.filter((t=>i.has(r(t)))),this.queryGeometry,this))}executeObjectIdsQuery(t){if(!t.objectIds||!t.objectIds.length)return s(this);const e=new Set(t.objectIds),i=this.featureAdapter.getObjectId;return s(new x(this.items.filter((t=>e.has(i(t)))),this.queryGeometry,this))}executeTimeQuery(t){const i=p(this.timeInfo,t.timeExtent,this.featureAdapter);if(!e(i))return s(this);const r=this.items.filter(i);return s(new x(r,this.queryGeometry,this))}filterLatest(){const{trackIdField:t,startTimeField:e,endTimeField:i}=this.timeInfo,r=i||e,n=new Map,a=this.featureAdapter.getAttribute;for(const e of this.items){const s=a(e,t),i=a(e,r),o=n.get(s);(!o||i>a(o,r))&&n.set(s,e)}const o=Array.from(n.values());return s(new x(o,this.queryGeometry,this))}async project(t){if(!t||n(this.spatialReference,t))return this;const e=this.featureAdapter,s=(await u(this.items.map((t=>d(this.geometryType,this.hasZ,this.hasM,e.getGeometry(t)))),this.spatialReference,t)).map(((t,s)=>e.cloneWithGeometry(this.items[s],a(t,this.hasZ,this.hasM))));return new x(s,this.queryGeometry,{definitionExpression:this.definitionExpression,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,objectIdField:this.objectIdField,spatialReference:t,fieldsIndex:this.fieldsIndex,timeInfo:this.timeInfo,featureAdapter:this.featureAdapter})}_sortFeatures(t,e,s){if(t.length>1&&e&&e.length)for(const i of e.reverse()){const e=i.split(" "),r=e[0],n=this.fieldsIndex.get(r),a=e[1]&&"desc"===e[1].toLowerCase();t.sort(((t,e)=>b(s(t,r,n),s(e,r,n),n,a)))}}_createFeatureQueryResponse(t){const e=this.items,{geometryType:s,hasM:i,hasZ:r,objectIdField:n,spatialReference:a}=this,{outFields:o,outSR:u,quantizationParameters:c,resultRecordCount:h,resultOffset:d,returnZ:m,returnM:p}=t,g=null!=h&&e.length>(d||0)+h,y=o&&(o.indexOf("*")>-1?[...this.fieldsIndex.fields]:o.map((t=>this.fieldsIndex.get(t))));return{exceededTransferLimit:g,features:this._createFeatures(t,e),fields:y,geometryType:s,hasM:i&&p,hasZ:r&&m,objectIdFieldName:n,spatialReference:f(u||a),transform:c&&l(c)||null}}_createFeatures(t,e){const s=new h(t,this.featureAdapter,this.fieldsIndex),{hasM:i,hasZ:r}=this,{orderByFields:n,quantizationParameters:a,returnGeometry:o,returnCentroid:u,maxAllowableOffset:c,resultOffset:f,resultRecordCount:p,returnZ:g=!1,returnM:y=!1}=t,I=r&&g,b=i&&y;let x=[],F=0;const T=[...e];if(this._sortFeatures(T,n,((t,e,i)=>s.getFieldValue(t,e,i))),o||u){const t=l(a);if(o&&!u)for(const e of T)x[F++]={attributes:s.getAttributes(e),geometry:d(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(e),c,t,I,b)};else if(!o&&u)for(const e of T)x[F++]={attributes:s.getAttributes(e),centroid:m(this,this.featureAdapter.getCentroid(e,this),t)};else for(const e of T)x[F++]={attributes:s.getAttributes(e),centroid:m(this,this.featureAdapter.getCentroid(e,this),t),geometry:d(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(e),c,t,I,b)}}else for(const t of T){const e=s.getAttributes(t);e&&(x[F++]={attributes:e})}const S=f||0;if(null!=p){const t=S+p;x=x.slice(S,Math.min(x.length,t))}return x}_createExceedsLimitQueryResponse(t){let e=!1,s=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const e of t.outStatistics)if("exceedslimit"===e.statisticType){s=null!=e.maxPointCount?e.maxPointCount:Number.POSITIVE_INFINITY,i=null!=e.maxRecordCount?e.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=e.maxVertexCount?e.maxVertexCount:Number.POSITIVE_INFINITY;break}if("esriGeometryPoint"===this.geometryType)e=this.items.length>s;else if(this.items.length>i)e=!0;else{const t=this.hasZ?this.hasM?4:3:this.hasM?3:2,s=this.featureAdapter;e=this.items.reduce(((t,e)=>{const i=s.getGeometry(e);return t+(i&&i.coords.length||0)}),0)/t>r}return{fields:[{name:"exceedslimit",type:"esriFieldTypeInteger",alias:"exceedslimit",sqlType:"sqlTypeInteger",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(e)}}]}}_createStatisticsQueryResponse(t){const e={attributes:{}},s=[],i=new Map,r=new Map,n=new Map,a=new Map,o=new h(t,this.featureAdapter,this.fieldsIndex),u=t.outStatistics,{groupByFieldsForStatistics:l,having:c,orderByFields:f}=t,d=l&&l.length,m=!!d,p=m&&l[0],g=m&&!this.fieldsIndex.get(p);for(const t of u){const{outStatisticFieldName:u,statisticType:h}=t,f=t,y="exceedslimit"!==h?t.onStatisticField:void 0,I="percentile_disc"===h||"percentile_cont"===h,b=m&&1===d&&(y===p||g)&&"count"===h;if(m){if(!n.has(y)){const t=[];for(const e of l){const s=this._getAttributeValues(o,e,i);t.push(s)}n.set(y,this._calculateUniqueValues(t))}const t=n.get(y);for(const e in t){const{count:s,data:r,items:n,itemPositions:h}=t[e],d=r.join(",");if(!c||o.validateItems(n,c)){const t=a.get(d)||{attributes:{}};let e=null;if(b)e=s;else{const t=this._getAttributeValues(o,y,i),s=h.map((e=>t[e]));e=I&&"statisticParameters"in f?this._getPercentileValue(f,s):this._getStatisticValue(f,s)}t.attributes[u]=e,l.forEach(((e,s)=>t.attributes[this.fieldsIndex.get(e)?e:`EXPR_${s+1}`]=r[s])),a.set(d,t)}}}else{const t=this._getAttributeValues(o,y,i);e.attributes[u]=I&&"statisticParameters"in f?this._getPercentileValue(f,t):this._getStatisticValue(f,t,r)}s.push({name:u,alias:u,type:"esriFieldTypeDouble"})}const y=m?Array.from(a.values()):[e];return this._sortFeatures(y,f,((t,e)=>t.attributes[e])),{fields:s,features:y}}_getStatisticValue(t,e,s){const{onStatisticField:i,statisticType:r}=t,n=s&&s.has(i)?s.get(i):this._calculateStatistics(e);s&&s.set(i,n);return n["var"===r?"variance":r]}_getPercentileValue(t,e){const{onStatisticField:s,statisticParameters:i,statisticType:r}=t,{value:n,orderBy:a}=i,o="desc"===a,u=this.fieldsIndex.get(s),l=[...e].filter((t=>null!=t)).sort(((t,e)=>b(t,e,u,o)));return this._calculatePercentile(l,n,"percentile_disc"===r)}_getAttributeValues(t,e,s){if(s.has(e))return s.get(e);const i=this.fieldsIndex.get(e),r=this.items.map((s=>t.getFieldValue(s,e,i)));return s.set(e,r),r}_calculateStatistics(t){let e=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,i=null,r=null,n=null,a=null;const o=[];let u=0;for(const r of t)"string"==typeof r?u++:null==r||isNaN(r)||(i+=r,e=Math.min(e,r),s=Math.max(s,r),o.push(r),u++);if(u){r=i/u;let t=0;for(const e of o)t+=Math.pow(e-r,2);a=u>1?t/(u-1):0,n=Math.sqrt(a)}else e=null,s=null;return{avg:r,count:u,max:s,min:e,stddev:n,sum:i,variance:a}}_calculateUniqueValues(t){const e={},s=this.items,i=s.length;for(let r=0;r<i;r++){const i=s[r],n=[];for(const e of t)n.push(e[r]);const a=n.join(",");null==e[a]?e[a]={count:1,data:n,items:[i],itemPositions:[r]}:(e[a].count++,e[a].items.push(i),e[a].itemPositions.push(r))}return e}_calculatePercentile(t,e,s){if(0===t.length)return null;if(e<=0)return t[0];if(e>=1)return t[t.length-1];const i=(t.length-1)*e,r=Math.floor(i),n=r+1,a=i%1,o=t[r],u=t[n];return n>=t.length||s||"string"==typeof o||"string"==typeof u?o:o*(1-a)+u*a}}export default x;
