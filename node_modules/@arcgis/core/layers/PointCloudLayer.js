/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{clone as r}from"../core/lang.js";import{setDeepValue as t}from"../core/object.js";import{isSome as o}from"../core/maybe.js";import i from"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import{reader as n}from"../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../core/accessorSupport/decorators/writer.js";import l from"../core/Error.js";import{join as d}from"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{resolve as u}from"../core/promiseUtils.js";import m from"../popup/ExpressionInfo.js";import f from"../PopupTemplate.js";import c from"../request.js";import y from"./Layer.js";import{MultiOriginJSONMixin as h}from"../core/MultiOriginJSONSupport.js";import{popupEnabled as g,elevationInfo as v,legendEnabled as I}from"./support/commonProperties.js";import{OperationalLayer as w}from"./mixins/OperationalLayer.js";import j from"./support/Field.js";import b from"./support/FieldsIndex.js";import{ArcGISService as S}from"./mixins/ArcGISService.js";import{PortalLayer as x}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as T}from"./mixins/ScaleRangeLayer.js";import{defineFieldProperties as P}from"./support/fieldProperties.js";import{createPopupTemplate as F}from"../support/popupUtils.js";import{SceneService as L}from"./mixins/SceneService.js";import{types as E}from"./pointCloudFilters/typeUtils.js";import{types as C}from"../renderers/support/pointCloud/typeUtils.js";const O=i.getLogger("esri.layers.PointCloudLayer"),N=P();let R=class extends(L(S(w(x(T(h(y))))))){constructor(...e){super(...e),this.operationalLayerType="PointCloudLayer",this.popupEnabled=!0,this.popupTemplate=null,this.opacity=1,this.filters=[],this.fields=null,this.outFields=null,this.path=null,this.legendEnabled=!0,this.renderer=null,this.type="point-cloud"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}get defaultPopupTemplate(){return this.attributeStorageInfo?this.createPopupTemplate():null}get fieldsIndex(){return new b(this.fields)}getFieldDomain(e){const r=this.fieldsIndex.get(e);return r&&r.domain?r.domain:null}readServiceFields(e,t,o){return Array.isArray(e)?e.map((e=>{const t=new j;return"FieldTypeInteger"===e.type&&((e=r(e)).type="esriFieldTypeInteger"),t.read(e,o),t})):Array.isArray(t.attributeStorageInfo)?t.attributeStorageInfo.map((e=>new j({name:e.name,type:"ELEVATION"===e.name?"double":"integer"}))):null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}writeRenderer(e,r,o,i){t("layerDefinition.drawingInfo.renderer",e.write(null,i),r)}load(e){const r=o(e)?e.signal:null,t=this.loadFromPortal({supportedTypes:["Scene Service"]},e).then((()=>this._fetchService(r)),(()=>this._fetchService(r)));return this.addResolvingPromise(t),u(this)}createPopupTemplate(e){const r=F(this,e);return this.formatPopupTemplateReturnsField(r),this.formatPopupTemplateRGBField(r),r}formatPopupTemplateReturnsField(e){const r=this.fieldsIndex.get("RETURNS");if(!r)return;const t=e.fieldInfos.find((e=>e.fieldName===r.name));if(!t)return;const o=new m({name:"pcl-returns-decoded",title:r.alias||r.name,expression:`\n        var returnValue = $feature.${r.name};\n        return (returnValue % 16) + " / " + Floor(returnValue / 16);\n      `});e.expressionInfos=[...e.expressionInfos||[],o],t.fieldName="expression/pcl-returns-decoded"}formatPopupTemplateRGBField(e){const r=this.fieldsIndex.get("RGB");if(!r)return;const t=e.fieldInfos.find((e=>e.fieldName===r.name));if(!t)return;const o=new m({name:"pcl-rgb-decoded",title:r.alias||r.name,expression:`\n        var rgb = $feature.${r.name};\n        var red = Floor(rgb / 65536, 0);\n        var green = Floor((rgb - (red * 65536)) / 256,0);\n        var blue = rgb - (red * 65536) - (green * 256);\n\n        return "rgb(" + red + "," + green + "," + blue + ")";\n      `});e.expressionInfos=[...e.expressionInfos||[],o],t.fieldName="expression/pcl-rgb-decoded"}async queryCachedStatistics(e,r){if(await this.load(r),!this.attributeStorageInfo)throw new l("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const t=this.fieldsIndex.get(e);if(!t)throw new l("pointcloudlayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.attributeStorageInfo)if(e.name===t.name){const t=d(this.parsedUrl.path,`./statistics/${e.key}`);return c(t,{query:{f:"json"},responseType:"json",signal:r?r.signal:null}).then((e=>e.data))}throw new l("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,r){return this._debouncedSaveOperations(1,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"};return this._debouncedSaveOperations(0,e)}validateLayer(e){if(e.layerType&&"PointCloud"!==e.layerType)throw new l("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})}hasCachedStatistics(e){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some((r=>r.name===e))}_getTypeKeywords(){return["PointCloud"]}_validateElevationInfo(){const e=this.elevationInfo;e&&("absolute-height"!==e.mode&&O.warn(".elevationInfo=","Point cloud layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&O.warn(".elevationInfo=","Point cloud layers do not support featureExpressionInfo"))}};e([s({type:["PointCloudLayer"]})],R.prototype,"operationalLayerType",void 0),e([s(g)],R.prototype,"popupEnabled",void 0),e([s({type:f,json:{name:"popupInfo",write:!0}})],R.prototype,"popupTemplate",void 0),e([s({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo"]})],R.prototype,"defaultPopupTemplate",null),e([s({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],R.prototype,"opacity",void 0),e([s({type:["show","hide"]})],R.prototype,"listMode",void 0),e([s({types:[E],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",write:!0}})],R.prototype,"filters",void 0),e([s({type:[j]})],R.prototype,"fields",void 0),e([s({readOnly:!0,dependsOn:["fields"]})],R.prototype,"fieldsIndex",null),e([n("service","fields",["fields","attributeStorageInfo"])],R.prototype,"readServiceFields",null),e([s(N.outFields)],R.prototype,"outFields",void 0),e([s({readOnly:!0})],R.prototype,"attributeStorageInfo",void 0),e([s(v)],R.prototype,"elevationInfo",null),e([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],R.prototype,"path",void 0),e([s(I)],R.prototype,"legendEnabled",void 0),e([s({types:C,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:C},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],R.prototype,"renderer",void 0),e([p("renderer")],R.prototype,"writeRenderer",null),e([s({json:{read:!1},readOnly:!0})],R.prototype,"type",void 0),R=e([a("esri.layers.PointCloudLayer")],R);var _=R;export default _;
