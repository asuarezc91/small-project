/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{isSome as t,isNone as r}from"../core/maybe.js";import s from"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{getProperties as o}from"../core/accessorSupport/utils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{reader as a}from"../core/accessorSupport/decorators/reader.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import p from"../core/Error.js";import{join as l}from"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{all as d,resolve as y,isAbortError as u}from"../core/promiseUtils.js";import{fixRendererFields as c}from"./support/fieldUtils.js";import f from"../PopupTemplate.js";import h from"../request.js";import m from"./Layer.js";import{MultiOriginJSONMixin as g}from"../core/MultiOriginJSONSupport.js";import{whenValidOnce as v}from"../core/watchUtils.js";import{elevationInfo as b,labelsVisible as I,legendEnabled as j,opacityDrawingInfo as w,popupEnabled as L,screenSizePerspectiveEnabled as S}from"./support/commonProperties.js";import{OperationalLayer as F}from"./mixins/OperationalLayer.js";import"../renderers/Renderer.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/SimpleRenderer.js";import{webSceneRendererTypes as O}from"../renderers/support/types.js";import"../renderers/support/jsonUtils.js";import _ from"./support/FieldsIndex.js";import{ArcGISService as T}from"./mixins/ArcGISService.js";import{PortalLayer as P}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as x}from"./mixins/ScaleRangeLayer.js";import E from"./support/FeatureReduction.js";import D from"./support/LabelClass.js";import U from"./support/FeatureReductionSelection.js";import{defineFieldProperties as A}from"./support/fieldProperties.js";import{reader as R}from"./support/labelingInfo.js";import{loadStyleRenderer as q}from"../renderers/support/styleUtils.js";import{createPopupTemplate as Q}from"../support/popupUtils.js";import k from"../tasks/support/Query.js";import{zeroCapabilities as N}from"./support/capabilities.js";import{I3SNodePageDefinition as C,I3SMaterialDefinition as G,I3STextureSetDefinition as V,I3SGeometryDefinition as M}from"./support/I3SLayerDefinitions.js";import{SceneService as K}from"./mixins/SceneService.js";import{FetchAssociatedFeatureLayer as $}from"./support/FetchAssociatedFeatureLayer.js";import W from"./support/RangeInfo.js";const z=["3DObject","Point"],Z=s.getLogger("esri.layers.SceneLayer"),B=A();let J=class extends(K(T(F(P(x(g(m))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new _(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:C.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return X[this.profile]||"mesh"}set renderer(e){c(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=t(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:N,{query:r,editing:{supportsGlobalId:s,supportsRollbackOnFailure:o,supportsUploadWithItemId:i},data:{supportsZ:a,supportsM:n,isVersioned:p},operations:{supportsEditing:l,supportsUpdate:d}}=e,y=e.operations.supportsChangeTracking;return{query:r,editing:{supportsGlobalId:s,supportsRollbackOnFailure:o,supportsGeometryUpdate:!1,supportsUploadWithItemId:i},data:{supportsZ:a,supportsM:n,isVersioned:p},operations:{supportsEditing:l&&y,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&y}}}get defaultPopupTemplate(){return t(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return t(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&H[r]?H[r]:(Z.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const r=t(e)?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).then((()=>this._fetchService(r)),(()=>this._fetchService(r))).then((()=>d([this._verifyRootNodeAndUpdateExtent(this.nodePages,r),this._setAssociatedFeatureLayer(r)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>q(this,{origin:"service"},r))).then((()=>c(this.renderer,this.fields)));return this.addResolvingPromise(s),y(this)}createQuery(){const e=new k;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(Z.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Q(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return t(e)&&e.loaded?y(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),r(this.associatedLayer))throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new p("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new p("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=l(this.parsedUrl.path,e.href);return h(r,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new p("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const s=await import("./graphics/editingSupport.js");if(await this.load(),r(this.associatedLayer))throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),s.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===z.indexOf(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,s=!1;if(null==e)r=!0,s=!0;else{const o=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,s=o;break;case"vertex-reference-frame":r=!0,s=!o;break;default:r=!1}}if(!r)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!s)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const r=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),s=!!(t(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),o={supportsLabelingInfo:r,supportsRenderer:r,supportsPopupTemplate:r||s,supportsLayerQuery:s};this._fieldUsageInfo[e.name]=o}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(r(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(r(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=o(this);for(let r=0;r<e.length;r++){const s=e[r];this._buddyIsMoreImportant(s)&&(t.setDefaultOrigin(this.associatedLayer.originOf(s)),t.set(s,this.associatedLayer[s]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new $(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch()}catch(e){u(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){v(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?Z.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):Z.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_buddyIsMoreImportant(e){if(r(this.associatedLayer))return!1;const t=this.originIdOf(e),s=this.associatedLayer.originIdOf(e);return null!=s&&s<=2?null==t||t<2:null!=s&&s<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&Z.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&Z.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};e([i({types:{key:"type",base:E,typeMap:{selection:U}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],J.prototype,"featureReduction",void 0),e([i({type:[W],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],J.prototype,"rangeInfos",void 0),e([i({json:{read:!1}})],J.prototype,"associatedLayer",void 0),e([i({type:["show","hide"]})],J.prototype,"listMode",void 0),e([i({type:["ArcGISSceneServiceLayer"]})],J.prototype,"operationalLayerType",void 0),e([i({json:{read:!1},readOnly:!0})],J.prototype,"type",void 0),e([i({...B.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],J.prototype,"fields",void 0),e([i({readOnly:!0,dependsOn:["fields"]})],J.prototype,"fieldsIndex",null),e([i(B.outFields)],J.prototype,"outFields",void 0),e([i({type:C,readOnly:!0,json:{read:!1}})],J.prototype,"nodePages",void 0),e([a("service","nodePages",["nodePages","pointNodePages"])],J.prototype,"readNodePages",null),e([i({type:[G],readOnly:!0})],J.prototype,"materialDefinitions",void 0),e([i({type:[V],readOnly:!0})],J.prototype,"textureSetDefinitions",void 0),e([i({type:[M],readOnly:!0})],J.prototype,"geometryDefinitions",void 0),e([i({readOnly:!0})],J.prototype,"serviceUpdateTimeStamp",void 0),e([i({readOnly:!0})],J.prototype,"attributeStorageInfo",void 0),e([i({readOnly:!0})],J.prototype,"statisticsInfo",void 0),e([i({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],J.prototype,"definitionExpression",void 0),e([i({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],J.prototype,"path",void 0),e([i(b)],J.prototype,"elevationInfo",null),e([i({type:String,dependsOn:["profile"]})],J.prototype,"geometryType",null),e([i(I)],J.prototype,"labelsVisible",void 0),e([i({type:[D],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:R},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:R},write:!0}})],J.prototype,"labelingInfo",void 0),e([i(j)],J.prototype,"legendEnabled",void 0),e([i(w)],J.prototype,"opacity",void 0),e([i({types:O,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],J.prototype,"renderer",null),e([i({json:{read:!1}})],J.prototype,"cachedDrawingInfo",void 0),e([a("service","cachedDrawingInfo")],J.prototype,"readCachedDrawingInfo",null),e([i({readOnly:!0,json:{read:!1},dependsOn:["associatedLayer.capabilities"]})],J.prototype,"capabilities",null),e([i({type:Boolean,json:{read:!1}})],J.prototype,"editingEnabled",void 0),e([i(L)],J.prototype,"popupEnabled",void 0),e([i({type:f,json:{name:"popupInfo",write:!0}})],J.prototype,"popupTemplate",void 0),e([i({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],J.prototype,"defaultPopupTemplate",null),e([i({type:String,json:{read:!1}})],J.prototype,"objectIdField",void 0),e([a("service","objectIdField",["objectIdField","fields"])],J.prototype,"readObjectIdField",null),e([i({type:String,json:{read:!1}})],J.prototype,"globalIdField",void 0),e([a("service","globalIdField",["globalIdField","fields"])],J.prototype,"readGlobalIdField",null),e([i({readOnly:!0,type:String,json:{read:!1},dependsOn:["associatedLayer.displayField"]})],J.prototype,"displayField",null),e([i({type:String,json:{read:!1}})],J.prototype,"profile",void 0),e([a("service","profile",["store.profile"])],J.prototype,"readProfile",null),e([i({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],J.prototype,"normalReferenceFrame",void 0),e([i(S)],J.prototype,"screenSizePerspectiveEnabled",void 0),J=e([n("esri.layers.SceneLayer")],J);const H={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},X={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var Y=J;export default Y;
