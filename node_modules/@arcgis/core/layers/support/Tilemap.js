/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{clone as t}from"../../core/lang.js";import i from"../../core/Error.js";import{constant as e}from"../../core/arrayUtils.js";import a from"../../request.js";class l{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(t,i){if("unknown"!==this._allAvailability)return this._allAvailability;const e=(t-this.location.top)*this.location.width+(i-this.location.left),a=e%8,l=e>>3,o=this._tileAvailabilityBitSet;return l<0||l>o.length?"unknown":o[l]&1<<a?"available":"unavailable"}_updateFromData(t){const i=this.location.width,e=this.location.height;let a=!0,l=!0;const o=Math.ceil(i*e/8),n=new Uint8Array(o);let r=0;for(let i=0;i<t.length;i++){const e=i%8;t[i]?(l=!1,n[r]|=1<<e):a=!1,7===e&&++r}l?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(t,o){const r=t.service.request||a,{row:s,col:h,width:c,height:m}=t,d={query:{f:"json"}};return o=o?{...d,...o}:d,r(n(t),o).then((t=>t.data)).catch((t=>{if(t&&t.details&&422===t.details.httpStatus)return{location:{top:s,left:h,width:c,height:m},valid:!0,data:e(c*m,0)};throw t})).then((t=>{if(t.location&&(t.location.top!==s||t.location.left!==h||t.location.width!==c||t.location.height!==m))throw new i("tilemap:location-mismatch","Tilemap response for different location than requested",{response:t,definition:{top:s,left:h,width:c,height:m}});return l.fromJSON(t)}))}static fromJSON(i){l.validateJSON(i);const e=new l;return e.location=Object.freeze(t(i.location)),e._updateFromData(i.data),Object.freeze(e)}static validateJSON(t){if(!t||!t.location)throw new i("tilemap:missing-location","Location missing from tilemap response");if(!1===t.valid)throw new i("tilemap:invalid","Tilemap response was marked as invalid");if(!t.data)throw new i("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(t.data))throw new i("tilemap:data-mismatch","Data must be an array of numbers");if(t.data.length!==t.location.width*t.location.height)throw new i("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function o(t){return`${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}function n(t){let i;if("vector-tile"===t.service.type)i=`${t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;else{const e=t.service.tileServers;i=`${e&&e.length?e[t.row%e.length]:t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}const e=t.service.query;return e&&(i=`${i}?${e}`),i}export default l;export{l as Tilemap,o as tilemapDefinitionId,n as tilemapDefinitionUrl};
