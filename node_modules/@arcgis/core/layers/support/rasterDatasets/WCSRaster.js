/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as t,unwrap as i}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import o from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{isAbortError as n}from"../../../core/promiseUtils.js";import a from"../../../geometry/Point.js";import l from"../../../geometry/Extent.js";import"../../../geometry.js";import c from"../DimensionalDefinition.js";import{clip as p}from"../rasterFunctions/pixelUtils.js";import d from"./BaseRaster.js";import{coordsReversed as m}from"../wmsUtils.js";import{parse as h}from"./multipartParser.js";import{parseCapabilities as f}from"./wcsCapabilitiesParser.js";import{standardizeInterpolations as g,parseCoverages as u}from"./wcsCoverageParser.js";const v=["nearest neighbor","bilinear","bicubic"],w=["nearest","linear","cubic"],x=["nearest-neighbor","linear","cubic"];let y=class extends d{constructor(){super(...arguments),this.datasetFormat="WCSServer"}async open(e){await this.init();const t=null==e?void 0:e.signal,i=await this._getCapabilities(t);if(this.capabilities=i,!this.version){var r;let e=null==(r=i.capabilitiesVersion)?void 0:r.slice(0,3);"2.0"===e||"1.1"===e||"1.0"===e?this.version=i.capabilitiesVersion:(e=i.supportedVersions.find((e=>"2.0.1"===e))||i.supportedVersions.find((e=>"2.0"===e.slice(0,3)))||i.supportedVersions.find((e=>"1.1"===e.slice(0,3)))||i.supportedVersions.find((e=>"1.0"===e.slice(0,3)))||"1.0.0",this.version=e)}this.coverageId||(this.coverageId=i.coverages[0].id);const s=i.coverages.filter((e=>e.id===this.coverageId))[0];if(null==s)throw new o("wcsraster-open",`the coverageId ${this.coverageId} does not exist in capabilities`);const n=await this._describeCoverage(t);this.coverageInfo=n[0],"2.0"===this.version.slice(0,3)&&(this.coverageInfo.lonLatEnvelope=s.lonLatEnvelope,this.coverageInfo.supportedInterpolations=g(i.supportedInterpolations)),this.datasetName=this.coverageInfo.title;const{rasterInfo:a}=this.coverageInfo;this.createRemoteDatasetStorageInfo(a,512,512),this._set("rasterInfo",a);const{pixelType:l,bandCount:c}=await this._getPixelTypeAndBandCount(t);a.pixelType=l,1===a.bandCount&&c>1&&(a.bandCount=c),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{tileInfo:s,maximumPyramidLevel:n}=this.rasterInfo.storageInfo,l=s.lodAt(Math.max(n-e,0)),c=new a({x:l.resolution,y:l.resolution,spatialReference:s.spatialReference}),d=this.getTileExtent(c,t,i,s);let[m,h]=s.size;const f=this.rasterInfo.extent,g=d.xmax>f.xmax||d.ymin<f.ymin;let u=d;if(g&&(u=d.clone().intersection(f),m=Math.floor((u.xmax-u.xmin)/l.resolution),h=Math.floor((u.ymax-u.ymin)/l.resolution)),m<=1||h<=1)return null;const v=await this._getCoverage(u,m,h,r);if(!v)return null;let w=await this.decodePixelBlock(v,{width:m,height:h,planes:null,pixelType:null});if(w&&(w.width!==m||w.height!==h))throw new o("wcsraster-fetch",`the reponse has unexpected dimension width: ${w.width}, height: {pixelBlock.height}`);return g&&(w=p(w,{x:0,y:0},{width:s.size[0],height:s.size[1]})),w}async _getCapabilities(e){const t={service:"WCS",request:"GetCapabilities"};this.version&&(t.version=this.version,t.acceptVersions=this.version);try{const{data:i}=await this.request(this.url,{query:t,responseType:"xml",signal:e});return f(i)}catch(e){if(!n(e))throw new o("wcslayer:open","wcs capabilities is not valid or supported");throw e}}async _describeCoverage(e){const t={service:"WCS",request:"DescribeCoverage",version:this.version},i=this.version.slice(0,3);"1.0"===i?t.coverage=this.coverageId:"1.1"===i?t.identifiers=this.coverageId:"2.0"===i&&(t.coverageId=this.coverageId);try{const{data:i}=await this.request(this.url,{query:t,responseType:"xml",signal:e});return u(i,this.version)}catch(e){if(!n(e))throw new o("wcslayer:open","wcs coverage description is not valid or supported");throw e}}async _getPixelTypeAndBandCount(e){const{pixelSize:r,extent:s,multidimensionalInfo:n}=this.rasterInfo,a=s.center,p=new l({xmin:a.x-r.x,xmax:a.x+r.x,ymin:a.y-r.y,ymax:a.y+r.y,spatialReference:s.spatialReference});let d;if(t(n)){const e=n.variables[0];d=[],e.dimensions.forEach((t=>{d.push(new c({variableName:e.name,dimensionName:t.name,values:t.hasRegularIntervals?t.extent[0]:t.values[0],isSlice:!0}))}))}const m=await this._getCoverage(p,2,2,{multidimensionalDefinition:d,signal:i(e)});if(!m)throw new o("wcsraster-open","unable to determine pixel type");const h=await this.decodePixelBlock(m,{width:2,height:2,planes:null,pixelType:null});return{pixelType:h.pixelType,bandCount:h.getPlaneCount()}}async _getCoverage(e,t,i,r){const{coverageDescription:s}=this.coverageInfo,{version:n}=s,a="2.0"===s.version?this._getCoverage201Parameters(e,t,i,r,s):"1.1"===s.version?this._getCoverage110Parameters(e,t,i,r,s):this._getCoverage100Parameters(e,t,i,r),l=await this.request(this.url,{query:a,signal:r.signal,responseType:"array-buffer"});if("1.0"===n)return l.data;const c=h(l);if(c.isMultipart){return c.data.filter((e=>{var t;return(null==(t=e.contentType)?void 0:t.toLowerCase().indexOf("image"))>-1}))[0].contentData}throw new o("wcsraster:getcoverage","response is not a valid coverage")}_getInterpolationIndex(e){return-1===this.coverageInfo.supportedInterpolations.indexOf(e)||"nearest"===e?0:"bilinear"===e?1:"cubic"===e?2:0}_getCoverage100Parameters(e,t,i,r){const s=`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`,o=e.spatialReference.wkid,n=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().indexOf("tiff")>-1))||"GEOTIFF",{bandIds:a,interpolation:l}=r,c=this._getInterpolationIndex(l),p=a?a.map((e=>this.coverageInfo.bandNames[e])):null,d=v[c];return{service:"WCS",request:"GetCoverage",version:this.version,coverage:this.coverageId,format:n,crs:`EPSG:${o}`,bbox:s,width:t,height:i,interpolation:d,band:null==p?void 0:p.join(",")}}_getCoverage110Parameters(e,t,i,r,s){const{multidimensionalDefinition:o,bandIds:n,interpolation:a}=r,l=e.spatialReference.wkid,c=`urn:ogc:def:crs:EPSG::${l}`,p=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().indexOf("tiff")>-1))||"image/tiff",d=this._getInterpolationIndex(a),h=w[d],f=s.domain.spatialDomain,g=f.origin.x<=f.envelope.xmin&&f.origin.y<=f.envelope.ymin,u=e.width/t,v=e.height/i*(g?1:-1),x=g?[e.xmin,e.ymin]:[e.xmin,e.ymax],y=f.useEPSGAxis&&m(l),I=y?`${x[1]},${x[0]}`:`${x[0]},${x[1]}`,b=y?`${v},0,0,${u}`:`${u},0,0,${v}`,C=u/2,$=e.xmin+C,S=e.xmax-C,j=Math.abs(v)/2,T=e.ymin+j,_=e.ymax-j,O=y?`${T},${$},${_},${S},${c}`:`${$},${T},${S},${_},${c}`,P=s.range.filter((e=>e.axis.some((e=>e.identifier.toLowerCase().indexOf("band")>-1))))[0];let L,E=P&&h&&n?`${P.identifier}:${h}[${P.axis[0].identifier}[${n.join(",")}]]`:null;if(o)for(let e=0;e<o.length;e++){let t=o[e].values;const i=o[e].dimensionName.toLowerCase(),r=o[e].variableName.toLowerCase();if(t.length>0)if(t[0]instanceof Array&&(t=t[0]),"stdtime"===i)L=t.map((e=>this._convertToISOTime(e))).join(",");else{const e=s.range.filter((e=>e.identifier.toLowerCase()===r))[0];if(e){const r=e.axis.filter((e=>e.identifier.toLowerCase()===i))[0];r&&(E=e.identifier+":"+h+"["+r.identifier+"["+t.join(",")+"]]")}}}return{service:"WCS",request:"GetCoverage",version:this.version,identifier:this.coverageId,format:p,crs:`EPSG:${l}`,boundingbox:O,gridCS:"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS",gridType:"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs",gridOrigin:I,gridOffsets:b,gridBaseCRS:c,timeSequence:L,rangeSubset:E}}_convertToISOTime(e,t=!1){return(t?new Date(24*(e-25569)*60*60*1e3):new Date(e)).toISOString()}_getCoverage201Parameters(e,t,i,r,s){const{multidimensionalDefinition:o,interpolation:n}=r,a=this._getInterpolationIndex(n),l="http://www.opengis.net/def/interpolation/OGC/1/"+x[a],c=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().indexOf("tiff")>-1))||"image/tiff",{bandNames:p}=this.coverageInfo,{boundedBy:d,domainSet:m,rangeType:h}=s,f=d.isEastFirst?0:1,g=1-f,{axisLabels:u}=m,v=u[f],w=u[g],y=`http://www.opengis.net/def/crs/EPSG/0/${e.spatialReference.wkid}`,I=[];I.push(`${v},${y}(${e.xmin},${e.xmax})`),I.push(`${w},${y}(${e.ymin},${e.ymax})`);const b=[];if(u.length>2)for(let e=2;e<u.length;e++){const t=m.origin[e];if(u[e].toLowerCase().indexOf("time")>-1){let i=t.toString();d.uomLabels[e].toLowerCase().indexOf("ole")>-1&&(b.push(u[e]),i=this._convertToISOTime(t,!0)),I.push(u[e]+",http://www.opengis.net("+i+")")}else I.push(u[e]+",http://www.opengis.net("+t+")")}let C=null;if(o){const e=[];h.forEach((t=>t.forEach((t=>e.push(t.name)))));const t=[];for(let i=0;i<o.length;i++){const r=u.find((e=>e===o[i].dimensionName)),s=e.find((e=>e===o[i].variableName));if(-1===t.indexOf(s)&&t.push(s),r){let e=o[i].values;if(e.length>0){Array.isArray(e[0])&&(e=e[0]);let t="";t=r.toLowerCase().indexOf("time")>-1?e.map((e=>this._convertToISOTime(e))).join(","):e.join(",");const i=I.findIndex((e=>0===e.indexOf(r+",http://www.opengis.net")));-1===i&&I.push(r+",http://www.opengis.net("+t+")"),-1!==i&&-1===I[i].indexOf("("+t+")")&&I.splice(i,1,r+",http://www.opengis.net("+t+")")}}}t.length&&(C=t.join(","))}else if(null!=p&&p.length){C=(r.bandIds?r.bandIds.map((e=>p[e])):p).join(",")}const $=I.join("&subset="),S=`${v}(${t}),${w}(${i})`;return{service:"WCS",request:"GetCoverage",version:this.version,coverageId:this.coverageId,rangesubset:C,interpolation:l,scaleSize:S,subset:$,format:c,outputcrs:y}}};e([r({type:String,json:{write:!0}})],y.prototype,"datasetFormat",void 0),e([r()],y.prototype,"tileType",void 0),e([r({type:String,json:{write:!0}})],y.prototype,"version",void 0),e([r({type:String,json:{write:!0}})],y.prototype,"coverageId",void 0),y=e([s("esri.layers.support.rasterDatasets.ImageServerRaster")],y);var I=y;export default I;
