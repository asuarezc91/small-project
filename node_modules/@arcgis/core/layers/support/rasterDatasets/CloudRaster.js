/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as t}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import i from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{all as s}from"../../../core/promiseUtils.js";import a from"../../../geometry/SpatialReference.js";import n from"../../../geometry/Point.js";import l from"../../../geometry/Extent.js";import"../../../geometry.js";import f from"../../../tasks/support/FeatureSet.js";import m from"../TileInfo.js";import p from"../RasterInfo.js";import c from"../RasterStorageInfo.js";import u from"./BaseRaster.js";import d from"./DBFParser.js";const h=new Map;h.set("int16","esriFieldTypeSmallInteger"),h.set("int32","esriFieldTypeInteger"),h.set("int64","esriFieldTypeInteger"),h.set("float32","esriFieldTypeSingle"),h.set("float64","esriFieldTypeDouble"),h.set("text","esriFieldTypeString");let g=class extends u{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new i("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:o}=this._parseHeader(t);if("thematic"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e}this._set("storageInfo",r),this._set("rasterInfo",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,o={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const s=this._buildCacheFilePath(i,t,r,o.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),n=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:o.signal});if(!n)return null;const l=new Uint8Array(n.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const m=await this.request(s,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:o.signal});return m?this.decodePixelBlock(m.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:o,histograms:i,colormap:s,blockWidth:f,blockHeight:u,firstPyramidLevel:d,maximumPyramidLevel:h}=e,g=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),y=new a(e.extent.spatialReference||e.geodataXform.spatialReference),x=new l({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:y}),I=new n({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:y}),S=null!=(t=e.properties)?t:{},v=e.format.toLowerCase().replace("cache/",""),b=new n(e.origin.x,e.origin.y,y);let w,j,T,z;if(s&&s.colors)for(w=[],j=0;j<s.colors.length;j++)T=s.colors[j],z=s.values?s.values[j]:j,w.push([z,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const R=e.LODInfos,k=[];for(j=0;j<R.levels.length;j++)k.push({level:R.levels[j],resolution:R.resolutions[j],scale:96/.0254*R.resolutions[j]});const _=new m({dpi:96,lods:k,format:v,origin:b,size:[f,u],spatialReference:y}),C={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},F=Math.round((x.xmax-x.xmin)/I.x),H=Math.round((x.ymax-x.ymin)/I.y),P=[{maxCol:Math.ceil(F/f)-1,maxRow:Math.ceil(H/u)-1,minCol:0,minRow:0}];let L=2;if(h>0)for(j=0;j<h;j++)P.push({maxCol:Math.ceil(F/L/f)-1,maxRow:Math.ceil(H/L/u)-1,minCol:0,minRow:0}),L*=2;const D=e.mdInfo;return{storageInfo:C,rasterInfo:new p({width:F,height:H,pixelType:r,bandCount:o,extent:x,spatialReference:y,pixelSize:I,keyProperties:S,statistics:g,histograms:i,multidimensionalInfo:D,colormap:w,storageInfo:new c({blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,origin:b,tileInfo:_,firstPyramidLevel:d,maximumPyramidLevel:h,blockBoundary:P})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),o=await s([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":h.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r})}}if(!i&&o[1]){i=d.parse(o[1]).recordSet}return f.fromJSON(i)}_buildCacheFilePath(e,r,o,i){const s=this.storageInfo.packetSize,a=Math.floor(r/s)*s,n=Math.floor(o/s)*s,l="R"+this._toHexString4(a)+"C"+this._toHexString4(n);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:m}=this.rasterInfo,p=null==i?void 0:i[0];if(!t(m)||!p)return`${this.url}/_alllayers/${f}/${l}.bundle`;let c=m.variables.filter((e=>e.name===p.variableName))[0].dimensions[0].values.indexOf(p.values[0]).toString(16);const u=4-c.length;for(let e=0;e<u;e++)c="0"+c;return c="S"+c,`${this.url}/_alllayers/${p.variableName}/${c}/${f}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,o=r*(e%r)+t%r;if(o<0)throw"Invalid level / row / col";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return{position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};e([r({readOnly:!0})],g.prototype,"storageInfo",void 0),e([r({type:String,json:{write:!0}})],g.prototype,"datasetFormat",void 0),g=e([o("esri.layers.support.rasterDatasets.CloudRaster")],g);var y=g;export default y;
