/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as e}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import i from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{resolve as o,eachAlways as a}from"../../../core/promiseUtils.js";import m from"../../../geometry/SpatialReference.js";import n from"../../../geometry/Extent.js";import"../../../geometry.js";import l from"../RasterInfo.js";import{split as p,estimateStatisticsHistograms as c}from"../rasterFunctions/pixelUtils.js";import h from"./BaseRaster.js";let u=class extends h{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var e;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:a,nativeExtent:p,transform:c}=this.data,{width:h,height:u,pixelType:d}=s,f=this.data.extent||new n({xmin:-.5,ymin:.5,xmax:h-.5,ymax:u-.5,spatialReference:new m({wkid:3857})}),y=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,x={x:f.width/h,y:f.height/u},g=new l({width:h,height:u,pixelType:d,extent:f,nativeExtent:p,transform:c,pixelSize:x,spatialReference:f.spatialReference,bandCount:3,keyProperties:a||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return o(i)}async _buildInMemoryRaster(t,s,r){const m=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:s,maximumPyramidLevel:m},r):o(p(t,s,m)),l=e(this.rasterInfo.statistics),h=e(this.rasterInfo.histograms),u=l&&h?o({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):o(c(t)),d=await a([n,u]);if(!d[0].value&&d[1].value)throw new i("inmemory-raster:open","failed to build in memory raster");var f,y;(this._pixelBlockTiles=d[0].value,l)||(this.rasterInfo.statistics=null==(f=d[1].value)?void 0:f.statistics);h&&(this.rasterInfo.histograms=null==(y=d[1].value)?void 0:y.histograms)}};t([s({type:String,json:{write:!0}})],u.prototype,"datasetFormat",void 0),t([s()],u.prototype,"data",void 0),u=t([r("esri.layers.support.rasterDatasets.InMemoryRaster")],u);var d=u;export default d;
