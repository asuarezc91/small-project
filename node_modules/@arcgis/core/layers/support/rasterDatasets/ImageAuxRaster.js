/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{unwrap as r}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import o from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{eachAlways as a,createAbortError as i}from"../../../core/promiseUtils.js";import n from"../../../geometry/SpatialReference.js";import l from"../../../geometry/Extent.js";import"../../../geometry.js";import{getFormat as m}from"../rasterFormats/RasterCodec.js";import{estimateStatisticsFromHistograms as p}from"../rasterFunctions/pixelUtils.js";import c from"./BaseRaster.js";import f from"./InMemoryRaster.js";import u from"../rasterTransforms/PolynomialTransform.js";import{parsePAMInfo as h}from"./pamParser.js";let d=class extends c{async open(t){await this.init();const r=await this._fetchData(t);let{spatialReference:e,statistics:s,histograms:o,transform:a}=await this._fetchAuxiliaryData(t);const i=!e;i&&(e=new n({wkid:3857})),null!=o&&o.length&&null==s&&(s=p(o));const{width:m,height:c}=r;let u=new l({xmin:-.5,ymin:.5-c,xmax:m-.5,ymax:.5,spatialReference:e});const h=a?a.forwardTransform(u):u;let d=!0;if(a){const t=a.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(a=null,u=h)}const x=new f({data:{extent:h,nativeExtent:u,transform:a,pixelBlock:r,statistics:s,histograms:o,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i}});await x.open(),this._set("rasterInfo",x.rasterInfo),this._inMemoryRaster=x}fetchRawTile(t,r,e,s={}){return this._inMemoryRaster.fetchRawTile(t,r,e,s)}async _fetchData(t){const{data:r}=await this.request(this.url,{responseType:"array-buffer",signal:null==t?void 0:t.signal}),e=m(r).toUpperCase();if("JPG"!==e&&"PNG"!==e&&"GIF"!==e&&"BMP"!==e)throw new o("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",e);return await this.decodePixelBlock(r,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,s;const o=r(null==t?void 0:t.signal),n=null!=(e=this.ioConfig.skipExtensions)?e:[],l=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:o}),m=this.datasetFormat,p="JPG"===m?"jgw":"PNG"===m?"pgw":"BMP"===m?"bpw":null,c=n.indexOf(p)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+p,{responseType:"text",signal:o}),f=await a([l,c]);if(null!=o&&o.aborted)throw i();const d=h(null==(s=f[0].value)?void 0:s.data);if(!d.transform){const t=f[1].value?f[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;d.transform=6===(null==t?void 0:t.length)?new u({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null}return d}};t([e({type:String,json:{write:!0}})],d.prototype,"datasetFormat",void 0),d=t([s("esri.layers.support.rasterDatasets.ImageAuxRaster")],d);var x=d;export default x;
