/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../../../core/Error.js";import{create as e,isAborted as a,createAbortError as n}from"../../../core/promiseUtils.js";import{Z as i}from"../../../chunks/Zlib.js";class r{constructor(t){t&&(this.canvas=t.canvas,this.ctx=t.ctx||t.canvas&&t.canvas.getContext("2d"))}decode(i,s,c){if(!i||i.byteLength<10)throw new t("imagecanvasdecoder: decode","required a valid encoded data as input.");let{width:h,height:o,format:d}=s;const{applyJpegMask:l}=s;if(l&&(!h||!o))throw new t("imagecanvasdecoder: decode","image width and height are needed to apply jpeg mask directly to canvas");return e(((t,e)=>{let g=null;"jpg"===d&&l&&(g=r.getMask(i,s));const v=new Blob([new Uint8Array(i)],{type:"image/"+d=="jpg"?"jpeg":d}),w=URL.createObjectURL(v),m=new Image;let p;m.src=w,m.onload=()=>{if(URL.revokeObjectURL(w),a(c))return void e(n());h=m.width,o=m.height,this.canvas?(this.canvas.width===h&&this.canvas.height===o||(this.canvas.width=h,this.canvas.height=o),this.ctx.clearRect(0,0,h,o)):(this.canvas=document.createElement("canvas"),this.canvas.width=h,this.canvas.height=o,this.ctx=this.canvas.getContext("2d")),this.ctx.drawImage(m,0,0);const i=this.ctx.getImageData(0,0,h,o);let r;if(p=i.data,s.renderOnCanvas){if(g)for(r=0;r<g.length;r++)g[r]?p[4*r+3]=255:p[4*r+3]=0;return this.ctx.putImageData(i,0,0),void t(null)}const d=h*o,l=new Uint8Array(d),v=new Uint8Array(d),f=new Uint8Array(d);if(g)for(r=0;r<d;r++)l[r]=p[4*r],v[r]=p[4*r+1],f[r]=p[4*r+2];else for(g=new Uint8Array(d),r=0;r<d;r++)l[r]=p[4*r],v[r]=p[4*r+1],f[r]=p[4*r+2],g[r]=p[4*r+3];t({width:h,height:o,pixels:[l,v,f],mask:g,pixelType:"u8"})},m.onerror=()=>{URL.revokeObjectURL(w),e("cannot load image")}}))}static getMask(t,e){let a=null;try{const n=new Uint8Array(t),r=Math.ceil(n.length/2);let s=0;const c=n.length-2;for(s=r;s<c&&(255!==n[s]||217!==n[s+1]);s++);if(s+=2,s<n.length-1){const t=new i(n.subarray(s)).getBytes();a=new Uint8Array(e.width*e.height);let r=0;for(let e=0;e<t.length;e++)for(let n=7;n>=0;n--)a[r++]=t[e]>>n&1}}catch(t){}return a}}export default r;
