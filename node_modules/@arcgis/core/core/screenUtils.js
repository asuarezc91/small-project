/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const n=/^-?(\d+(\.\d+)?)\s*((px)|(pt))?$/i;function t(n){return n?n/72*96:0}function r(n){return n?72*n/96:0}function u(t){if("string"==typeof t){if(n.test(t)){const u=t.match(n),e=Number(u[1]),o=u[3]&&u[3].toLowerCase(),c="-"===t.charAt(0),i="px"===o?r(e):e;return c?-i:i}return console.warn("screenUtils.toPt: input not recognized!"),null}return t}function e(n=0,t=0){return{x:n,y:t}}function o(n=0,t=0){return[n,t]}function c(n=0,t=0){return{x:n,y:t}}function i(n=0,t=0){return[n,t]}function f(n=0,t=0,r=0){return[n,t,r]}function s(n){return n}function x(n){return n}function y(n){return n}function p(n,t){return t?(t.x=n[0],t.y=n[1],t):{x:n[0],y:n[1]}}function l(n,t){return t?(t[0]=n.x,t[1]=n.y,t.length>2&&(t[2]=0),t):[n.x,n.y]}export{s as castRenderScreenPointArray,x as castRenderScreenPointArray3,y as castScreenPointArray,c as createRenderScreenPoint,i as createRenderScreenPointArray,f as createRenderScreenPointArray3,e as createScreenPoint,o as createScreenPointArray,t as pt2px,r as px2pt,p as screenPointArrayToObject,l as screenPointObjectToArray,u as toPt};
