/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../Logger.js";import t from"../Error.js";import{create as o,onAbortOrThrow as s,createAbortController as r,isPromiseLike as n,isAbortError as a}from"../promiseUtils.js";import{workerMessages as i}from"../../kernel.js";import{newJobId as l,receiveMessage as d,toInvokeError as h,postMessage as c,MessageType as p}from"./utils.js";import{createWorker as b}from"./workerFactory.js";const m=e.getLogger("esri.core.workers"),{ABORT:_,INVOKE:u,OPEN:g,OPENED:j,RESPONSE:f}=p;class v{constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener("message",this._onMessage.bind(this)),e.addEventListener("error",(e=>{e.preventDefault(),m.error(e)}))}static async create(e){const t=await b();return new v(t,e)}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:r}=t,n=l();return o(((t,o)=>{const a={resolve:t,reject:o,abortHandle:s(r,(()=>{this._outJobs.delete(n),this._post({type:_,jobId:n})}))};this._outJobs.set(n,a),this._post({type:g,jobId:n,modulePath:e})}))}_onMessage(e){const t=d(e);if(t)switch(t.type){case j:this._onOpenedMessage(t);break;case f:this._onResponseMessage(t);break;case _:this._onAbortMessage(t);break;case u:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,o=e.jobId,s=t.get(o);s&&(s.controller&&s.controller.abort(),t.delete(o))}_onInvokeMessage(e){const{methodName:t,jobId:o,data:s,abortable:l}=e,d=l?r():null,c=this._inJobs,p=i[t];let b;try{if("function"!=typeof p)throw new TypeError(`${t} is not a function`);b=p.call(null,s,{signal:d?d.signal:null})}catch(e){return void this._post({type:f,jobId:o,error:h(e)})}n(b)?(c.set(o,{controller:d,promise:b}),b.then((e=>{c.has(o)&&(c.delete(o),this._post({type:f,jobId:o},e))}),(e=>{c.has(o)&&(c.delete(o),e||(e={message:"Error encountered at method"+t}),a(e)||this._post({type:f,jobId:o,error:h(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:f,jobId:o},b)}_onOpenedMessage(e){var t;const{jobId:o,data:s}=e,r=this._outJobs.get(o);r&&(this._outJobs.delete(o),null==(t=r.abortHandle)||t.remove(),r.resolve(s))}_onResponseMessage(e){var o;const{jobId:s,error:r,data:n}=e,a=this._outJobs.get(s);a&&(this._outJobs.delete(s),null==(o=a.abortHandle)||o.remove(),r?a.reject(t.fromJSON(JSON.parse(r))):a.resolve(n))}_post(e,t,o){return c(this.worker,e,t,o)}}export default v;
