/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
function a(a,n){const t=l[a.toLowerCase()];if(null==t)throw new Error("Function Not Recognised");if(n.length<t.minParams||n.length>t.maxParams)throw new Error(`Invalid Parameter count for call to ${a.toUpperCase()}`);return t.evaluate(n)}function n(a,n){const t=l[a.toLowerCase()];return null!=t&&n>=t.minParams&&n<=t.maxParams}const l={min:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.min.apply(Math,a[0])},max:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.max.apply(Math,a[0])},avg:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:t(a[0])},sum:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:function(a){let n=0;for(let l=0;l<a.length;l++)n+=a[l];return n}(a[0])},stddev:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sqrt(r(a[0]))},count:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].length},var:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:r(a[0])}};function t(a){let n=0;for(let l=0;l<a.length;l++)n+=a[l];return n/a.length}function r(a){const n=t(a),l=a.length;let r=0;for(const l of a)r+=Math.pow(l-n,2);return l>1?r/(l-1):0}export{a as aggregateFunction,n as isAggregate};
