/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{PositionHint as t,indexOf as h,removeUnordered as i,removeUnorderedMany as a}from"./arrayUtils.js";import s from"./HeapSort.js";export default class{constructor(h){this.data=[],this._length=0,this._allocator=void 0,this._deallocator=()=>null,this._shrink=()=>{},this._hint=new t,h&&(h.initialSize&&(this.data=new Array(h.initialSize)),h.allocator&&(this._allocator=h.allocator),void 0!==h.deallocator&&(this._deallocator=h.deallocator),h.shrink&&(this._shrink=()=>{this.data.length>1.5*this.length&&(this.data.length=Math.floor(1.1*this.length))}))}toArray(){return this.data.slice(0,this.length)}getItemAt(t){if(!(t<0||t>=this._length))return this.data[t]}get length(){return this._length}set length(t){if(t>this._length){if(this._allocator){for(;this._length<t;)this.data[this._length++]=this._allocator(this.data[this._length]);return}this._length=t}else{if(this._deallocator)for(let h=t;h<this._length;++h)this.data[h]=this._deallocator(this.data[h]);this._length=t,this._shrink()}}clear(){this.length=0}prune(){this.clear(),this.data=[]}push(t){this.data[this._length++]=t}pushArray(t,h=t.length){for(let i=0;i<h;i++)this.data[this._length++]=t[i]}fill(t,h){for(let i=0;i<h;i++)this.data[this._length++]=t}pushNew(){this._allocator&&(this.data[this.length]=this._allocator(this.data[this.length]));const t=this.data[this._length];return++this._length,t}pop(){if(0===this.length)return;const t=this.data[this.length-1];return this.length=this.length-1,this._shrink(),t}*iterableRemoveMany(t){const i=new Array;for(let a=0;a<this.length&&!(a>=this.length);++a)h(t.data,this.data[a],t.length,t._hint)<0&&i.push(this.data[a]),yield;this.data=i,this._length=this.data.length}remove(t){const i=h(this.data,t,this.length,this._hint);if(-1!==i)return this.data.splice(i,1),this.length=this.length-1,t}removeUnordered(t){const h=i(this.data,t,this.length,this._hint);return void 0!==h&&(this.length=this.length-1),h}removeUnorderedIndex(t){if(!(t>=this.length||t<0))return this.swapElements(t,this.length-1),this.pop()}removeUnorderedMany(t,h=t.length,i){this.length=a(this.data,t,this.length,h,this._hint,i)}front(){if(0!==this.length)return this.data[0]}back(){if(0!==this.length)return this.data[this.length-1]}swapElements(t,h){t>=this.length||h>=this.length||t===h||([this.data[t],this.data[h]]=[this.data[h],this.data[t]])}sort(t){s.sort(this.data,0,this.length,t)}iterableSort(t){return s.iterableSort(this.data,0,this.length,t)}some(t,h){for(let i=0;i<this.length;++i)if(t.call(h,this.data[i],i,this.data))return!0;return!1}filterInPlace(t,h){let i=0;for(let a=0;a<this._length;++a){const s=this.data[a];t.call(h,s,a,this.data)&&(this.data[a]=this.data[i],this.data[i]=s,i++)}if(this._deallocator)for(let t=i;t<this._length;t++)this.data[t]=this._deallocator(this.data[t]);return this._length=i,this}forAll(t,h){const i=this.length,a=this.data;for(let s=0;s<i;++s)t.call(h,a[s],s,a)}*iterableForEach(){for(let t=0;t<this.length;++t)yield this.data[t]}map(t,h){const i=new Array(this.length);for(let a=0;a<this.length;++a)i[a]=t.call(h,this.data[a],a,this.data);return i}reduce(t,h){let i=h;for(let h=0;h<this.length;++h)i=t(i,this.data[h],h,this.data);return i}}
