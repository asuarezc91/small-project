/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"./has.js";import{strict as e}from"./jsonMap.js";import s from"../geometry/support/WKIDUnitConversion.js";import{isEarth as t,isWKIDFromMars as n,isWKIDFromMoon as i}from"../geometry/support/spatialReferenceUtils.js";import r from"../geometry/SpatialReference.js";import{earth as a,mars as c,moon as u}from"../geometry/support/Ellipsoid.js";import{getReferenceEllipsoid as o}from"../geometry/projectionEllipsoid.js";const l=39.37,m=a.radius*Math.PI/200,f=/UNIT\[([^\]]+)\]\]$/i,U=s,d=/UNIT\[([^\]]+)\]/i,p=new Set([4261,4305,4807,4810,4811,4812,4816,4819,4821,4901,4902,37225,104139,104140]),B=e()({meter:"meters",foot:"feet",foot_us:"us-feet",foot_clarke:"clarke-feet",yard_clarke:"clarke-yards",link_clarke:"clarke-links",yard_sears:"sears-yards",foot_sears:"sears-feet",chain_sears:"sears-chains",chain_benoit_1895_b:"benoit-1895-b-chains",yard_indian:"indian-yards",yard_indian_1937:"indian-1937-yards",foot_gold_coast:"gold-coast-feet",chain_sears_1922_truncated:"sears-1922-truncated-chains","50_kilometers":"50-kilometers","150_kilometers":"150-kilometers"}),k=e=>e*e,h=e=>e*e*e,y={length:{baseUnit:"meters",units:{millimeters:{inBaseUnits:.001},centimeters:{inBaseUnits:.01},decimeters:{inBaseUnits:.1},meters:{inBaseUnits:1},kilometers:{inBaseUnits:1e3},inches:{inBaseUnits:.0254},feet:{inBaseUnits:.3048},yards:{inBaseUnits:.9144},miles:{inBaseUnits:1609.344},"nautical-miles":{inBaseUnits:1852},"us-feet":{inBaseUnits:1200/3937}}},area:{baseUnit:"square-meters",units:{"square-millimeters":{inBaseUnits:k(.001)},"square-centimeters":{inBaseUnits:k(.01)},"square-decimeters":{inBaseUnits:k(.1)},"square-meters":{inBaseUnits:1},"square-kilometers":{inBaseUnits:k(1e3)},"square-inches":{inBaseUnits:k(.0254)},"square-feet":{inBaseUnits:k(.3048)},"square-yards":{inBaseUnits:k(.9144)},"square-miles":{inBaseUnits:k(1609.344)},"square-us-feet":{inBaseUnits:k(1200/3937)},acres:{inBaseUnits:.0015625*k(1609.344)},ares:{inBaseUnits:100},hectares:{inBaseUnits:1e4}}},volume:{baseUnit:"liters",units:{liters:{inBaseUnits:1},"cubic-millimeters":{inBaseUnits:1e3*h(.001)},"cubic-centimeters":{inBaseUnits:1e3*h(.01)},"cubic-decimeters":{inBaseUnits:1e3*h(.1)},"cubic-meters":{inBaseUnits:1e3},"cubic-kilometers":{inBaseUnits:1e3*h(1e3)},"cubic-inches":{inBaseUnits:1e3*h(.0254)},"cubic-feet":{inBaseUnits:1e3*h(.3048)},"cubic-yards":{inBaseUnits:1e3*h(.9144)},"cubic-miles":{inBaseUnits:1e3*h(1609.344)}}},angle:{baseUnit:"radians",units:{radians:{inBaseUnits:1},degrees:{inBaseUnits:Math.PI/180}}}},b=function(){const e={};for(const s in y)for(const t in y[s].units)e[t]=s;return e}();const q=["metric","imperial","square-inches","square-feet","square-yards","square-miles","square-us-feet","square-meters","square-kilometers","acres","ares","hectares"],_=["metric","imperial","inches","feet","yards","miles","nautical-miles","us-feet","meters","kilometers"];function g(e){return"imperial"===e||"metric"===e}function w(e){const s=b[e];if(s)return s;throw new Error("unknown measure")}function j(e){return y[e].baseUnit}function P(e){return j(w(e))}function S(e,s=null){return s=s||w(e),y[s].baseUnit===e}function C(e,s,t){if(s===t)return e;const n=w(s);if(n!==w(t))throw new Error("incompatible units");const i=S(s,n)?e:function(e,s,t){return e*y[t].units[s].inBaseUnits}(e,s,n);return S(t,n)?i:function(e,s,t){return e/y[t].units[s].inBaseUnits}(i,t,n)}function I(e,s,t){switch(t){case"metric":return D(e,s);case"imperial":return O(e,s);default:return t}}function x(e,s,t){switch(t){case"metric":return E(e,s);case"imperial":return v(e,s);default:return t}}function D(e,s){return C(e,s,"meters")<3e3?"meters":"kilometers"}function E(e,s){return C(e,s,"meters")<1e5?"meters":"kilometers"}function O(e,s){return C(e,s,"feet")<1e3?"feet":"miles"}function v(e,s){return C(e,s,"feet")<1e5?"feet":"miles"}function J(e,s){return C(e,s,"square-meters")<3e6?"square-meters":"square-kilometers"}function M(e,s){return C(e,s,"square-feet")<1e6?"square-feet":"square-miles"}function N(e,s,t){return C(e,s,"meters")/(t*Math.PI/180)}function R(e){return B.fromJSON(e.toLowerCase())||null}function F(e){return B.toJSON(e)||null}function T(e){if(e&&"object"==typeof e&&!t(e))return 1;const s=K(e);return s>1e5?1:s}function G(e){return K(e)>=(e instanceof r?o(e).metersPerDegree:1e5)?"meters":W(e)}function K(e,s=a.metersPerDegree){return L(e,!0)||s}function L(e,s=!1){let t,r,a=null;if(null!=e&&("object"==typeof e?(t=e.wkid,r=e.wkt):"number"==typeof e?t=e:"string"==typeof e&&(r=e)),t){if(n(t))return c.metersPerDegree;if(i(t))return u.metersPerDegree;a=U.values[U[t]],!a&&s&&p.has(t)&&(a=m)}else if(r)if(-1!==r.search(/^PROJCS/i)){const e=f.exec(r);e&&e[1]&&(a=parseFloat(e[1].split(",")[1]))}else if(-1!==r.search(/^GEOCCS/i)){const e=d.exec(r);e&&e[1]&&(a=parseFloat(e[1].split(",")[1]))}return a}function W(e){let s,t,n=null;if(null!=e&&("object"==typeof e?(s=e.wkid,t=e.wkt):"number"==typeof e?s=e:"string"==typeof e&&(t=e)),s)n=U.units[U[s]];else if(t&&-1!==t.search(/^PROJCS/i)){let e=f.exec(t);e&&e[1]&&(e=/[\\"\\']{1}([^\\"\\']+)/.exec(e[1]),n=e&&e[1])}return n?R(n):null}function $(e){if(!e)return null;switch(W(e)){case"feet":case"us-feet":case"clarke-feet":case"clarke-yards":case"clarke-links":case"sears-yards":case"sears-feet":case"sears-chains":case"benoit-1895-b-chains":case"indian-yards":case"indian-1937-yards":case"gold-coast-feet":case"sears-1922-truncated-chains":return"imperial";case"50-kilometers":case"150-kilometers":case"meters":return"metric";case null:case void 0:return null}return null}export{j as baseUnitForMeasure,P as baseUnitForUnit,C as convertUnit,$ as getDefaultUnitSystem,L as getMetersPerUnit,K as getMetersPerUnitForSR,T as getMetersPerVerticalUnitForSR,W as getUnitString,G as getVerticalUnitStringForSR,l as inchesPerMeter,S as isBaseUnit,g as isMeasurementSystem,N as lengthToDegrees,w as measureForUnit,q as measurementAreaUnits,_ as measurementLengthUnits,M as preferredImperialAreaUnit,O as preferredImperialLengthUnit,v as preferredImperialVerticalLengthUnit,I as preferredLengthUnit,J as preferredMetricAreaUnit,D as preferredMetricLengthUnit,E as preferredMetricVerticalLengthUnit,x as preferredVerticalLengthUnit,R as unitFromRESTJSON,F as unitToRESTJSON};
