/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import t from"../../Color.js";import i from"../../core/Handles.js";import{on as s}from"../../core/watchUtils.js";import{ElevationProfileLine as n}from"./ElevationProfileLine.js";import{getGroundMinDemResolution as l}from"./support/elevationQuerySourceUtils.js";let a=class extends n{constructor(o){super(o),this.type="ground",this.color=new t([136,186,83]),this.numSamplesForPreview=50,this.numSamplesPerChunk=500}get minDemResolution(){var o,e,r;return l(null==(o=this._viewModel)||null==(e=o.view)||null==(r=e.map)?void 0:r.ground)}async queryElevation(o,e){var r,t,i;const s=null==(r=this._viewModel)||null==(t=r.view)||null==(i=t.map)?void 0:i.ground;if(!s)throw new Error("No ground configured in the view");return s.queryElevation(o,e)}attach(o){const e=new i;e.add(super.attach(o));const r=()=>{this._watchTileInfos(e),this._onChange()};return e.add(s(o,"view.map.ground.layers","change",r,r,r)),e}_watchTileInfos(o){var e,r,t,i;o.remove("tile-infos");const s=null!=(e=null==(r=this._viewModel)||null==(t=r.view.map)||null==(i=t.ground.layers)?void 0:i.toArray())?e:[];o.add(s.map((o=>o.watch("tileInfo",(()=>this.notifyChange("minDemResolution"))))),"tile-infos"),this.notifyChange("minDemResolution")}};o([e({type:t,nonNullable:!0})],a.prototype,"color",void 0),o([e({readOnly:!0})],a.prototype,"minDemResolution",null),a=o([r("esri.widgets.ElevationProfile.ElevationProfileLineGround")],a);var u=a;export default u;
