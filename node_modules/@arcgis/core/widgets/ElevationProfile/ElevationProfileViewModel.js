/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{destroyMaybe as e,isNone as i,isSome as s,unwrapOr as o,applySome as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{makeHandle as n}from"../../core/handleUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{max as p,min as h}from"../../core/arrayUtils.js";import u from"../../core/Accessor.js";import c from"../../core/Collection.js";import{referenceSetter as f}from"../../core/collectionUtils.js";import d from"../../Graphic.js";import m from"../../core/Handles.js";import{on as v,init as y}from"../../core/watchUtils.js";import{preferredLengthUnit as g,preferredVerticalLengthUnit as _,measurementLengthUnits as U}from"../../core/unitUtils.js";import P from"../../core/LRUCache.js";import{defaultUnitPropertyMetadata as w}from"../support/commonProperties.js";import{ElevationQueryTileCache as C}from"../../layers/support/ElevationQueryTileCache.js";import{isMultiPathPolyline as j,isValidInputPath as b}from"./support/geometryUtils.js";import O,{State as S}from"./ElevationProfileInteraction.js";import D from"./ElevationProfileLineGround.js";import{ElevationProfileLineCollection as R}from"./elevationProfileLineTypes.js";import{ElevationProfileState as T}from"./support/constants.js";import{getBoundsInMeters as x,mergeStatistics as z}from"./support/statisticsUtils.js";import{createProfileQueue as E}from"./support/profileUtils.js";import L from"./ElevationProfileLineUpdater.js";import{ElevationProfileVisualization as A}from"./support/ElevationProfileVisualization.js";let G=class extends u{constructor(t){super(t),this.view=null,this.input=null,this.geodesicDistanceThreshold=1e5,this.hoveredChartPosition=null,this.defaultUnit=null,this.queue=null,this._currentTileCache=null,this.defaultProfileLineGround=new D,this._handles=new m,this._visualization=new A(this),this._userUnitOptions=null,this._userUnit=null,t.profiles||(this.profiles=new c([this.defaultProfileLineGround]))}initialize(){var t;this.queue=E("3d"===this.view.type?null==(t=this.view.resourceController)?void 0:t.scheduler:void 0),this._interaction=new O({parentViewModel:this}),this._handles.add(this._watchAndUpdateProfiles()),this._visualization.initialize()}destroy(){this._handles.destroy(),this._handles=null,this.defaultProfileLineGround.destroy(),this.defaultProfileLineGround=null,this._visualization.destroy(),this._visualization=null,this._interaction.destroy(),this._interaction=null,this.queue=e(this.queue),this._currentTileCache=e(this._currentTileCache)}set profiles(t){const e=this._get("profiles"),i=null!=t?t:new c;this._set("profiles",f(i,e))}get state(){var t;switch(null==(t=this._interaction)?void 0:t.state){case S.Ready:return T.Ready;case S.Creating:return T.Creating;case S.Selecting:return T.Selecting;case S.Selected:return T.Selected;case S.Reshaping:return T.Created}}get progress(){let t=0,e=0;for(const i of this.visibleProfiles)t++,e+=i.progress;return t>0?e/t:0}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}get effectiveUnits(){const t=x(this.visibleProfiles.map((t=>t.result)));return{distance:g(t.maxDistance,"meters",this.unit),elevation:_(t.maxElevation,"meters",this.unit)}}get hoveredPoints(){return i(this.input)?[]:this.visibleProfiles.map((t=>{const e=t.hoveredPoint;return s(e)?{hoveredPoint:e,color:t.color}:null})).filter(s)}get statistics(){return z(this.visibleProfiles.map((t=>t.statistics)))}get chartData(){if(i(this.input))return null;const t=[];for(const{id:e,type:i,title:r,color:n,samples:l,progress:a,showFill:p}of this.visibleProfiles){o(l,[]).some((t=>s(t.z)))&&t.push({id:e,type:i,title:r,color:n,samples:l,progress:a,showFill:p})}return 0===t.length?null:{lines:t,effectiveUnits:this.effectiveUnits,statistics:this.statistics,progress:this.progress}}get visibleProfiles(){return this.profiles.toArray().filter((t=>t.visible))}get minDemResolutions(){const t=[];for(const{minDemResolution:e}of this.visibleProfiles)s(e)&&t.push(e);return t}get elevationUnitsPerPixel(){return p(this.minDemResolutions)}get minDemResolution(){return h(this.minDemResolutions)}get canStopCreating(){return this._interaction.canStopCreating}get errorState(){const t=r(this.input,(t=>t.geometry));return j(t)?1:b(t)?0===this.visibleProfiles.length?2:i(this.chartData)&&1===this.progress?3:4:0}get tileCache(){var t,i;return e(this._currentTileCache),this._currentTileCache="3d"===(null==(t=this.view)?void 0:t.type)&&null!=(i=this.view)&&i.resourceController?new C(this.view.resourceController.memoryController.getMemCache("elevation-profile-widget")):new C(new P(20971520)),this._currentTileCache}get test(){return{interaction:this._interaction}}start(t){this._interaction.start(t)}stop(){this._interaction.stop()}cancel(){this._interaction.cancel()}clear(){this._interaction.clear()}_watchAndUpdateProfiles(){const t=()=>{this._handles.remove("profiles");const t=[];for(const e of this.profiles){const i=new L({line:e,viewModel:this});t.push(n((()=>i.destroy())),e.watch("visible",(()=>this.notifyChange("visibleProfiles"))))}this._handles.add(t,"profiles"),this.notifyChange("visibleProfiles")};return[v(this,"profiles","change",t,t,t),y(this,"visibleProfiles",(()=>{this._handles.remove("visible-profiles");const t=[];for(const e of this.visibleProfiles)t.push(e.watch(["id","title","color","samples","progress"],(()=>this.notifyChange("chartData"))),e.watch("minDemResolution",(()=>this.notifyChange("minDemResolutions"))),e.watch("statistics",(()=>this.notifyChange("statistics"))),e.watch("result",(()=>this.notifyChange("effectiveUnits"))),e.watch("progress",(()=>this.notifyChange("progress"))),e.watch(["color","hoveredPoint"],(()=>this.notifyChange("hoveredPoints"))));this._handles.add(t,"visible-profiles")}))]}_findSelectableUnit(t,e){const i=this.unitOptions;return s(t)&&-1!==i.indexOf(t)?t:e?this._findSelectableUnit(e):i[0]}_filteredOrAllUnits(t){const e=(s(t)?t:[]).filter((t=>-1!==U.indexOf(t)));return 0===e.length?U.slice():e}};t([l()],G.prototype,"view",void 0),t([l({type:d})],G.prototype,"input",void 0),t([l({type:R,nonNullable:!0})],G.prototype,"profiles",null),t([l({readOnly:!0})],G.prototype,"state",null),t([l({readOnly:!0})],G.prototype,"progress",null),t([l()],G.prototype,"unitOptions",null),t([l()],G.prototype,"unit",null),t([l({readOnly:!0})],G.prototype,"effectiveUnits",null),t([l({type:Number})],G.prototype,"geodesicDistanceThreshold",void 0),t([l()],G.prototype,"hoveredChartPosition",void 0),t([l({readOnly:!0})],G.prototype,"hoveredPoints",null),t([l({readOnly:!0})],G.prototype,"statistics",null),t([l()],G.prototype,"chartData",null),t([l()],G.prototype,"visibleProfiles",null),t([l()],G.prototype,"minDemResolutions",null),t([l()],G.prototype,"elevationUnitsPerPixel",null),t([l({readOnly:!0})],G.prototype,"minDemResolution",null),t([l({readOnly:!0})],G.prototype,"canStopCreating",null),t([l({readOnly:!0})],G.prototype,"errorState",null),t([l(w)],G.prototype,"defaultUnit",void 0),t([l()],G.prototype,"queue",void 0),t([l()],G.prototype,"tileCache",null),t([l()],G.prototype,"_visualization",void 0),t([l()],G.prototype,"_interaction",void 0),t([l()],G.prototype,"_userUnitOptions",void 0),t([l()],G.prototype,"_userUnit",void 0),G=t([a("esri.widgets.ElevationProfile.ElevationProfileViewModel")],G);var q=G;export default q;
