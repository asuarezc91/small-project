/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{applySome as e,isNone as s,isSome as i}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{makeHandle as r}from"../../core/handleUtils.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{aliasOf as a}from"../../core/accessorSupport/decorators/aliasOf.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{resolve as c,createTask as l,throwIfAborted as h}from"../../core/promiseUtils.js";import p from"../../core/Accessor.js";import u from"../../symbols/CIMSymbol.js";import _ from"../../core/Handles.js";import{init as d}from"../../core/watchUtils.js";import m from"../../layers/GraphicsLayer.js";import{isDOMContainer as y}from"../../views/DOMContainer.js";import I from"../Sketch/SketchViewModel.js";import{isPolyline as g}from"./support/geometryUtils.js";var v;!function(t){t.Ready="ready",t.Creating="creating",t.Reshaping="reshaping",t.Selecting="selecting",t.Selected="selected"}(v||(v={}));let f=class extends p{constructor(t){super(t),this.state=v.Ready,this._handles=new _,this._prevInput=null,this._hasPrevInput=!1,this._prevInputIsInternal=!1,this._toolPromise=c()}initialize(){const t=this.parentViewModel.view;this._graphicsLayer=new m({listMode:"hide",elevationInfo:{mode:"on-the-ground",offset:null}});const e="2d"===t.type?new u({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[5,4],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[0,0,0,255]},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[255,255,255,255]}]}}}):null;this._sketchVM=new I({layer:this._graphicsLayer,view:t,defaultCreateOptions:{mode:"click",hasZ:!1},updateOnGraphicClick:!1,defaultUpdateOptions:{enableMidpoints:!0,enableRotation:!1,enableScaling:!1,enableMoveAllGraphics:!1,enableZ:!1,multipleSelectionEnabled:!1,toggleToolOnClick:!1,enableMoveGraphic:!1,tool:"reshape"},polylineSymbol:e,activeLineSymbol:e,updatePolylineSymbol:e}),this._handles.add([d(this.parentViewModel,["input"],(()=>this._update()),!0),d(t,"map",(t=>{null==t||t.add(this._graphicsLayer),this._update()})),this._sketchVM.on("create",(t=>this._onSketchViewModelCreate(t))),this._sketchVM.on("update",(t=>this._onSketchViewModelUpdate(t)))])}destroy(){var t,e;this._handles.destroy(),this._handles=null,null==(t=this.parentViewModel.view)||null==(e=t.map)||e.remove(this._graphicsLayer),this._sketchVM.destroy(),this._sketchVM=null,this._graphicsLayer.destroy(),this._graphicsLayer=null}get canStopCreating(){const t=e(this.parentViewModel.input,(t=>t.geometry));return g(t)&&t.paths.length>0&&t.paths[0].length>2}get test(){return{sketchVM:this._sketchVM,toolPromise:this._toolPromise}}start(t={mode:"sketch"}){this._sketchVM.cancel(),this._stopSelectionInteraction(),this._prevInput||this._storePreviousInput(this._input),this._input=null,this._graphicsLayer.removeAll(),"sketch"===t.mode?(this._set("state",v.Creating),this._toolPromise=this._sketchVM.create("polyline")):(this._set("state",v.Selecting),this._startSelectionInteraction())}stop(){switch(this.state){case v.Creating:this._stopCreationInteraction(),this._afterInteraction();break;case v.Selecting:this._stopSelectionInteraction(),this._afterInteraction()}}cancel(){switch(this.state){case v.Creating:this._sketchVM.cancel(),this._restorePreviousInput(),this._afterInteraction();break;case v.Selecting:this._stopSelectionInteraction(),this._restorePreviousInput(),this._afterInteraction()}}clear(){this._sketchVM.cancel(),this._set("state",v.Ready),this._clearPreviousInput(),this._input=null}_stopCreationInteraction(){const t=this._input,e=this.canStopCreating;this._sketchVM.cancel(),!s(t)&&e?(this._removeLastPoint(t),this._graphicsLayer.removeAll(),this._graphicsLayer.add(t),this._input=t):this._input=null}_startSelectionInteraction(){this._stopSelectionInteraction();const t=this.parentViewModel.view,e=t.cursor;t.cursor="crosshair";const s=r((()=>t.cursor=e));let o=null;const a=r((()=>{i(o)&&(o.abort(),o=null)})),n=t.on("immediate-click",(e=>{e.preventDefault(),e.stopPropagation(),o=l((async s=>{const{results:r}=await t.hitTest(e);h(s);const o=r.map((t=>t.graphic)).find((t=>i(t.geometry)&&"polyline"===t.geometry.type));o&&(this._input=o,this._clearPreviousInput(),this._set("state",v.Selected),this._stopSelectionInteraction())}))})),c=t.on("key-down",(t=>{"Escape"===t.key&&this.cancel()}));this._handles.add([n,c,a,s],"selection-interaction"),t.ready&&y(t)&&t.focus()}_stopSelectionInteraction(){this._handles.remove("selection-interaction")}_update(){const t=this.state,{input:e}=this.parentViewModel;if(t!==v.Selecting){if(!(t===v.Creating||t===v.Reshaping&&this._isInternalGraphic(e))){if(this._sketchVM.cancel(),s(e))return this._graphicsLayer.removeAll(),void this._set("state",v.Ready);this._isInternalGraphic(e)?(this._set("state",v.Reshaping),this._toolPromise=this._sketchVM.update(e,{tool:"reshape"})):(this._graphicsLayer.removeAll(),this._set("state",v.Selected))}}else this.stop()}_afterInteraction(){this._toolPromise=null,this._clearPreviousInput(),this._set("state",v.Ready),this._update()}_onSketchViewModelCreate(t){if("polyline"===t.tool)switch(t.state){case"complete":this._input=t.graphic,this._afterInteraction();break;case"cancel":this.cancel();break;case"active":case"start":this._input=t.graphic}}_onSketchViewModelUpdate(t){switch(t.state){case"complete":this._afterInteraction();break;case"active":case"start":this._input=t.graphics[0]}}_removeLastPoint(t){const e=t.geometry;if(g(e)){const s=e.clone();s.paths=[s.paths[0].slice(0,-1)],t.geometry=s}}_storePreviousInput(t){this._hasPrevInput=!0,this._prevInput=t,this._prevInputIsInternal=this._isInternalGraphic(t)}_restorePreviousInput(){if(!this._hasPrevInput)return;const t=this._prevInput;i(t)&&this._prevInputIsInternal&&(this._graphicsLayer.removeAll(),this._graphicsLayer.add(t)),this._input=t,this._clearPreviousInput()}_clearPreviousInput(){this._hasPrevInput=null,this._prevInput=null,this._prevInputIsInternal=!1}_isInternalGraphic(t){return i(t)&&this._graphicsLayer.graphics.includes(t)}};t([o({nonNullable:!0})],f.prototype,"state",void 0),t([o({nonNullable:!0})],f.prototype,"parentViewModel",void 0),t([o()],f.prototype,"canStopCreating",null),t([a("parentViewModel.input")],f.prototype,"_input",void 0),f=t([n("esri.widgets.ElevationProfile.ElevationProfileInteraction")],f);var S=f;export default S;export{v as State};
