/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as e,applySome as o,isNone as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{handlesGroup as i}from"../../core/handleUtils.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import{generateUUID as n}from"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{binaryFindClosest as p}from"../../core/arrayUtils.js";import u from"../../geometry/Point.js";import h from"../../core/Evented.js";import a from"../../Color.js";import{init as c}from"../../core/watchUtils.js";import{convertSamples as m,convertStatistics as v}from"./support/unitUtils.js";let d=class extends h.EventedAccessor{constructor(t){super(t),this.type=null,this.id=n(),this.title=null,this.color=new a("#000000"),this.visible=!0,this.result=null,this.effectiveUnits=null,this.hoveredChartPosition=null,this.numSamplesForPreview=30,this.numSamplesPerChunk=200,this.showFill=!0,this._onChange=()=>{this.emit("change")}}get progress(){return e(this.result)&&this.visible?this.result.progress:0}get samples(){return m(this.result,this.effectiveUnits)}get statistics(){return v(this.result,this.effectiveUnits)}get hoveredPoint(){return o(this.hoveredChartPosition,(t=>this._getPoint(t)))}get minDemResolution(){return null}queryElevation(){throw new Error("not implemented")}attach(t){return this._viewModel=t,i([c(t,"effectiveUnits",(()=>{this.effectiveUnits=t.effectiveUnits})),c(t,"hoveredChartPosition",(()=>{this.hoveredChartPosition=t.hoveredChartPosition})),c(t,["input","minDemResolution","queue"],this._onChange)])}toggleVisibility(t){this.visible=void 0===t?!this.visible:t}_getPoint(t){const{samples:e,result:o}=this;if(r(e)||r(o))return null;const i=e.length;if(0===i)return null;const s=t*e[i-1].distance,{x:l,y:n,z:h}=p(e,s,(t=>t.distance));return r(h)?null:new u({x:l,y:n,z:h,spatialReference:o.spatialReference})}};t([s({nonNullable:!0})],d.prototype,"id",void 0),t([s({nonNullable:!0})],d.prototype,"title",void 0),t([s({type:a,nonNullable:!0})],d.prototype,"color",void 0),t([s({nonNullable:!0})],d.prototype,"visible",void 0),t([s({readOnly:!0})],d.prototype,"progress",null),t([s({readOnly:!0})],d.prototype,"samples",null),t([s({readOnly:!0})],d.prototype,"statistics",null),t([s()],d.prototype,"result",void 0),t([s()],d.prototype,"effectiveUnits",void 0),t([s()],d.prototype,"hoveredChartPosition",void 0),t([s({readOnly:!0})],d.prototype,"minDemResolution",null),t([s()],d.prototype,"_viewModel",void 0),d=t([l("esri.widgets.ElevationProfile.ElevationProfileLine")],d);var f=d;export default f;export{d as ElevationProfileLine};
