/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../core/maybe.js";import{throwIfAborted as t}from"../../../core/promiseUtils.js";import{isEarth as s}from"../../../geometry/support/spatialReferenceUtils.js";import r from"../../../geometry/SpatialReference.js";import{getMetersPerUnitForSR as o}from"../../../core/unitUtils.js";import{initializeProjection as i,project as n}from"../../../geometry/projection.js";import{isSupported as a,geodesicLengths as m,geodesicDensify as c}from"../../../geometry/support/geodesicUtils.js";async function p(e,p,f,g){let u,h,d=null;const y=e.spatialReference,j=y.isGeographic||y.isWebMercator,w=await import("../../../geometry/geometryEngineAsync.js");t(g);let S=0;if(j||(S=await w.planarLength(e,"meters"),t(g)),j||S>=f.geodesicDistanceThreshold){if(await i([{source:y,dest:p},{source:y,dest:r.WGS84}],g),!s(y)&&a(y)){u=m([e],"meters")[0];const t=l(u,f);d=c(e,t)}else{const s=n(e,r.WGS84);u=await w.geodesicLength(s,"meters"),t(g);const o=l(u,f);d=await w.geodesicDensify(s,o,"meters"),t(g)}h=n(d,p)}else{await i([{source:y,dest:p}],g),u=S;const s=l(u,f);h=await w.densify(e,s,"meters"),t(g),h=n(h,p)}return{densifiedPath:h,densifiedPathInMeasurementSR:d,pathLength:u/o(p)}}function l(e,t){const s=e/t.maxSamples;return Math.max(t.samplingDistance,s)}function f(e){return u(e)&&1===e.paths.length&&e.paths[0].length>=2}function g(e){return u(e)&&e.paths.length>1}function u(t){return e(t)&&"polyline"===t.type}export{p as densifyPath,g as isMultiPathPolyline,u as isPolyline,f as isValidInputPath};
