/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../core/Handles.js";import{init as t}from"../../../core/watchUtils.js";import{ElevationProfileState as s}from"./constants.js";import{HoveredPoints3D as i}from"./HoveredPoints3D.js";import{InputRepresentation3D as n}from"./InputRepresentation3D.js";import{ProfileLines3D as o}from"./ProfileLines3D.js";class r{constructor(s){this._handles=new e;const r=s.view;this._inputRepresentation=new n({view:r}),this._hoveredPoints=new i({view:r}),this._profileLines=new o({view:r}),this._handles.add([t(s,"hoveredPoints",(e=>this._hoveredPoints.update(e))),t(s,"chartData",(e=>this._profileLines.updateGeometry(e))),t(s,"input",(()=>this._updateInputRepresentation(s)))])}destroy(){this._handles.destroy(),this._handles=null,this._inputRepresentation.destroy(),this._inputRepresentation=null,this._hoveredPoints.destroy(),this._hoveredPoints=null,this._profileLines.destroy(),this._profileLines=null}_updateInputRepresentation({input:e,state:t}){t===s.Selected?this._inputRepresentation.update(e):this._inputRepresentation.remove()}}export{r as ElevationProfileVisualization3D};
