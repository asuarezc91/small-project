/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as i}from"../../../core/maybe.js";import{createTask as s,whenOrAbort as t}from"../../../core/promiseUtils.js";import a from"../../../core/Handles.js";import{init as o}from"../../../core/watchUtils.js";class l{constructor(i){this._parentViewModel=i,this._visualization=null,this._loadingTask=null,this._handles=new a}initialize(){this._handles.add(o(this._parentViewModel,"view",(()=>this._load())))}destroy(){this._handles.destroy(),this._handles=null,i(this._loadingTask)&&(this._loadingTask.abort(),this._loadingTask=null),i(this._visualization)&&(this._visualization.destroy(),this._visualization=null)}_load(){i(this._loadingTask)&&this._loadingTask.abort(),this._loadingTask=s((async i=>{const s=this._parentViewModel;if("2d"===s.view.type){const a=import("./ElevationProfileVisualization2D.js"),o=(await t(a,i)).ElevationProfileVisualization2D;this._visualization=new o(s)}else if((i=>"3d"===i.view.type)(s)){const a=import("./ElevationProfileVisualization3D.js"),o=(await t(a,i)).ElevationProfileVisualization3D;this._visualization=new o(s)}}))}}export{l as ElevationProfileVisualization};
