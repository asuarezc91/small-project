/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isNone as r,unwrapOr as e}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import i from"../../Color.js";import{getMetersPerVerticalUnitForSR as p}from"../../core/unitUtils.js";import{getGraphicEffectiveElevationInfo as n,hasGraphicFeatureExpressionInfo as a}from"../../support/elevationInfoUtils.js";import{ElevationProfileLine as l}from"./ElevationProfileLine.js";import{GeometryDescriptor as c}from"../../layers/support/ElevationQuery.js";let m=class extends l{constructor(o){super(o),this.type="input",this.color=new i([255,127,0]),this.numSamplesForPreview=50,this.numSamplesPerChunk=1/0,this.showFill=!1}async queryElevation(o,{noDataValue:t,signal:s}){const i=this._viewModel.input;if(r(i))throw new Error("no input");const l=this._viewModel.view.spatialReference,m=await c.fromGeometry(o).project(l,s),u=n(i);if("absolute-height"===u.mode&&!a(i)){const o=e(u.offset,0)/p(l);for(const r of m.coordinates)r.z=e(r.z,0)+o}else for(const o of m.coordinates)o.z=t;return{geometry:m.export(),noDataValue:t}}};o([t({type:i,nonNullable:!0})],m.prototype,"color",void 0),m=o([s("esri.widgets.ElevationProfile.ElevationProfileLineInput")],m);var u=m;export default u;
