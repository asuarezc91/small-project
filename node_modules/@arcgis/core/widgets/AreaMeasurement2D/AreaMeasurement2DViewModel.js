/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import t from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{ignoreAbortErrors as s}from"../../core/promiseUtils.js";import i from"../../core/Handles.js";import{init as n}from"../../core/watchUtils.js";import{measurementAreaUnits as a}from"../../core/unitUtils.js";import l,{isSupported as p}from"./AreaMeasurement2DTool.js";import{defaultUnitPropertyMetadata as d}from"../support/commonProperties.js";import{InteractiveToolViewModel as u}from"../support/InteractiveToolViewModel.js";const h={handleWidth:8,handleColor:[255,128,0,.5],pathWidth:2,pathColor:[255,128,0,1],fillColor:[255,128,0,.3]},m=t.getLogger("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel");let c=class extends u{constructor(e){super(e),this.supportedViewType="2d",this._handles=new i,this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null,this.palette=h,this.tool=null}initialize(){this._handles.add([n(this,["unit","palette","geodesicDistanceThreshold"],((e,t,r)=>{this.tool&&(this.tool[r]=e)}))])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){var e;return this.isDisabled?"disabled":p(null==(e=this.view)?void 0:e.spatialReference)?this.tool&&this.tool.measurement?this.tool.active?"measuring":"measured":"ready":"disabled"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){void 0!==e?this._override("unit",this._validateUnit(e)):this._clearOverride("unit")}get unitOptions(){return a}set unitOptions(e){void 0!==e?this._override("unitOptions",this._validateUnits(e)):this._clearOverride("unitOptions")}start(){return this.createTool()}clear(){this.removeTool()}newMeasurement(){s(this.start())}clearMeasurement(){this.clear()}createToolParams(){return{toolConstructor:l,constructorArguments:()=>({geodesicDistanceThreshold:this.geodesicDistanceThreshold,palette:this.palette,unit:this.unit})}}logUnsupportedError(){m.error("AreaMeasurement2D widget is not implemented for SceneView")}logError(...e){m.error(...e)}_validateUnit(e){return-1!==this.unitOptions.indexOf(e)?e:-1!==this.unitOptions.indexOf(this.defaultUnit)?this.defaultUnit:this.unitOptions[0]}_validateUnits(e=[]){const t=e.filter((e=>-1!==a.indexOf(e)));return 0===t.length?a.slice():t}};e([r(d)],c.prototype,"defaultUnit",void 0),e([r({type:Number})],c.prototype,"geodesicDistanceThreshold",void 0),e([r({readOnly:!0,aliasOf:"tool.measurement"})],c.prototype,"measurement",void 0),e([r({readOnly:!0,aliasOf:"tool.measurementLabel"})],c.prototype,"measurementLabel",void 0),e([r()],c.prototype,"palette",void 0),e([r({dependsOn:["isDisabled","tool.measurement","tool.active","view.spatialReference"],readOnly:!0})],c.prototype,"state",null),e([r({constructOnly:!0,readOnly:!0})],c.prototype,"tool",void 0),e([r({type:String,dependsOn:["unitOptions","defaultUnit"]})],c.prototype,"unit",null),e([r({type:[String]})],c.prototype,"unitOptions",null),c=e([o("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],c);var f=c;export default f;
