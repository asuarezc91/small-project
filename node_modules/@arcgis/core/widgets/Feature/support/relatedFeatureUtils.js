/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import e from"../../../core/Logger.js";import t from"../../../core/Error.js";import{eachAlways as r}from"../../../core/promiseUtils.js";import{isNumericField as s,getField as i}from"../../../layers/support/fieldUtils.js";import o from"../../../request.js";import n from"../../../tasks/support/StatisticDefinition.js";import a from"../../../tasks/support/Query.js";import l from"../../../tasks/QueryTask.js";import{isRelatedField as u}from"./featureUtils.js";const c=e.getLogger("esri.widgets.Feature.support.relatedFeatureUtils"),f=new Map;function d(e){if(!u(e))return null;const[t,r]=e.split("/").slice(1);return{layerId:t,fieldName:r}}function p({originRelationship:e,relationships:t,layerId:r}){let s;return t&&t.some((t=>(`${t.relatedTableId}`===r&&t.id===e.id&&(s=t),!!s))),s}function m(e,t){const r=function(e,t){if(!t.relationships)return null;let r=null;const{relationships:s}=t;return s.some((t=>t.id===parseInt(e,10)&&(r=t,!0))),r}(e,t);if(!r)return;const s=`${t.url}/${r.relatedTableId}`;return{url:s,queryTask:new l({url:s,sourceSpatialReference:t.spatialReference}),relation:r,relatedFields:[],outStatistics:[]}}function y(e,t){if(!t)return;if(!e)return;const{features:r,statsFeatures:s}=e,i=r&&r.value;t.relatedFeatures=i?i.features:[];const o=s&&s.value;t.relatedStatsFeatures=o?o.features:[]}function h({relatedInfos:e,layer:s},i){const n={};return e.forEach(((e,r)=>{const{relation:a}=e;if(!a){const e=new t("relation-required","A relation is required on a layer to retrieve related records.");throw c.error(e),e}const{relatedTableId:l}=a;if("number"!=typeof l){const e=new t("A related table ID is required on a layer to retrieve related records.");throw c.error(e),e}const u=`${s.url}/${l}`,d=f.get(u),p=d||function(e,t){return o(e,{query:{f:"json"},signal:t&&t.signal})}(u,i);d||f.set(u,p),n[r]=p})),r(n)}function F({graphic:e,relatedInfos:t,layer:o},n){const l={};return t.forEach(((t,u)=>{t.layerInfo&&(l[u]=async function(e,t,o,n){var l;const u=o.layerId.toString(),{layerInfo:c,queryTask:f,relation:d}=t,m=null==(l=p({originRelationship:d,relationships:c.relationships,layerId:u}))?void 0:l.keyField;if(m){const o=s(i(c.fields,m)),l=function(e,t){const r=t.toLowerCase();for(const t in e)if(t.toLowerCase()===r)return e[t];return null}(e.attributes,d.keyField),u=o?`${m}=${l}`:`${m}='${l}'`,p=f.execute(new a({where:u,outFields:t.relatedFields}),n),y=t.outStatistics&&t.outStatistics.length>0&&c.supportsStatistics?f.execute(new a({where:u,outFields:t.relatedFields,outStatistics:t.outStatistics}),n):null,h={features:p};return y&&(h.statsFeatures=y),r(h)}return null}(e,t,o,n))})),r(l)}function I({relatedInfo:e,fieldName:t,fieldInfo:r}){if(e.relatedFields.push(t),r.statisticType){const s=new n({statisticType:r.statisticType,onStatisticField:t,outStatisticFieldName:t});e.outStatistics.push(s)}}export{m as createRelatedInfo,p as getDestinationRelation,d as getRelatedFieldInfo,h as queryLayerInfos,F as queryRelatedFeatures,y as setRelatedFeatures,I as updateRelatedInfo};
