/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import{aliasOf as a}from"../core/accessorSupport/decorators/aliasOf.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{getAssetUrl as r}from"../assets.js";import i from"../core/Handles.js";import{on as o,whenOnce as l}from"../core/watchUtils.js";import"./support/widgetUtils.js";import{accessibleHandler as m}from"./support/decorators/accessibleHandler.js";import{messageBundle as p}from"./support/decorators/messageBundle.js";import{renderable as d}from"./support/decorators/renderable.js";import{j as c}from"../chunks/index.js";import n from"./Widget.js";import h from"./BasemapGallery/BasemapGalleryViewModel.js";const g=r("esri/themes/base/images/basemap-toggle-64.svg"),u="esri-basemap-gallery esri-widget esri-widget--panel-height-only",y="esri-basemap-gallery--source-loading",b="esri-basemap-gallery__loader",v="esri-basemap-gallery__item",_="esri-basemap-gallery__item-container",w="esri-basemap-gallery__item-title",j="esri-basemap-gallery__item-thumbnail",f="esri-basemap-gallery__item--selected",B="esri-basemap-gallery__item--loading",M="esri-basemap-gallery__item--error",k="esri-widget__content--empty",G="esri-icon-basemap",C="esri-disabled",x="esri-widget__heading";let I=class extends n{constructor(e,s){super(e,s),this._handles=new i,this.activeBasemap=null,this.disabled=!1,this.iconClass=G,this.label=void 0,this.messages=null,this.source=null,this.view=null,this.viewModel=new h}initialize(){const e=this._handles;this.own([o(this,"viewModel.items","change",(s=>{const a="basemap-gallery-item-changes",{added:t,moved:r}=s;e.remove(a),e.add([...t,...r].map((e=>e.watch("state",(()=>this.scheduleRender())))),a),this.scheduleRender()})),e,l(this,"source",(()=>this.viewModel.load()))])}render(){const e="loading"===this.get("source.state"),s=this.disabled||"disabled"===this.get("viewModel.state"),a=this.get("viewModel.items").toArray().map(this._renderBasemapGalleryItem,this),t={[y]:e,[C]:s},r=e?c("div",{class:b,key:"esri-basemap-gallery__loader"}):null,i=e?null:a.length>0?c("ul",{class:_,key:"esri-basemap-gallery__item-container",role:"menu"},a):c("div",{class:k,key:"esri-basemap-gallery__empty-message"},c("h2",{class:x},this.messages.noBasemaps));return c("div",{class:this.classes(u,t)},r,i)}_handleClick(e){const s=e.currentTarget["data-item"];"ready"===s.state&&(this.activeBasemap=s.basemap)}_renderBasemapGalleryItem(e){const s=e.get("basemap.thumbnailUrl")||g,a=e.get("basemap.title"),t=e.get("basemap.portalItem.snippet"),r=e.get("error.message")||t||a,{viewModel:i}=this,o=!this.disabled&&"ready"===i.state&&"ready"===e.state?0:-1,l=i.basemapEquals(e.basemap,this.activeBasemap),m={[f]:l,[B]:"loading"===e.state,[M]:"error"===e.state};return c("li",{"aria-selected":l,bind:this,class:this.classes(v,m),"data-item":e,onkeydown:this._handleClick,onclick:this._handleClick,role:"menuitem",tabIndex:o,title:r},c("img",{alt:"",class:j,src:s}),c("div",{class:w},a))}};e([a("viewModel.activeBasemap"),d()],I.prototype,"activeBasemap",void 0),e([s(),d()],I.prototype,"disabled",void 0),e([s()],I.prototype,"iconClass",void 0),e([s({aliasOf:{source:"messages.widgetLabel",overridable:!0}})],I.prototype,"label",void 0),e([s(),d(),p("esri/widgets/BasemapGallery/t9n/BasemapGallery")],I.prototype,"messages",void 0),e([a("viewModel.source"),d("source.state")],I.prototype,"source",void 0),e([a("viewModel.view"),d()],I.prototype,"view",void 0),e([s(),d(["viewModel.state"])],I.prototype,"viewModel",void 0),e([m()],I.prototype,"_handleClick",null),I=e([t("esri.widgets.BasemapGallery")],I);var S=I;export default S;
