/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import{cast as s}from"../../core/accessorSupport/decorators/cast.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{resolve as i}from"../../core/promiseUtils.js";import r from"../../core/Collection.js";import a from"../../core/Loadable.js";import p from"../../core/Handles.js";import{contentEquals as c}from"../../support/basemapUtils.js";import{watch as n,on as m}from"../../core/watchUtils.js";import{default3DCompatibility as l,default2DCompatibility as u}from"./support/basemapCompatibilityUtils.js";import d from"./support/BasemapGalleryItem.js";import h from"./support/LocalBasemapsSource.js";import y from"./support/PortalBasemapsSource.js";const b=r.ofType(d);let f=class extends a{constructor(t){super(t),this._handles=new p,this.activeBasemap=null,this.items=new b,this.source=new y,this.view=null}initialize(){const t=()=>this._recreateItems();this._handles.add([n(this,["compatibilityFunction","state"],(()=>this._updateItems())),m(this,"source.basemaps","change",t,t)])}destroy(){this._handles.destroy(),this._handles=null}get compatibilityFunction(){if(void 0===this._get("compatibilityFunction")){return"3d"===this.get("view.type")?l:u}return this._get("compatibilityFunction")}set compatibilityFunction(t){this._set("compatibilityFunction",t)}castSource(t){return Array.isArray(t)||r.isCollection(t)?new h({basemaps:t}):function(t){return t&&"esri.portal.Portal"===t.declaredClass}(t)?new y({portal:t}):function(t){return t&&!(t instanceof y)&&(!!t.portal||!!t.query)}(t)?new y(t):function(t){return t&&"basemaps"in t&&"state"in t&&"refresh"in t}(t)?t:null}get state(){return this.get("view.ready")&&this.source?"ready":"disabled"}basemapEquals(t,e){return c(t,e)}refresh(){this._recreateItems()}load(t){return this.addResolvingPromise(a.isLoadable(this.source)?this.source.load(t):i()),i(this)}_recreateItems(){const t=this.get("source.basemaps"),{view:e,compatibilityFunction:s}=this;this.items.removeAll().forEach((t=>t.destroy())),this.items.addMany(t.map((t=>new d({basemap:t,compatibilityFunction:s,view:e}))))}_updateItems(){this.items.forEach((t=>{t.compatibilityFunction=this.compatibilityFunction,t.view=this.view}))}};t([e({aliasOf:"view.map.basemap"})],f.prototype,"activeBasemap",void 0),t([e({dependsOn:["view.type"]})],f.prototype,"compatibilityFunction",null),t([e({readOnly:!0,type:b})],f.prototype,"items",void 0),t([e()],f.prototype,"source",void 0),t([s("source")],f.prototype,"castSource",null),t([e({readOnly:!0,dependsOn:["view.ready"]})],f.prototype,"state",null),t([e()],f.prototype,"view",void 0),f=t([o("esri.widgets.BasemapGallery.BasemapGalleryViewModel")],f);var v=f;export default v;
