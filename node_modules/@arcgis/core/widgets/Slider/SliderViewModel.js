/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as e}from"../../core/maybe.js";import s from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import i from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import n from"../../core/Accessor.js";const l=s.getLogger("esri.widgets.Slider.SliderViewModel");let a=class extends n{constructor(t){super(t),this.precision=4,this.thumbsConstrained=!0}set labelFormatFunction(t){this._set("labelFormatFunction",t)}set inputFormatFunction(t){this._set("inputFormatFunction",t)}set inputParseFunction(t){this._set("inputParseFunction",t)}get labels(){const{max:t,min:e,values:s}=this,r=s&&s.length?s.map(((t,e)=>this.getLabelForValue(t,"value",e))):[];return{max:this.getLabelForValue(t,"max"),min:this.getLabelForValue(e,"min"),values:r}}set max(t){this.setMax(t)}set min(t){this.setMin(t)}get state(){const{max:t,min:s}=this;return e(t)&&e(s)?"ready":"disabled"}set values(t){const{max:s,min:r}=this,o=this.values;o&&t&&o.length===t.length&&o.every(((e,s)=>e===t[s]))||(this._set("values",null),t&&t.length&&(e(r)&&t.some((t=>t<r))&&(this.min=Math.min(...t)),e(s)&&t.some((t=>t>s))&&(this.max=Math.max(...t))),this._set("values",t))}toPrecision(t){return parseFloat(t.toFixed(this.precision))}defaultLabelFormatFunction(t){const{max:e,min:s,precision:r}=this,o=e-s>10?2:r;return parseFloat(t.toFixed(o)).toString()}defaultInputFormatFunction(t){return t.toString()}defaultInputParseFunction(t){return parseFloat(t)}getBoundsForValueAtIndex(t){const{thumbsConstrained:s,max:r,min:o,values:i}=this;if(s){const s=t-1,n=t+1;return{min:e(i[s])?i[s]:o,max:e(i[n])?i[n]:r}}return{min:o,max:r}}getLabelForValue(t,s,r){return e(t)?this.labelFormatFunction?this.labelFormatFunction(t,s,r):this.defaultLabelFormatFunction(t):null}setMax(t){const{max:e,values:s}=this;if(isNaN(t))return void this._logError("slider:invalid-value","Property 'max' must of type 'number'.");if(null===t)return void this._set("max",null);const r=this.toPrecision(t);if(e!==r&&(this._set("max",r),s&&s.length))for(let t=0;t<s.length;t++)r<s[t]&&this.setValue(t,r)}setMin(t){const{min:e,values:s}=this;if(isNaN(t))return void this._logError("slider:invalid-value","Property 'min' must of type 'number'.");if(null===t)return void this._set("min",null);const r=this.toPrecision(t);if(e!==r&&(this._set("min",r),s&&s.length))for(let t=0;t<s.length;t++)r>s[t]&&this.setValue(t,r)}setValue(t,e){if(isNaN(e))return void this._logError("slider:invalid-value","Members of property 'values' must of type 'number'.");const{values:s}=this,r=s[t],o=this.toPrecision(e);if(r===o)return;const i=[...s];i[t]=o,this._set("values",i),this.notifyChange("labels")}_logError(t,e,s){l.error(new i(t,e,s))}};t([r()],a.prototype,"labelFormatFunction",null),t([r()],a.prototype,"inputFormatFunction",null),t([r()],a.prototype,"inputParseFunction",null),t([r({dependsOn:["labelFormatFunction","max","min","values"],readOnly:!0})],a.prototype,"labels",null),t([r()],a.prototype,"max",null),t([r()],a.prototype,"min",null),t([r()],a.prototype,"precision",void 0),t([r({dependsOn:["max","min"],readOnly:!0})],a.prototype,"state",null),t([r()],a.prototype,"thumbsConstrained",void 0),t([r()],a.prototype,"values",null),a=t([o("esri.widgets.Slider.SliderViewModel")],a);var u=a;export default u;
