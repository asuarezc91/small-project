/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import r from"../../../core/Accessor.js";import s from"../../../core/Collection.js";let i=class extends r{constructor(e){super(e),this.cellClassNameGenerator=null,this.columnReorderingEnabled=!0,this.columns=new s,this.dataProvider=async({page:e,pageSize:o},t)=>{const{store:r}=this;t&&(r?t(await r.fetchItems({page:e,pageSize:o})):t&&t([]))},this.pageSize=50,this.rowDetailsRenderer=null,this.store=null}get size(){return this.store&&this.store.count||0}get state(){const{store:e}=this;return e&&"disabled"!==e.state?"loading"===e.state?"loading":"ready":"disabled"}closeColumnMenus(){var e;null==(e=this.columns)||e.forEach((e=>{var o;return null==(o=e.menu)?void 0:o.set("open",!1)}))}sortColumn(e,o){const t=this.findColumn(e);t&&(t.direction=o)}hideColumn(e){const o=this.findColumn(e);o&&(o.hidden=!0)}showColumn(e){const o=this.findColumn(e);o&&(o.hidden=!1)}showAllColumns(){this.columns.forEach((e=>e.hidden=!1))}findColumn(e){return this.columns.find((o=>o.path===e))}getRowItemAt(e){return this.store&&this.store.getLocalItemAt(e)}refresh(){this.store&&(this.store.reset(),this.store.load())}};e([o()],i.prototype,"cellClassNameGenerator",void 0),e([o()],i.prototype,"columnReorderingEnabled",void 0),e([o()],i.prototype,"columns",void 0),e([o()],i.prototype,"dataProvider",void 0),e([o()],i.prototype,"pageSize",void 0),e([o()],i.prototype,"rowDetailsRenderer",void 0),e([o({readOnly:!0,dependsOn:["store.count"]})],i.prototype,"size",null),e([o()],i.prototype,"store",void 0),e([o({dependsOn:["store","store.querying","store.state","store.syncing"],readOnly:!0})],i.prototype,"state",null),i=e([t("esri.widgets.FeatureTable.Grid.GridViewModel")],i);var n=i;export default n;
