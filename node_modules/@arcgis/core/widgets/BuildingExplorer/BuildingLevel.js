/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as s}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{findFieldInfoByModelName as t}from"./support/buildingLayerUtils.js";import{getDomainInfo as i}from"./support/validation.js";import o from"./BuildingNumericFilterViewModel.js";import{getValueFromFilters as p}from"./support/filterUtils.js";let a=class extends o{constructor(){super(...arguments),this._levelFieldName=null,this._parseValueFromFilter=e=>{const l=new RegExp(`${this._levelFieldName}\\s*=\\s*(\\d+)`,"gi"),r=new RegExp(`${this._levelFieldName}\\s*<\\s*(\\d+)`,"gi");for(const{filterMode:t,filterExpression:i}of e.filterBlocks.items){let e=null;if("solid"===t.type?e=l.exec(i):"x-ray"===t.type&&(e=r.exec(i)),s(e))return parseInt(e[1],10)}return null}}get filterExpressions(){return this.enabled&&this._levelFieldName?{xRay:`${this._levelFieldName} < ${this.value}`,solid:`${this._levelFieldName} = ${this.value}`}:{solid:null,xRay:null}}get _firstValue(){const e=this.allowedValues;return e.length>0?e[0]:0}_setup(){const e=[];this.layers.forEach((l=>{const r=t(l,"bldglevel");s(r)&&(this._levelFieldName=r.fieldName,e.push(r))})),this._domainInfo=i(e);const l=p(this.layers,this._parseValueFromFilter);s(l)?this.select(l):(this.enabled=!1,this.value=this._firstValue)}};e([l({readOnly:!0,dependsOn:["enabled","value","_levelFieldName"]})],a.prototype,"filterExpressions",null),e([l()],a.prototype,"_levelFieldName",void 0),e([l({readOnly:!0,dependsOn:["allowedValues.length"]})],a.prototype,"_firstValue",null),a=e([r("esri.widgets.BuildingExplorer.BuildingLevel")],a);var n=a;export default n;
