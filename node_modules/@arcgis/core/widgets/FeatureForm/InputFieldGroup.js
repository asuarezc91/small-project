/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as i}from"../../chunks/tslib.es6.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{aliasOf as e}from"../../core/accessorSupport/decorators/aliasOf.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import o from"../../core/Accessor.js";import{HandleOwnerMixin as r}from"../../core/HandleOwner.js";let l=class extends(r(o)){constructor(i){super(i),this.arcade=null,this.config=null,this.description=null,this.feature=null,this.label=null,this.state=null,this.visibilityExpression=null}get compiledFunc(){const{arcade:i}=this;return i&&i.arcadeUtils.createFunction(this.visibilityExpression)}get evaluatedVisibility(){const i=this.compiledFunc;if(!i)return;const{arcade:t}=this;return t.arcadeUtils.executeFunction(i,t.arcadeUtils.createExecContext(this.feature))}get inputFields(){return this._get("inputFields")}set inputFields(i){this.handles.removeAll(),i&&this.handles.add(i.map((i=>i.watch("visible",this._dirtyEvaluatedVisibility)))),this._set("inputFields",i)}get visible(){return!1!==this.evaluatedVisibility&&this.inputFields&&this.inputFields.some((i=>i.visible))}_dirtyEvaluatedVisibility(){this.visibilityExpression&&this.notifyChange("evaluatedVisibility")}};i([t()],l.prototype,"arcade",void 0),i([t({dependsOn:["arcade","visibilityExpression"]})],l.prototype,"compiledFunc",null),i([t()],l.prototype,"config",void 0),i([t({dependsOn:["compiledFunc","feature"]})],l.prototype,"evaluatedVisibility",null),i([e("config.description")],l.prototype,"description",void 0),i([t()],l.prototype,"feature",void 0),i([t()],l.prototype,"inputFields",null),i([e("config.label")],l.prototype,"label",void 0),i([e("config.state")],l.prototype,"state",void 0),i([e("config.visibilityExpression")],l.prototype,"visibilityExpression",void 0),i([t({dependsOn:["evaluatedVisibility","inputFields"]})],l.prototype,"visible",null),l=i([s("esri.widgets.FeatureForm.InputFieldGroup")],l);var p=l;export default p;
