/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isNone as t}from"../../core/maybe.js";import r from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import i from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{reject as a,isAbortError as n,resolve as l,create as u,isPromiseLike as c}from"../../core/promiseUtils.js";import p from"../../core/Evented.js";import h from"../../core/Collection.js";import{getLocale as d}from"../../intl/locale.js";import m from"../../Color.js";import g from"../../symbols/SimpleLineSymbol.js";import v from"../../symbols/PictureMarkerSymbol.js";import y from"../../symbols/SimpleMarkerSymbol.js";import"../../chunks/symbols.js";import f from"../../Graphic.js";import w from"../../core/Handles.js";import{on as b,init as _,watch as T}from"../../core/watchUtils.js";import S from"../../tasks/support/FeatureSet.js";import L from"../../layers/GraphicsLayer.js";import{GoToMixin as R}from"../support/GoTo.js";import D from"../../tasks/RouteTask.js";import{graphicsExtent as C}from"../../geometry/support/graphicsUtils.js";import A from"../../tasks/support/RouteParameters.js";import{isWaypoint as M,isStopLocated as j,isFirstStop as N,isLastStop as O}from"./support/directionsUtils.js";const z=r.getLogger("esri.widgets.Directions.DirectionsViewModel"),U={first:new y({color:[105,220,255,1],size:19,outline:{color:[51,51,51,1],width:3}}),middle:new y({color:[51,51,51,1],size:12,outline:{color:[105,220,255,1],width:3}}),last:new v({width:23,height:23,url:`data:image/svg+xml;base64,${btoa('<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><g fill-rule="nonzero" fill="none"><path d="M15.15.3C6.9.3.3 6.9.3 15.15S6.9 29.7 15.15 29.7 29.7 23.1 29.7 15.15C29.7 6.9 23.25.3 15.15.3z" fill="#333"/><path d="M15 4.8C9.3 4.8 4.8 9.45 4.8 15c0 5.55 4.65 10.2 10.2 10.2 5.55 0 10.2-4.5 10.2-10.2 0-5.55-4.5-10.2-10.2-10.2z" fill="#69DCFF"/><path fill="#333" d="M10.5 10.5h9v9h-9z"/></g></svg>')}`}),unlocated:new v({height:18,width:18,url:`data:image/svg+xml;base64,${btoa('<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><path d="M10.1.2C4.6.2.2 4.6.2 10.1s4.4 9.7 9.9 9.7 9.7-4.4 9.7-9.7c0-5.5-4.3-9.9-9.7-9.9z" fill="#333" fill-rule="nonzero"/><path d="M10 2.7c-4.08 0-7.3 3.328-7.3 7.3s3.328 7.3 7.3 7.3 7.3-3.22 7.3-7.3c0-3.972-3.22-7.3-7.3-7.3z" fill="#69DCFF" fill-rule="nonzero"/><path d="M11.414 10l5.304-5.303-1.415-1.415L10 8.586 4.697 3.282 3.282 4.697 8.586 10l-5.304 5.303 1.415 1.415L10 11.414l5.303 5.304 1.415-1.415L11.414 10z" fill="#333"/></g></svg>')}`}),waypoint:new y({color:[255,255,255,1],size:10,outline:{color:[20,89,127,1],width:2.5}})};let k=class extends(R(p.EventedAccessor)){constructor(e){super(e),this._handles=new w,this._routeLayer=new L({listMode:"hide"}),this._highlightLayer=new L({listMode:"hide"}),this._stopId=9999,this._stopLayer=new L({listMode:"hide"}),this._serviceDescriptionLoadStatus=0,this.departureTime="now",this.lastRoute=null,this.routeSymbol=new g({color:[105,220,255,1],width:7,cap:"round",join:"round"}),this.routeParameters=new A({doNotLocateOnRestrictedElements:!0,ignoreInvalidLocations:!0,directionsOutputType:"complete",findBestSequence:!1,preserveFirstStop:!0,preserveLastStop:!0,restrictUTurns:"at-dead-ends-and-intersections",directionsLengthUnits:"kilometers",returnBarriers:!1,returnDirections:!0,returnPolygonBarriers:!1,returnPolylineBarriers:!1,returnRoutes:!1,returnStops:!0,returnZ:!0,startTime:null,startTimeIsUTC:!0,stops:null,useHierarchy:!0,useTimeWindows:!1}),this.routeServiceUrl="https://route.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World",this.serviceDescription=null,this.error=null,this.stops=new h,this.view=null}initialize(){this._handles.add([b(this,"stops","change",(()=>{this.clearResults(),this._addStopsToLayer()})),_(this,"view.map",((e,t)=>{const r=[this._routeLayer,this._stopLayer,this._highlightLayer];t&&t.removeMany(r),e&&e.addMany(r)})),T(this,"lastRoute",(()=>this._addRouteToLayer()))])}destroy(){this.stops.destroy();const e=this.get("view.map");e&&e.removeMany([this._routeLayer,this._stopLayer,this._highlightLayer])}get _directionsLanguage(){const{routeParameters:e,serviceDescription:t}=this,{directionsSupportedLanguages:r}=t;if(!r)return;const s=(e.directionsLanguage||d()).slice(0,2);return r.find((e=>e.toLowerCase().slice(0,2)===s))}get _routeTask(){return new D(this.routeServiceUrl)}get impedanceAttribute(){const e=this.get("routeParameters.travelMode.impedanceAttributeName")||this.get("routeParameters.impedanceAttribute")||this.get("serviceDescription.impedance");return this.getCostAttribute(e)}set maxStops(e){e=e<=2?2:e>50?50:e,this._set("maxStops",e)}get selectedTravelMode(){const{serviceDescription:e}=this;if(!e)return null;const{defaultTravelMode:t,supportedTravelModes:r=[]}=e;let s=null;for(let e=0;e<r.length;e++)r[e].id===t&&(s=r[e]);return s||r[0]||null}set selectedTravelMode(e){void 0!==e?this._override("selectedTravelMode",e):this._clearOverride("selectedTravelMode")}get state(){const e=this._serviceDescriptionLoadStatus;return 4===e?"unauthenticated":0===e?"disabled":1===e?"initializing":this._activeRouteController?"routing":3===e||this.error?"error":"ready"}set stopSymbols(e){const t={...U,...e};this._set("stopSymbols",t)}get timeAttribute(){const e=this.get("routeParameters.travelMode.timeAttributeName")||this.get("routeParameters.directionsTimeAttribute")||this.get("serviceDescription.directionsTimeAttribute");return this.getCostAttribute(e)}get travelModes(){return this.get("serviceDescription.supportedTravelModes")||[]}async load(){if(!this.serviceDescription)try{this._serviceDescriptionLoadStatus=1,this.notifyChange("state"),await this._loadServiceDescription(),this._serviceDescriptionLoadStatus=2,this.notifyChange("state")}catch(e){const t="identity-manager:user-aborted"===e.name;if(this._serviceDescriptionLoadStatus=t?4:3,this.notifyChange("state"),!t){const t=new i("directions-view-model:service-metadata-unavailable","Cannot load route service metadata",{error:e});throw this._set("error",t),t}}}highlightSegment(e){const{view:r,_highlightLayer:s}=this;if(!r||t(e.symbol))return;this.clearHighlights();const o=e.symbol.clone();o.color=new m([0,0,0,.8]),o.width=Math.ceil(o.width/2);const i=new f({geometry:e.geometry,symbol:o});s.graphics.add(i)}clearHighlights(){this._highlightLayer.graphics.removeAll()}centerAt(e){const{view:t}=this;t&&this.callGoTo({target:e})}clearResults(){this._set("lastRoute",null)}getDirections(){const{state:e}=this;if("unauthenticated"===e||"initializing"===e||"disabled"===e||3===this._serviceDescriptionLoadStatus)return a(new i("directions-view-model:not-loaded","Cannot get directions until view model loads."));this._set("error",null),this._activeRouteController&&(this._activeRouteController.abort(),this._activeRouteController=null);const{departureTime:t}=this,r="now"===t,s="now"===t?new Date:t;if(!r){const e=60*s.getTimezoneOffset()*1e3;s.setTime(s.getTime()-e)}if(this.routeParameters.set({startTime:s,startTimeIsUTC:r,directionsLanguage:this._directionsLanguage}),this.selectedTravelMode&&this.routeParameters.set({travelMode:this.selectedTravelMode}),this.stops.length<=1){const e=new i("directions-view-model:not-enough-stops","Not enough stops for routing");return this._set("error",e),a(e)}const o=new AbortController,{signal:l}=o;this._activeRouteController=o;const u=this._enqueue((()=>{const e=this.stops.clone().toArray(),t={},r=r=>{const s=r&&r.routeResults&&r.routeResults[0]&&r.routeResults[0].stops||[];(r&&r.routeResults&&r.routeResults[0]&&r.routeResults[0].directions&&r.routeResults[0].directions.features||[]).map((r=>{for(let s=0;s<e.length;s++)if(r.attributes.text.indexOf(e[s].attributes.Name)>-1){const o=e[s].attributes.Name;r.attributes.text=r.attributes.text.replace(o,t[o]),r._associatedStop=e[s];break}})),e.map((e=>e.attributes.Name=t[e.attributes.Name])),s.map((e=>{e.attributes.Name=t[e.attributes.Name]}))},s=e=>{if(e&&e.routeResults&&e.routeResults[0]){const t=e.routeResults[0],r=t.stops||[],s=this.stops.clone().toArray();let o=t.directions&&t.directions.routeName||t.routeName||"";r.map(((e,t)=>{const r=e.attributes,i=s[t].attributes;o=o.replace(r.Name,i.Name),Object.keys(r).forEach((e=>{0===e.indexOf("Cumul_")&&(i[e]=r[e])})),i.ArriveCurbApproach=r.ArriveCurbApproach,i.ArriveTime=r.ArriveTime,i.ArriveTimeUTC=r.ArriveTimeUTC,i.DepartCurbApproach=r.DepartCurbApproach,i.DepartTime=r.DepartTime,i.DepartTimeUTC=r.DepartTimeUTC,i.Sequence=r.Sequence,i.Status=r.Status})),t.directions&&(t.directions.routeName=o),null!==t.route&&(t.route.attributes.Name=o),t.routeName=o}},o=e=>{const r=e&&e.routeResults&&e.routeResults[0]&&e.routeResults[0].stops||[],s=this.stops.toArray();let o=r.length===s.length,i=0;for(;o&&i<r.length;)o=o&&t[r[i].attributes.Name]===s[i++].attributes.Name;return o};return(()=>{e.map((e=>{const r=e.attributes,s=`${(r.Name||"[not yet geocoded]").substr(0,100)}_#${++this._stopId}`;t[s]=r.Name,r.Name=s}))})(),this.routeParameters.set({stops:new S({features:e})}),this._routeTask.solve(this.routeParameters,{signal:l}).then((e=>o(e)?(s(e),r(e),this._set("lastRoute",e),e):(z.warn("Response stops don't match current stops of the ViewModel, invalidating the results."),this._set("lastRoute",null),null))).catch((e=>{throw r(null),e}))})).then((e=>(this._activeRouteController=null,this.notifyChange("state"),this.zoomToRoute(),e))).catch((e=>{if(this._activeRouteController=null,this.notifyChange("state"),!n(e))throw e=new i("directions-view-model:unable-to-route","Unable to route to these addresses",{error:e}),this._set("error",e),e}));return this.notifyChange("state"),u}getCostAttribute(e){const t=this.serviceDescription&&this.serviceDescription.networkDataset.networkAttributes||[];let r="";for(let s=0;s<t.length;s++)if(t[s].name===e&&"esriNAUTCost"===t[s].usageType){r=t[s];break}return r}reset(){this.stops.removeAll(),this.clearHighlights(),this._set("lastRoute",null)}zoomToRoute(){const{directionLines:e,view:t}=this;if(!e||!t)return;const r=C(e),s=r.width>r.height;this.callGoTo({target:r.expand(s?2:1)})}async _loadServiceDescription(){const e=await this._routeTask.getServiceDescription();this._set("serviceDescription",e)}_enqueue(e){this._requestQueueTail||(this._requestQueueTail=l());const t=u(((t,r)=>{this._requestQueueTail.catch((()=>{})).then((()=>{try{const s=e.call(this);c(s)?s.then(t,r):t(s)}catch(e){r(e)}}))}));return this._requestQueueTail=t,t}_addStopsToLayer(){this._stopLayer.graphics.removeAll();const e=this.stops.clone().map(((e,t)=>{const{first:r,middle:s,last:o,unlocated:i,waypoint:a}=this.stopSymbols;return M(e)?e.symbol=a:void 0===e.attributes.Status?e.symbol=0===t?r:t===this.stops.length-1?o:s:e.symbol=M(e)?a:j(e)?N(e)?r:O(e)?o:s:i,e}));this._stopLayer.graphics.addMany(e)}_addRouteToLayer(){this._routeLayer.graphics.removeAll();const{directionLines:e}=this;e&&(e.forEach((e=>{e.symbol=this.routeSymbol})),this._routeLayer.graphics.addMany(e))}};e([s({dependsOn:["serviceDescription","routeParameters.directionsLanguage"]})],k.prototype,"_directionsLanguage",null),e([s({dependsOn:["routeServiceUrl"],type:D})],k.prototype,"_routeTask",null),e([s()],k.prototype,"departureTime",void 0),e([s({aliasOf:"lastRoute.routeResults.0.directions.features"})],k.prototype,"directionLines",void 0),e([s({readOnly:!0,dependsOn:["routeParameters","serviceDescription"]})],k.prototype,"impedanceAttribute",null),e([s({readOnly:!0})],k.prototype,"lastRoute",void 0),e([s({value:50})],k.prototype,"maxStops",null),e([s()],k.prototype,"routeSymbol",void 0),e([s({type:A})],k.prototype,"routeParameters",void 0),e([s()],k.prototype,"routeServiceUrl",void 0),e([s({dependsOn:["serviceDescription"]})],k.prototype,"selectedTravelMode",null),e([s({readOnly:!0})],k.prototype,"serviceDescription",void 0),e([s({dependsOn:["error"],readOnly:!0})],k.prototype,"state",null),e([s()],k.prototype,"error",void 0),e([s({type:h})],k.prototype,"stops",void 0),e([s({value:U})],k.prototype,"stopSymbols",null),e([s({readOnly:!0,dependsOn:["routeParameters","serviceDescription"]})],k.prototype,"timeAttribute",null),e([s({dependsOn:["serviceDescription"]})],k.prototype,"travelModes",null),e([s()],k.prototype,"view",void 0),e([s()],k.prototype,"getDirections",null),e([s()],k.prototype,"zoomToRoute",null),k=e([o("esri.widgets.Directions.DirectionsViewModel")],k);var x=k;export default x;
