/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{formatDate as t}from"../../../intl/date.js";import{formatNumber as e}from"../../../intl/number.js";import{substitute as r}from"../../../intl/substitute.js";import"../../../intl.js";function n(t,e){return!(!M(t)||!e||-22091616e5===t.get("attributes.ETA"))}function i(r,n,i,s){const u=new Date(i),o=new Date(u.getTime()+60*u.getTimezoneOffset()*1e3),a=t(o,{hour:"2-digits",minute:"2-digits",hour12:!1});if(n){const t=(i-n)/1e3/60/60,s=Math.floor(t),u=60*(t-s),o=e(s,{minimumIntegerDigits:2}),c=e(u,{minimumIntegerDigits:2});return`${a} ${r.gmt}${s<0?"":"+"}${o}${c}`}return s?t(o,{hour:"numeric",minute:"numeric"}):a}function s(t){return"esriNAUSeconds"===t||"esriNAUMinutes"===t||"esriNAUHours"===t||"esriNAUDays"===t}function u(t,e,r){const n=s(e),i=s(r),u=n?o(t,e):c(t,e);return n===i?i?a(u,r):l(u,r):t}function o(t,e,r){switch(t=t||0,e){case"esriNAUSeconds":t/=Math.pow(60,r?-1:1);break;case"esriNAUHours":t*=Math.pow(60,r?-1:1);break;case"esriNAUDays":t*=Math.pow(1440,r?-1:1)}return t}function a(t,e){return o(t,e,!0)}function c(t,e,r){switch(t=t||0,(e||"").replace("esriNAU","esri")){case"esriInches":t*=Math.pow(.0254,r?-1:1);break;case"esriFeet":t*=Math.pow(.3048,r?-1:1);break;case"esriYards":t*=Math.pow(.9144,r?-1:1);break;case"esriMiles":t*=Math.pow(1609.344,r?-1:1);break;case"esriNauticalMiles":t*=Math.pow(1851.995396854,r?-1:1);break;case"esriMillimeters":t/=Math.pow(1e3,r?-1:1);break;case"esriCentimeters":t/=Math.pow(100,r?-1:1);break;case"esriKilometers":t*=Math.pow(1e3,r?-1:1);break;case"esriDecimeters":t/=Math.pow(10,r?-1:1)}return t}function l(t,e){return c(t,e,!0)}function p(t){const e=t&&t.attributes||{};return null===(e.ArriveCurbApproach||null)&&null!==(e.DepartCurbApproach||null)}function m(t){const e=t&&t.attributes||{};return null!==(e.ArriveCurbApproach||null)&&null!==(e.DepartCurbApproach||null)}function f(t){const e=t&&t.attributes||{};return null!==(e.ArriveCurbApproach||null)&&null===(e.DepartCurbApproach||null)}function h(t){return t&&t.get("attributes.isWaypoint")}function b(t){const e=t&&t.get("attributes.Status");return!e||6===e}function M(t){return t._associatedStop}function w(t,e={}){const{unit:r="minutes"}=e;return function(t,e){e=e.toLowerCase();const r=24,n=60,i=60,s="days"===e?t*r:"hours"===e?t:"minutes"===e?t/n:t/n/i;if(s<1)return`${Math.floor(s*i)}m`;const u=s%1*n;return`${Math.floor(s)}:${String(Math.floor(u)).padStart(2,"0")}h`}(t,r)}function A(t,e,n,i={}){const{fromUnits:s,toUnits:o}=i,a=u(n,s,o);if(!a)return"";const c=e.units[o],l=c?c.abbr:o.replace("esri","").toLowerCase();return r(t.distanceTemplate,{distance:a,units:l},{format:{distance:{type:"number",intlOptions:{minimumFractionDigits:2,maximumFractionDigits:2}}}})}export{u as convertCostValue,A as formatDistance,w as formatTime,l as fromMeters,a as fromMinutes,M as getAssociatedStop,p as isFirstStop,f as isLastStop,m as isMiddleStop,b as isStopLocated,s as isTimeUnits,h as isWaypoint,c as toMeters,o as toMinutes,i as toSpatiallyLocalTimeString,n as useSpatiallyLocalTime};
