/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import o from"../../../core/Accessor.js";import{isTimeUnits as r,formatTime as i,formatDistance as n}from"./directionsUtils.js";let c=class extends o{constructor(){super(...arguments),this.messages=null,this.messagesUnits=null}get primary(){const e=this.get("directionsViewModel.lastRoute.routeResults.0.directions"),t=this.directionsViewModel.impedanceAttribute,s=this.get("directionsViewModel.routeParameters.directionsLengthUnits");return r(t.units)?i(e.totalTime,{unit:t.units.replace("esriNAU","")}):n(this.messages,this.messagesUnits,e.totalLength,{toUnits:s})}get secondary(){const e=this.get("directionsViewModel.lastRoute.routeResults.0.directions"),t=this.get("directionsViewModel.routeParameters.directionsLengthUnits"),{impedanceAttribute:s}=this.directionsViewModel;return r(s.units)?n(this.messages,this.messagesUnits,e.totalLength,{toUnits:t}):i(e.totalTime)}};e([t()],c.prototype,"directionsViewModel",void 0),e([t()],c.prototype,"messages",void 0),e([t()],c.prototype,"messagesUnits",void 0),e([t({dependsOn:["directionsViewModel.lastRoute"],readOnly:!0})],c.prototype,"primary",null),e([t({dependsOn:["directionsViewModel.lastRoute"],readOnly:!0})],c.prototype,"secondary",null),c=e([s("esri.widgets.Directions.support.CostSummary")],c);var p=c;export default p;
