/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{isSome as t}from"../core/maybe.js";import s from"../request.js";import{normalizeCentralMeridian as o}from"../geometry/support/normalizeUtils.js";import{parseUrl as n,encode as r,asValidOptions as e}from"./utils.js";import a from"../tasks/support/ImageIdentifyResult.js";async function i(s,a,i){const m=n(s),u=a.geometry?[a.geometry]:[],c=await o(u),f=a.toJSON();!function(t){const s=null==t?void 0:t.time;if(s&&(null!=s.start||null!=s.end)){const o=[];null!=s.start&&o.push(s.start),null!=s.end&&-1===o.indexOf(s.end)&&o.push(s.end),t.time=o.join(",")}}(f);const g=c&&c[0];t(g)&&(f.geometry=g.toJSON());const l=r({...m.query,f:"json",...f});return e(l,i)}async function m(t,o,r){const e=await i(t,o,r),a=n(t),{data:m}=await s(`${a.path}/computeStatisticsHistograms`,e),{statistics:u}=m;return null!=u&&u.length&&u.forEach((t=>{t.avg=t.mean,t.stddev=t.standardDeviation})),{statistics:u,histograms:m.histograms}}async function u(t,o,r){const e=await i(t,o,r),a=n(t),{data:m}=await s(`${a.path}/computeHistograms`,e);return{histograms:m.histograms}}async function c(i,m,u){const c=n(i),f=m.geometry?[m.geometry]:[];return o(f).then((o=>{const n=m.toJSON(),a=o&&o[0];t(a)&&(n.geometry=JSON.stringify(a.toJSON()));const i=r({...c.query,f:"json",...n}),f=e(i,u);return s(c.path+"/identify",f)})).then((t=>a.fromJSON(t.data)))}export{u as computeHistograms,m as computeStatisticsHistograms,c as identify};
